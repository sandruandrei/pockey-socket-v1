{"version":3,"sources":["src/GameFiles/Modules/SignalsModule/pockey-signal-types.ts","src/Framework/Signals/SignalBinding.ts","src/Framework/Signals/Signal.ts","src/Framework/Signals/signals-manager.ts","src/Framework/Signals/signal-types.ts","src/Framework/Abstracts/abstract-module.ts","src/Framework/Settings.ts","src/GameFiles/Modules/StateMachine/typestate.ts","src/GameFiles/Modules/StateMachine/pockey-state-machine.ts","src/Framework/Utils/Vector2.ts","src/Framework/Utils/pixi-dashed-line.ts","src/Framework/Utils/button-state.ts","src/Framework/Utils/mouse-handler.ts","src/PockeyEntryPoint/pockey-settings.ts","src/GameFiles/Modules/SoundModule/pockey-sound-names.ts","src/GameFiles/Modules/GameModule/p2-world-manager.ts","src/Framework/Utils/Line.ts","src/Framework/Loaders/assets-loader.ts","src/Framework/AbstractModules/Background/abstract-background-module.ts","src/Framework/AbstractModules/UserInterface/abstract-user-interface-module.ts","src/Framework/Utils/touch-handler.ts","src/Framework/AbstractModules/Connection/connection-channels-and-messages.ts","src/Framework/AbstractModules/Connection/socket-client.ts","src/Framework/AbstractModules/Connection/login-handler.ts","src/Framework/AbstractModules/Connection/abstract-connection-module.ts","src/Framework/Abstracts/layers.ts","src/Framework/AbstractModules/Connection/database-connector.ts","src/Framework/AbstractModules/Sound/abstract-sound-module.ts","src/Framework/abstract-entry-point.ts","src/GameFiles/Modules/GameModule/balls/abstract-ball.ts","src/Framework/Utils/Rect.ts","src/GameFiles/Modules/GameModule/decal.ts","src/GameFiles/Modules/ConnectionModule/pocket-connection-channels-and-messages.ts","src/GameFiles/Modules/GameModule/stick.ts","src/GameFiles/Modules/GameModule/stick-mobile.ts","src/GameFiles/Modules/GameModule/balls/puck.ts","src/GameFiles/Modules/GameModule/balls/white-ball.ts","src/GameFiles/Modules/GameModule/puck-goal.ts","src/GameFiles/Modules/StateMachine/pockey-state-texts.ts","src/GameFiles/Modules/GameModule/goalie.ts","src/GameFiles/Modules/GameModule/Pocket.ts","src/GameFiles/Modules/GameModule/pool-table.ts","src/GameFiles/Modules/GameModule/goalkeepers-holder.ts","src/GameFiles/Modules/GameModule/pool-table-manager.ts","src/GameFiles/Modules/GameModule/pool-table-manager-mobile.ts","src/GameFiles/Modules/GameModule/mobile-stick-power.ts","src/GameFiles/Modules/GameModule/pockey-game-module.ts","src/GameFiles/Modules/GameModule/player.ts","src/Framework/Utils/CountdownTimer.ts","src/GameFiles/Modules/GameModule/game-manager.ts","src/GameFiles/Modules/BackgroundModule/pockey-background-module.ts","src/GameFiles/Modules/ConnectionModule/pocket-socket-client.ts","src/Framework/Utils/cookie.ts","src/GameFiles/Modules/ConnectionModule/pockey-login-handler.ts","src/GameFiles/Modules/ConnectionModule/pockey-connection-module.ts","src/GameFiles/Modules/UserInterface/Screens/pockey-ui-searching-screen.ts","src/Framework/Utils/text-field.ts","src/Framework/Utils/pixi-button.ts","src/GameFiles/Modules/UserInterface/Screens/MainScreen/DesignElements/player-color-customizer.ts","src/GameFiles/Modules/UserInterface/Screens/MainScreen/DesignElements/player-avatar-customizer.ts","src/GameFiles/Modules/UserInterface/Screens/MainScreen/DesignElements/login-elements.ts","src/GameFiles/Modules/UserInterface/Screens/MainScreen/DesignElements/tutorial-menu.ts","src/GameFiles/Modules/UserInterface/Screens/MainScreen/DesignElements/play-game-menu.ts","src/GameFiles/Modules/UserInterface/Screens/MainScreen/DesignElements/inventory-button.ts","src/GameFiles/Modules/UserInterface/Screens/MainScreen/DesignElements/inventory-box.ts","src/GameFiles/Modules/UserInterface/Screens/MainScreen/DesignElements/inventory-items-holder-buttons.ts","src/GameFiles/Modules/UserInterface/Screens/MainScreen/DesignElements/inventory-button-mobile.ts","src/GameFiles/Modules/UserInterface/Screens/MainScreen/DesignElements/inventory-menu.ts","src/GameFiles/Modules/UserInterface/Screens/MainScreen/pockey-ui-main-screen.ts","src/GameFiles/Modules/UserInterface/Screens/GameScreen/DesignElements/pockey-user-game-graphics.ts","src/GameFiles/Modules/UserInterface/Screens/GameScreen/DesignElements/pockey-ui-match-circle.ts","src/GameFiles/Modules/UserInterface/Screens/GameScreen/DesignElements/pockey-ui-versus-graphics.ts","src/GameFiles/Modules/UserInterface/Screens/GameScreen/pockey-ui-game-screen.ts","src/GameFiles/Modules/UserInterface/Screens/pockey-ui-winning-screen.ts","src/GameFiles/Modules/UserInterface/Screens/MainScreen/pockey-ui-main-screen-mobile.ts","src/Framework/AbstractModules/UserInterface/abstract-screen.ts","src/GameFiles/Modules/UserInterface/Screens/pockey-ui-opponent-found-screen.ts","src/GameFiles/Modules/UserInterface/Screens/pockey-ui-round-complete-screen.ts","src/GameFiles/Modules/UserInterface/pockey-user-interface-module.ts","src/PockeyEntryPoint/pockey-entry-point.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 7/23/2018\r\n */\r\n\r\nnamespace Pockey {\r\n    export module SignalsModule {\r\n        export class PockeySignalTypes {\r\n\r\n            public static PLAYER_SIGNED_OUT: string = \"PockeySignalTypes.\" + \"PLAYER_SIGNED_OUT\";\r\n            public static PLAYER_SIGNED_IN: string = \"PockeySignalTypes.\" + \"PLAYER_SIGNED_IN\";\r\n\r\n            public static GOOGLE_SIGN_IN: string = \"PockeySignalTypes.\" + \"GOOGLE_SIGN_IN\";\r\n            public static GOOGLE_SIGN_OUT: string = \"PockeySignalTypes.\" + \"GOOGLE_SIGN_OUT\";\r\n            public static FACEBOOK_SIGN_IN: string = \"PockeySignalTypes.\" + \"FACEBOOK_SIGN_IN\";\r\n            public static FACEBOOK_SIGN_OUT: string = \"PockeySignalTypes.\" + \"FACEBOOK_SIGN_OUT\";\r\n\r\n            public static GET_PLAYER_INFO: string = \"PockeySignalTypes.\" + \"GET_PLAYER_INFO\";\r\n\r\n            public static SHOOT_BALL: string = \"PockeySignalTypes.\" + \"SHOOT_BALL\";\r\n            public static PREPARE_NEXT_TURN: string = \"PockeySignalTypes.\" + \"PREPARE_NEXT_TURN\";\r\n            public static BALL_IN_POCKET: string = \"PockeySignalTypes.\" + \"BALL_IN_POCKET\";\r\n            public static WHITE_BALL_IN_POCKET: string = \"PockeySignalTypes.\" + \"WHITE_BALL_IN_POCKET\";\r\n            public static REACTIVATE_STICK: string = \"PockeySignalTypes.\" + \"REACTIVATE_STICK\";\r\n            public static REPOSITION_STICK: string = \"PockeySignalTypes.\" + \"REPOSITION_STICK\";\r\n            public static STICK_PIVOT_MOBILE_UPDATE: string = \"PockeySignalTypes.\" + \"STICK_PIVOT_MOBILE_UPDATE\";\r\n            public static STICK_MOBILE_RELEASE: string = \"PockeySignalTypes.\" + \"STICK_MOBILE_RELEASE\";\r\n            public static HIDE_STICK_POWER_MOBILE: string = \"PockeySignalTypes.\" + \"HIDE_STICK_POWER_MOBILE\";\r\n            public static SHOW_STICK_POWER_MOBILE: string = \"PockeySignalTypes.\" + \"SHOW_STICK_POWER_MOBILE\";\r\n            public static REPOSITION_WHITE_BALL: string = \"PockeySignalTypes.\" + \"REPOSITION_WHITE_BALL\";\r\n            public static WHITE_BALL_REPOSITIONED: string = \"PockeySignalTypes.\" + \"WHITE_BALL_REPOSITIONED\";\r\n            public static FIRST_BALL_FAULT: string = \"PockeySignalTypes.\" + \"FIRST_BALL_FAULT\";\r\n            public static HIDE_BALL_RAY_GRAPHICS: string = \"PockeySignalTypes.\" + \"HIDE_GRAPHICS\";\r\n            public static POOLSTICK_ACTIVATED: string = \"PockeySignalTypes.\" + \"POOLSTICK_ACTIVATED\";\r\n            public static POCKEY_POOL_TABLE_RESIZED: string = \"PockeySignalTypes.\" + \"RESIZE_BACKGROUND\";\r\n            public static START_GAME: string = \"PockeySignalTypes.\" + \"START_GAME\";\r\n            public static SHOW_MAIN_MENU: string = \"PockeySignalTypes.\" + \"SHOW_MAIN_MENU\";\r\n            public static HIDE_MAIN_MENU: string = \"PockeySignalTypes.\" + \"HIDE_MAIN_MENU\";\r\n\r\n            public static SHOW_POOLTABLE: string = \"PockeySignalTypes.\" + \"SHOW_POOLTABLE\";\r\n            public static HIDE_POOLTABLE: string = \"PockeySignalTypes.\" + \"HIDE_POOLTABLE\";\r\n\r\n            public static SHOW_GAME_UI: string = \"PockeySignalTypes.\" + \"SHOW_GAME_UI\";\r\n            public static HIDE_GAME_UI: string = \"PockeySignalTypes.\" + \"HIDE_GAME_UI\";\r\n\r\n            public static SHOW_SEARCHING_SCREEN: string = \"PockeySignalTypes.\" + \"SHOW_SEARCHING_SCREEN\";\r\n            public static HIDE_SEARCHING_SCREEN: string = \"PockeySignalTypes.\" + \"HIDE_SEARCHING_SCREEN\";\r\n\r\n            public static SHOW_ROUND_COMPLETE_SCREEN: string = \"PockeySignalTypes.\" + \"SHOW_ROUND_COMPLETE_SCREEN\";\r\n            public static HIDE_ROUND_COMPLETE_SCREEN: string = \"PockeySignalTypes.\" + \"HIDE_ROUND_COMPLETE_SCREEN\";\r\n            public static SHOW_OPPONENT_FOUND_SCREEN: string = \"PockeySignalTypes.\" + \"SHOW_OPPONENT_FOUND_SCREEN\";\r\n            public static HIDE_OPPONENT_FOUND_SCREEN: string = \"PockeySignalTypes.\" + \"HIDE_OPPONENT_FOUND_SCREEN\";\r\n\r\n            public static UPDATE_PLAYER_NAME: string = \"PockeySignalTypes.\" + \"UPDATE_PLAYER_NAME\";\r\n            public static UPDATE_PLAYER_SCORE: string = \"PockeySignalTypes.\" + \"UPDATE_PLAYER_SCORE\";\r\n            public static CHANGE_PLAYER_COLOR: string = \"PockeySignalTypes.\" + \"CHANGE_PLAYER_COLOR\";\r\n\r\n            public static UPDATE_OPPONENT_NAME: string = \"PockeySignalTypes.\" + \"UPDATE_OPPONENT_NAME\";\r\n            public static UPDATE_OPPONENT_SCORE: string = \"PockeySignalTypes.\" + \"UPDATE_OPPONENT_SCORE\";\r\n            public static CHANGE_OPPONENT_COLOR: string = \"PockeySignalTypes.\" + \"CHANGE_OPPONENT_COLOR\";\r\n\r\n            public static SET_SIDES_TYPE: string = \"PockeySignalTypes.\" + \"SET_SIDES_TYPE\";\r\n\r\n            public static SEND_ELEMENTS_DATA_TO_MANAGER: string = \"PockeySignalTypes.\" + \"SEND_ELEMENTS_DATA_TO_MANAGER\";\r\n            public static UPDATE_WINNING_MESSAGE: string = \"PockeySignalTypes.\" + \"UPDATE_WINNING_MESSAGE\";\r\n            public static RESTART_GAME: string = \"PockeySignalTypes.\" + \"RESTART_GAME\";\r\n            public static RESET_POOLTABLE: string = \"PockeySignalTypes.\" + \"RESET_POOLTABLE\";\r\n            public static RESET_STICK_POWER: string = \"PockeySignalTypes.\" + \"RESET_STICK_POWER\";\r\n            public static RESET_GAME_SCREEN: string = \"PockeySignalTypes.\" + \"RESET_GAME_SCREEN\";\r\n            public static MOBILE_WHITE_BALL_REPOSITION_CONFIRMED: string = \"PockeySignalTypes.\" + \"MOBILE_WHITE_BALL_REPOSITION_CONFIRMED\";\r\n            public static SHOW_WHITE_BALL_POSITION_CONFIRMER: string = \"PockeySignalTypes.\" + \"SHOW_WHITE_BALL_POSITION_CONFIRMER\";\r\n            public static HIDE_WHITE_BALL_POSITION_CONFIRMER: string = \"PockeySignalTypes.\" + \"HIDE_WHITE_BALL_POSITION_CONFIRMER\";\r\n            public static UPDATE_STATE_TEXT: string = \"PockeySignalTypes.\" + \"UPDATE_GAME_TEXT\";\r\n            public static UPDATE_CURRENT_PLAYER_TIMER: string = \"PockeySignalTypes.\" + \"UPDATE_CURRENT_PLAYER_TIMER\";\r\n            public static UPDATE_MY_TIMER: string = \"PockeySignalTypes.\" + \"UPDATE_MY_TIMER\";\r\n\r\n            public static UPDATE_UI_TEXT: string = \"PockeySignalTypes.\" + \"UPDATE_UI_TEXT\";\r\n            public static UPDATE_UI_TEXT_ON_WATCH: string = \"PockeySignalTypes.\" + \"UPDATE_UI_TEXT_ON_WATCH\";\r\n            public static ANIMATE_PUCK_GOAL: string = \"PockeySignalTypes.\" + \"ANIMATE_PUCK_GOAL\";\r\n            public static ANIMATE_PUCK_GOAL_STOP: string = \"PockeySignalTypes.\" + \"ANIMATE_PUCK_GOAL_STOP\";\r\n            public static UPDATE_MATCH_CIRCLES: string = \"PockeySignalTypes.\" + \"UPDATE_MATCH_CIRCLES\";\r\n            public static UPDATE_PLAYER_COLOR: string = \"PockeySignalTypes.\" + \"UPDATE_PLAYER_COLOR\";\r\n            public static CHECK_USER_DATA: string = \"PockeySignalTypes.\" + \"CHECK_USER_DATA\";\r\n            public static INVENTORY_ITEM_UPDATED: string = \"PockeySignalTypes.\" + \"INVENTORY_ITEM_UPDATED\";\r\n            public static CHANGE_PLAYER_AVATAR: string = \"PockeySignalTypes.\" + \"CHANGE_PLAYER_AVATAR\";\r\n            public static CHANGE_OPPONENT_AVATAR: string = \"PockeySignalTypes.\" + \"CHANGE_OPPONENT_AVATAR\";\r\n            public static SET_TIMESTAMP_ON_WATCH: string = \"PockeySignalTypes.\" + \"SET_TIMESTAMP_ON_WATCH\";\r\n            public static ON_WATCH_FINISHED: string = \"PockeySignalTypes.\" + \"ON_WATCH_FINISHED\";\r\n            public static CREATE_POOLTABLE_STATE: string = \"PockeySignalTypes.\" + \"CREATE_POOLTABLE_STATE\";\r\n            public static APPLY_POOLTABLE_STATE: string = \"PockeySignalTypes.\" + \"APPLY_POOLTABLE_STATE\";\r\n            public static UPDATE_CURRENT_ROUND_SCREEN_TEXT: string = \"PockeySignalTypes.\" + \"UPDATE_CURRENT_ROUND_SCREEN_TEXT\";\r\n            public static CHANGE_WHITE_BALL_STATUS: string = \"PockeySignalTypes.\" + \"CHANGE_WHITE_BALL_STATUS\";\r\n\r\n            // public static UPDATE_PLAYERS_NAMES: string = \"PockeySignalTypes.\" + \"UPDATE_PLAYERS_NAMES\";\r\n\r\n            // static UPDATE_PLAYERS_NAMES: string;\r\n            // public static CHANGE_BACKGRO: string = \"PockeySignalTypes.\" + \"start_game\";\r\n            // public static SHOOTING_ENDED: string = \"shooting_ended\";\r\n        }\r\n\r\n        export class PockeyConnectionSignals {\r\n            public static WATCH: string = \"PockeyConnectionSignals.\" + \"WATCH\";\r\n            public static SCORE_UPDATE: string = \"PockeyConnectionSignals.\" + \"SCORE_UPDATE\";\r\n            public static YOUR_TURN: string = \"PockeyConnectionSignals.\" + \"YOUR_TURN\";\r\n            public static OPPONENT_SETTINGS: string = \"PockeyConnectionSignals.\" + \"OPPONENT_SETTINGS\";\r\n            public static OPPONENT_NEXT_ROUND: string = \"PockeyConnectionSignals.\" + \"OPPONENT_NEXT_ROUND\";\r\n        }\r\n    }\r\n}\r\n","/// <reference path=\"Signal.ts\" />\r\n\r\n/*\r\n*\t@desc   \tAn object that represents a binding between a Signal and a listener function.\r\n*               Released under the MIT license\r\n*\t\t\t\thttp://millermedeiros.github.com/js-signals/\r\n*\r\n*\t@version\t1.0 - 7th March 2013\r\n*\r\n*\t@author \tRichard Davey, TypeScript conversion\r\n*\t@author\t\tMiller Medeiros, JS Signals\r\n*\t@author\t\tRobert Penner, AS Signals\r\n*\r\n*\t@url\t\thttp://www.kiwijs.org\r\n*\r\n*/\r\n\r\nnamespace Framework {\r\n    export class SignalBinding {\r\n\r\n        /**\r\n         * Object that represents a binding between a Signal and a listener function.\r\n         * <br />- <strong>This is an internal constructor and shouldn't be called by regular users.</strong>\r\n         * <br />- inspired by Joa Ebert AS3 SignalBinding and Robert Penner's Slot classes.\r\n         * @author Miller Medeiros\r\n         * @constructor\r\n         * @internal\r\n         * @nickname SignalBinding\r\n         * @param {Signal} signal Reference to Signal object that listener is currently bound to.\r\n         * @param {Function} listener Handler function bound to the signal.\r\n         * @param {boolean} isOnce If binding should be executed just once.\r\n         * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\r\n         * @param {Number} [priority] The priority level of the event listener. (default = 0).\r\n         */\r\n        constructor(signal: Signal, listener, isOnce: boolean, listenerContext, priority: number = 0) {\r\n\r\n            this._listener = listener;\r\n            this._isOnce = isOnce;\r\n            this.context = listenerContext;\r\n            this._signal = signal;\r\n            this.priority = priority || 0;\r\n\r\n        }\r\n\r\n        /**\r\n         * Handler function bound to the signal.\r\n         * @type Function\r\n         * @private\r\n         */\r\n        private _listener;\r\n\r\n        /**\r\n         * If binding should be executed just once.\r\n         * @type boolean\r\n         * @private\r\n         */\r\n        private _isOnce: boolean;\r\n\r\n        /**\r\n         * Context on which listener will be executed (object that should represent the `this` variable inside listener function).\r\n         * @memberOf SignalBinding.prototype\r\n         * @nickname context\r\n         * @type Object|undefined|null\r\n         */\r\n        public context;\r\n\r\n        /**\r\n         * Reference to Signal object that listener is currently bound to.\r\n         * @type Signal\r\n         * @private\r\n         */\r\n        private _signal: Signal;\r\n\r\n        /**\r\n         * Listener priority\r\n         * @type Number\r\n         */\r\n        public priority: number;\r\n\r\n        /**\r\n         * If binding is active and should be executed.\r\n         * @type boolean\r\n         */\r\n        public active: boolean = true;\r\n\r\n        /**\r\n         * Default parameters passed to listener during `Signal.dispatch` and `SignalBinding.execute`. (curried parameters)\r\n         * @type Array|null\r\n         */\r\n        public params = null;\r\n\r\n        /**\r\n         * Call listener passing arbitrary parameters.\r\n         * <p>If binding was added using `Signal.addOnce()` it will be automatically removed from signal dispatch queue, this method is used internally for the signal dispatch.</p>\r\n         * @param {Array} [paramsArr] Array of parameters that should be passed to the listener\r\n         * @return {*} Value returned by the listener.\r\n         */\r\n        public execute(paramsArr?: any[]) {\r\n\r\n            let handlerReturn;\r\n            let params;\r\n\r\n            if (this.active && !!this._listener) {\r\n                params = this.params ? this.params.concat(paramsArr) : paramsArr;\r\n\r\n                handlerReturn = this._listener.apply(this.context, params);\r\n\r\n                if (this._isOnce) {\r\n                    this.detach();\r\n                }\r\n            }\r\n\r\n            return handlerReturn;\r\n\r\n        }\r\n\r\n        /**\r\n         * Detach binding from signal.\r\n         * - alias to: mySignal.remove(myBinding.getListener());\r\n         * @return {Function|null} Handler function bound to the signal or `null` if binding was previously detached.\r\n         */\r\n        public detach() {\r\n\r\n            return this.isBound() ? this._signal.remove(this._listener, this.context) : null;\r\n\r\n        }\r\n\r\n        /**\r\n         * @return {Boolean} `true` if binding is still bound to the signal and have a listener.\r\n         */\r\n        public isBound(): boolean {\r\n\r\n            return (!!this._signal && !!this._listener);\r\n\r\n        }\r\n\r\n        /**\r\n         * @return {boolean} If SignalBinding will only be executed once.\r\n         */\r\n        public isOnce(): boolean {\r\n\r\n            return this._isOnce;\r\n\r\n        }\r\n\r\n        /**\r\n         * @return {Function} Handler function bound to the signal.\r\n         */\r\n        public getListener() {\r\n\r\n            return this._listener;\r\n\r\n        }\r\n\r\n        /**\r\n         * @return {Signal} Signal that listener is currently bound to.\r\n         */\r\n        public getSignal() {\r\n\r\n            return this._signal;\r\n\r\n        }\r\n\r\n        /**\r\n         * Delete instance properties\r\n         * @private\r\n         */\r\n        public _destroy() {\r\n\r\n            delete this._signal;\r\n            delete this._listener;\r\n            delete this.context;\r\n\r\n        }\r\n\r\n        /**\r\n         * @return {string} String representation of the object.\r\n         */\r\n        public toString(): string {\r\n\r\n            return '[SignalBinding isOnce:' + this._isOnce + ', isBound:' + this.isBound() + ', active:' + this.active + ']';\r\n\r\n        }\r\n\r\n    }\r\n}","/// <reference path=\"SignalBinding.ts\" />\r\n\r\n/**\r\n *    @desc       A TypeScript conversion of JS Signals by Miller Medeiros\r\n *               Released under the MIT license\r\n *                http://millermedeiros.github.com/js-signals/\r\n *\r\n *    @version    1.0 - 7th March 2013\r\n *\r\n *    @author    Richard Davey, TypeScript conversion\r\n *    @author        Miller Medeiros, JS Signals\r\n *    @author        Robert Penner, AS Signals\r\n *\r\n *    @url        http://www.photonstorm.com\r\n */\r\n\r\n/**\r\n * Custom event broadcaster\r\n * <br />- inspired by Robert Penner's AS3 Signals.\r\n * @nickname Signal\r\n * @author Miller Medeiros\r\n * @constructor\r\n */\r\nnamespace Framework {\r\n    export class Signal {\r\n\r\n        /**\r\n         * @property _bindings\r\n         * @type Array\r\n         * @private\r\n         */\r\n        private _bindings: SignalBinding[] = [];\r\n\r\n        /**\r\n         * @property _prevParams\r\n         * @type Any\r\n         * @private\r\n         */\r\n        private _prevParams = null;\r\n\r\n        /**\r\n         * Signals Version Number\r\n         * @property VERSION\r\n         * @type String\r\n         * @const\r\n         */\r\n        public static VERSION: string = '1.0.0';\r\n\r\n        /**\r\n         * If Signal should keep record of previously dispatched parameters and\r\n         * automatically execute listener during `add()`/`addOnce()` if Signal was\r\n         * already dispatched before.\r\n         * @type boolean\r\n         */\r\n        public memorize: boolean = false;\r\n\r\n        /**\r\n         * @type boolean\r\n         * @private\r\n         */\r\n        private _shouldPropagate: boolean = true;\r\n\r\n        /**\r\n         * If Signal is active and should broadcast events.\r\n         * <p><strong>IMPORTANT:</strong> Setting this property during a dispatch will only affect the next dispatch, if you want to stop the propagation of a signal use `halt()` instead.</p>\r\n         * @type boolean\r\n         */\r\n        public active: boolean = true;\r\n\r\n        /**\r\n         * @method validateListener\r\n         * @param {Any} listener\r\n         * @param {Any} fnName\r\n         */\r\n        public validateListener(listener, fnName) {\r\n\r\n            if (typeof listener !== 'function') {\r\n                throw new Error('listener is a required param of {fn}() and should be a Function.'.replace('{fn}', fnName));\r\n            }\r\n\r\n        }\r\n\r\n        /**\r\n         * @param {Function} listener\r\n         * @param {boolean} isOnce\r\n         * @param {Object} [listenerContext]\r\n         * @param {Number} [priority]\r\n         * @return {SignalBinding}\r\n         * @private\r\n         */\r\n        private _registerListener(listener, isOnce: boolean, listenerContext, priority: number): SignalBinding {\r\n\r\n            let prevIndex: number = this._indexOfListener(listener, listenerContext);\r\n            let binding: SignalBinding;\r\n\r\n            if (prevIndex !== -1) {\r\n                binding = this._bindings[prevIndex];\r\n\r\n                if (binding.isOnce() !== isOnce) {\r\n                    throw new Error('You cannot add' + (isOnce ? '' : 'Once') + '() then add' + (!isOnce ? '' : 'Once') + '() the same listener without removing the relationship first.');\r\n                }\r\n            }\r\n            else {\r\n                binding = new SignalBinding(this, listener, isOnce, listenerContext, priority);\r\n\r\n                this._addBinding(binding);\r\n            }\r\n\r\n            if (this.memorize && this._prevParams) {\r\n                binding.execute(this._prevParams);\r\n            }\r\n\r\n            return binding;\r\n\r\n        }\r\n\r\n        /**\r\n         * @method _addBinding\r\n         * @param {SignalBinding} binding\r\n         * @private\r\n         */\r\n        private _addBinding(binding: SignalBinding) {\r\n\r\n            //simplified insertion sort\r\n\r\n            let n: number = this._bindings.length;\r\n\r\n            do {\r\n                --n;\r\n            } while (this._bindings[n] && binding.priority <= this._bindings[n].priority);\r\n\r\n            this._bindings.splice(n + 1, 0, binding);\r\n\r\n        }\r\n\r\n        /**\r\n         * @method _indexOfListener\r\n         * @param {Function} listener\r\n         * @return {number}\r\n         * @private\r\n         */\r\n        private _indexOfListener(listener, context): number {\r\n\r\n            let n: number = this._bindings.length;\r\n            let cur: SignalBinding;\r\n\r\n            while (n--) {\r\n                cur = this._bindings[n];\r\n\r\n                if (cur.getListener() === listener && cur.context === context) {\r\n                    return n;\r\n                }\r\n            }\r\n\r\n            return -1;\r\n\r\n        }\r\n\r\n        /**\r\n         * Check if listener was attached to Signal.\r\n         * @param {Function} listener\r\n         * @param {Object} [context]\r\n         * @return {boolean} if Signal has the specified listener.\r\n         */\r\n        public has(listener, context: any = null): boolean {\r\n\r\n            return this._indexOfListener(listener, context) !== -1;\r\n\r\n        }\r\n\r\n        /**\r\n         * Add a listener to the signal.\r\n         * @param {Function} listener Signal handler function.\r\n         * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\r\n         * @param {Number} [priority] The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added. (default = 0)\r\n         * @return {SignalBinding} An Object representing the binding between the Signal and listener.\r\n         */\r\n        public add(listener, listenerContext: any = null, priority: number = 0): SignalBinding {\r\n\r\n            this.validateListener(listener, 'add');\r\n\r\n            return this._registerListener(listener, false, listenerContext, priority);\r\n\r\n        }\r\n\r\n        /**\r\n         * Add listener to the signal that should be removed after first execution (will be executed only once).\r\n         * @param {Function} listener Signal handler function.\r\n         * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\r\n         * @param {Number} [priority] The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added. (default = 0)\r\n         * @return {SignalBinding} An Object representing the binding between the Signal and listener.\r\n         */\r\n        public addOnce(listener, listenerContext: any = null, priority: number = 0): SignalBinding {\r\n\r\n            this.validateListener(listener, 'addOnce');\r\n\r\n            return this._registerListener(listener, true, listenerContext, priority);\r\n\r\n        }\r\n\r\n        /**\r\n         * Remove a single listener from the dispatch queue.\r\n         * @param {Function} listener Handler function that should be removed.\r\n         * @param {Object} [context] Execution context (since you can add the same handler multiple times if executing in a different context).\r\n         * @return {Function} Listener handler function.\r\n         */\r\n        public remove(listener, context: any = null) {\r\n\r\n            this.validateListener(listener, 'remove');\r\n\r\n            let i: number = this._indexOfListener(listener, context);\r\n\r\n            if (i !== -1) {\r\n                this._bindings[i]._destroy(); //no reason to a SignalBinding exist if it isn't attached to a signal\r\n                this._bindings.splice(i, 1);\r\n            }\r\n\r\n            return listener;\r\n\r\n        }\r\n\r\n        /**\r\n         * Remove all listeners from the Signal.\r\n         */\r\n        public removeAll() {\r\n\r\n            let n: number = this._bindings.length;\r\n\r\n            while (n--) {\r\n                this._bindings[n]._destroy();\r\n            }\r\n\r\n            this._bindings.length = 0;\r\n\r\n        }\r\n\r\n        /**\r\n         * @return {number} Number of listeners attached to the Signal.\r\n         */\r\n        public getNumListeners(): number {\r\n\r\n            return this._bindings.length;\r\n\r\n        }\r\n\r\n        /**\r\n         * Stop propagation of the event, blocking the dispatch to next listeners on the queue.\r\n         * <p><strong>IMPORTANT:</strong> should be called only during signal dispatch, calling it before/after dispatch won't affect signal broadcast.</p>\r\n         * @see Signal.prototype.disable\r\n         */\r\n        public halt() {\r\n\r\n            this._shouldPropagate = false;\r\n\r\n        }\r\n\r\n        /**\r\n         * Dispatch/Broadcast Signal to all listeners added to the queue.\r\n         * @param {...*} [params] Parameters that should be passed to each handler.\r\n         */\r\n        public dispatch(...paramsArr: any[]) {\r\n\r\n            if (!this.active) {\r\n                return;\r\n            }\r\n\r\n            let n: number = this._bindings.length;\r\n            let bindings: SignalBinding[];\r\n\r\n            if (this.memorize) {\r\n                this._prevParams = paramsArr;\r\n            }\r\n\r\n            if (!n) {\r\n                //should come after memorize\r\n                return;\r\n            }\r\n\r\n            bindings = this._bindings.slice(0); //clone array in case add/remove items during dispatch\r\n\r\n            this._shouldPropagate = true; //in case `halt` was called before dispatch or during the previous dispatch.\r\n\r\n            //execute all callbacks until end of the list or until a callback returns `false` or stops propagation\r\n            //reverse loop since listeners with higher priority will be added at the end of the list\r\n            do {\r\n                n--;\r\n            } while (bindings[n] && this._shouldPropagate && bindings[n].execute(paramsArr) !== false);\r\n\r\n        }\r\n\r\n        /**\r\n         * Forget memorized arguments.\r\n         * @see Signal.memorize\r\n         */\r\n        public forget() {\r\n\r\n            this._prevParams = null;\r\n\r\n        }\r\n\r\n        /**\r\n         * Remove all bindings from signal and destroy any reference to external objects (destroy Signal object).\r\n         * <p><strong>IMPORTANT:</strong> calling any method on the signal instance after calling dispose will throw errors.</p>\r\n         */\r\n        public dispose() {\r\n\r\n            this.removeAll();\r\n\r\n            delete this._bindings;\r\n            delete this._prevParams;\r\n\r\n        }\r\n\r\n        /**\r\n         * @return {string} String representation of the object.\r\n         */\r\n        public toString(): string {\r\n\r\n            return '[Signal active:' + this.active + ' numListeners:' + this.getNumListeners() + ']';\r\n\r\n        }\r\n\r\n    }\r\n}","///<reference path=\"Signal.ts\"/>\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 7/18/2018\r\n */\r\n\r\nnamespace Framework {\r\n    export module Signals {\r\n\r\n        //CONSOLE COLORS FOR SIGNALS MANAGER: ORANGE\r\n        import sign = PIXI.utils.sign;\r\n\r\n        export class SignalsManager {\r\n            private static instance: SignalsManager;\r\n            private initialized: boolean = false;\r\n            // private signals: SignalObject[];\r\n            private signals: { [id: string]: Signal; };\r\n\r\n            // public StartGame: Signal;\r\n\r\n            static Instance() {\r\n                if (!SignalsManager.instance) {\r\n                    SignalsManager.instance = new SignalsManager();\r\n\r\n                    if (!SignalsManager.Instance().initialized) {\r\n                        SignalsManager.InitializeSignals();\r\n                        SignalsManager.Instance().initialized = true;\r\n                    }\r\n                }\r\n                return SignalsManager.instance;\r\n            }\r\n\r\n            private static InitializeSignals() {\r\n                SignalsManager.Instance().signals = {};\r\n\r\n            }\r\n\r\n            // public addSignal()\r\n            public static CreateNewSignal(id: string) {\r\n                SignalsManager.Instance().signals[id] = new Signal();\r\n                console.log(\"%c\" + \"Signals Manager -> new signal created: \" + id, \"color: orange\");\r\n                // console.log(\"%c\" + this.Name + \" assets loaded!\", \"color: green\");\r\n            }\r\n\r\n            public static GetSignal(id: string): Signal {\r\n                let signal: Signal = SignalsManager.Instance().signals[id];\r\n                if (!signal) {\r\n                    console.warn(\"SignalsManager.GetSignal: signal \" + id + \" is not registered!\");\r\n                }\r\n\r\n                return signal;\r\n            }\r\n\r\n            public static AddSignalCallback(signalID: string, callbackFunction: Function): void {\r\n                let signal: Signal = SignalsManager.Instance().signals[signalID];\r\n                if (!signal) {\r\n                    console.warn(\"SignalsManager.RegisterCallbackToSignal: signal \" + signalID + \" is not registered!\");\r\n                }\r\n\r\n                signal.add(callbackFunction);\r\n            }\r\n\r\n            public static DispatchSignal(id: string, params: any[] = null): void {\r\n\r\n                if (SignalsManager.Instance().signals[id]) {\r\n                    if (Settings.showSignalsDispatchSignalLog) {\r\n                        console.log(\"%c\" + \"SignalsManager -> Dispatched Signal: \" + id, \"color: #f68a06\");\r\n                    }\r\n\r\n                    SignalsManager.Instance().signals[id].dispatch(params);\r\n                }\r\n                else {\r\n                    console.warn(\"SignalsManager.DispatchSignal: signal \" + id + \" is net registered!\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 7/19/2018\r\n */\r\n\r\nnamespace Framework {\r\n    export module Signals {\r\n        export class SignalsType {\r\n            public static WINDOW_RESIZE: string = \"SignalsType.\" + \"WINDOW_RESIZE\";\r\n            public static ASSETS_LOADED: string = \"SignalsType.\" + \"ASSETS_LOADED\";\r\n            public static ALL_MODULES_ELEMENTS_CREATED: string = \"SignalsType.\" + \"ALL_MODULES_ELEMENTS_CREATED\";\r\n            public static MODULE_ELEMENTS_CREATED: string = \"SignalsType.\" + \"MODULE_ELEMENTS_CREATED\";\r\n            public static CHANGE_BACKGROUND: string = \"SignalsType.\" + \"CHANGE_BACKGROUND\";\r\n            public static CHECK_USER_DATA: string = \"SignalsType.\" + \"CHECK_USER_DATA\";\r\n            public static USER_DATA_CHECKED: string = \"SignalsType.\" + \"USER_DATA_CHECKED\";\r\n            public static CREATE_SOUND_CACHE: string = \"SignalsType.\" + \"CREATE_SOUND_CACHE\";\r\n            public static PLAY_SOUND: string = \"SignalsType.\" + \"PLAY_SOUND\";\r\n            public static STOP_SOUND: string = \"SignalsType.\" + \"STOP_SOUND\";\r\n        }\r\n\r\n        export class ConnectionSignalsType {\r\n            public static CREATE_SEARCH_FOR_PARTNER_CONNECTION: string = \"ConnectionSignalsType.\" + 'CREATE_SEARCH_FOR_PARTNER_CONNECTION';\r\n            public static SOCKET_IO_CONNECTION_CREATED: string = \"ConnectionSignalsType.\" + 'SOCKET_IO_CONNECTION_CREATED';\r\n            public static SOCKET_IO_DISCONNECTED: string = \"ConnectionSignalsType.\" + \"SOCKET_IO_DISCONNECTED\";\r\n            public static PRIVATE_MESSAGE: string = \"ConnectionSignalsType.\" + \"PRIVATE_MESSAGE\";\r\n            public static UPDATE_SOCKET_ID: string = \"ConnectionSignalsType.\" + \"UPDATE_SOCKET_ID\";\r\n        }\r\n    }\r\n}\r\n","///<reference path=\"../Signals/signals-manager.ts\"/>\r\n///<reference path=\"../Signals/signal-types.ts\"/>\r\n// Created by: Sandru Andrei for Edgeflow on 7/11/2018\r\nnamespace Framework {\r\n    export module Abstracts {\r\n        import Container = PIXI.Container;\r\n        import DisplayObject = PIXI.DisplayObject;\r\n        import SignalsManager = Framework.Signals.SignalsManager;\r\n        import SignalsType = Framework.Signals.SignalsType;\r\n\r\n        export class AbstractModule {\r\n\r\n            //files that the loader module should load\r\n            public AssetsToLoad: string[];\r\n            public Name: string = \"AbstractModule\";\r\n            public Layer: Container;\r\n            public ElementsCreated: boolean = false;\r\n\r\n            constructor() {\r\n                this.registerSignalsHandlers();\r\n                this.AssetsToLoad = [];\r\n            }\r\n\r\n            public addAssetToLoad(path: string): void {\r\n                this.AssetsToLoad.push(path);\r\n            }\r\n\r\n            public createElements() {\r\n                console.log(\"%c\" + this.Name + \" Elements Created!\", \"color: green\");\r\n                this.ElementsCreated = true;\r\n                SignalsManager.DispatchSignal(SignalsType.MODULE_ELEMENTS_CREATED);\r\n\r\n                // if (_.isNull(this.Display) || _.isUndefined(this.Display)) {\r\n                //     this.Display = new Container();\r\n                // }\r\n            }\r\n\r\n\r\n            protected addChild(child: DisplayObject) {\r\n                if (_.isNull(this.Layer) || _.isUndefined(this.Layer)) {\r\n                    console.log(\"%c\" + this.Name + \" LAYER not set!\", \"color: red\");\r\n                }\r\n                this.Layer.addChild(child);\r\n            }\r\n\r\n            protected removeChild(child: DisplayObject) {\r\n                if (_.isNull(this.Layer) || _.isUndefined(this.Layer)) {\r\n                    console.log(\"%c\" + this.Name + \" LAYER not set!\", \"color: red\");\r\n                }\r\n                this.Layer.removeChild(child);\r\n            }\r\n\r\n\r\n            protected registerSignalsHandlers() {\r\n                SignalsManager.AddSignalCallback(SignalsType.WINDOW_RESIZE, this.onResize.bind(this));\r\n            }\r\n\r\n            protected onResize(params: any[]): void {\r\n\r\n                if (Settings.stageWidth >= Settings.stageHeight) {\r\n                    if (Settings.isMobile) {\r\n                        this.handleMobileLandscape();\r\n                    }\r\n                    else {\r\n                        this.handleDesktopLandscape();\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    if (Settings.isMobile) {\r\n                        this.handleMobilePortrait();\r\n                    }\r\n                    else {\r\n                        this.handleDesktopPortrait();\r\n\r\n                    }\r\n                }\r\n                // console.log(\"%c\" + this.Name + \" onResize\", \"color: red\");\r\n\r\n            }\r\n\r\n            protected handleMobileLandscape(): void {\r\n\r\n            }\r\n\r\n            protected handleMobilePortrait(): void {\r\n\r\n            }\r\n\r\n            protected handleDesktopLandscape(): void {\r\n            }\r\n\r\n            protected handleDesktopPortrait(): void {\r\n                this.handleDesktopLandscape();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","/**\r\n *  Edgeflow\r\n *  Copyright 2017 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 7/11/2018\r\n */\r\n\r\nnamespace Framework {\r\n    export class Settings {\r\n\r\n        public static stageWidth: number;\r\n        public static stageHeight: number;\r\n        public static desktopAssetsPath: string = \"Assets/Desktop/\";\r\n        public static mobileAssetsPath: string = \"Assets/Mobile/\";\r\n        public static isMobile: boolean = false;\r\n        public static socketID: any;\r\n        public static backgroundsPath: string = \"Images/Backgrounds/\";\r\n        public static mainBackgroundName: string = \"MainBackground\";\r\n        public static singlePlayer: boolean = false;\r\n        public static showSignalsDispatchSignalLog: boolean = false;\r\n        public static playerSignedIn: boolean = false;\r\n\r\n        // constructor() {\r\n        //\r\n        // }\r\n    }\r\n}\r\n","namespace typestate {\r\n   /**\r\n    * Transition grouping to faciliate fluent api\r\n    */\r\n   export class Transitions<T> {\r\n      constructor(public fsm: FiniteStateMachine<T>) { }\r\n\r\n      public fromStates: T[];\r\n      public toStates: T[];\r\n\r\n\r\n      /**\r\n       * Specify the end state(s) of a transition function\r\n       */\r\n      public to(...states: T[]) {\r\n         this.toStates = states;\r\n         this.fsm.addTransitions(this);\r\n      }\r\n      /**\r\n       * Specify that any state in the state enum is value\r\n       * Takes the state enum as an argument\r\n       */\r\n      public toAny(states: any) {\r\n         var toStates: T[] = [];\r\n         for (var s in states) {\r\n            if (states.hasOwnProperty(s)) {\r\n               toStates.push((<T>states[s]));\r\n            }\r\n         }\r\n\r\n         this.toStates = toStates;\r\n         this.fsm.addTransitions(this);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Internal representation of a transition function\r\n    */\r\n   export class TransitionFunction<T> {\r\n      constructor(public fsm: FiniteStateMachine<T>, public from: T, public to: T) { }\r\n   }\r\n   \r\n   /**\r\n    * A simple finite state machine implemented in TypeScript, the templated argument is meant to be used\r\n    * with an enumeration.\r\n    */\r\n   export class FiniteStateMachine<T> {\r\n      public currentState: T;\r\n      private _startState: T;\r\n      private _allowImplicitSelfTransition: boolean;\r\n      private _transitionFunctions: TransitionFunction<T>[] = [];\r\n      private _onCallbacks: { [key: string]: { (from: T, event?: any): void; }[] } = {};\r\n      private _exitCallbacks: { [key: string]: { (to: T): boolean; }[] } = {};\r\n      private _enterCallbacks: { [key: string]: { (from: T, event?: any): boolean; }[] } = {};\r\n      private _invalidTransitionCallback: (to?: T, from?: T) => boolean = null;\r\n\r\n      constructor(startState: T, allowImplicitSelfTransition: boolean = false) {\r\n         this.currentState = startState;\r\n         this._startState = startState;\r\n         this._allowImplicitSelfTransition = allowImplicitSelfTransition;\r\n      }\r\n\r\n      public addTransitions(fcn: Transitions<T>) {\r\n         fcn.fromStates.forEach(from => {\r\n            fcn.toStates.forEach(to => {\r\n                // Only add the transition if the state machine is not currently able to transition.\r\n                if (!this._canGo(from, to)) {\r\n                  this._transitionFunctions.push(new TransitionFunction<T>(this, from, to));\r\n               }\r\n            });\r\n         });\r\n      }\r\n\r\n      /**\r\n       * Listen for the transition to this state and fire the associated callback\r\n       */\r\n      public on(state: T, callback: (from?: T, event?: any) => any): FiniteStateMachine<T> {\r\n         var key = state.toString();\r\n         if (!this._onCallbacks[key]) {\r\n            this._onCallbacks[key] = [];\r\n         }\r\n         this._onCallbacks[key].push(callback);\r\n         return this;\r\n      }\r\n\r\n      /**\r\n       * Listen for the transition to this state and fire the associated callback, returning\r\n       * false in the callback will block the transition to this state.\r\n       */\r\n      public onEnter(state: T, callback: (from?: T, event?: any) => boolean): FiniteStateMachine<T> {\r\n         var key = state.toString();\r\n         if (!this._enterCallbacks[key]) {\r\n            this._enterCallbacks[key] = [];\r\n         }\r\n         this._enterCallbacks[key].push(callback);\r\n         return this;\r\n      }\r\n\r\n      /**\r\n       * Listen for the transition to this state and fire the associated callback, returning\r\n       * false in the callback will block the transition from this state.\r\n       */\r\n      public onExit(state: T, callback: (to?: T) => boolean): FiniteStateMachine<T> {\r\n         var key = state.toString();\r\n         if (!this._exitCallbacks[key]) {\r\n            this._exitCallbacks[key] = [];\r\n         }\r\n         this._exitCallbacks[key].push(callback);\r\n         return this;\r\n      }\r\n      \r\n      /**\r\n       * List for an invalid transition and handle the error, returning a falsy value will throw an\r\n       * exception, a truthy one will swallow the exception\r\n       */\r\n      public onInvalidTransition(callback: (from?: T, to?: T) => boolean): FiniteStateMachine<T> {\r\n         if(!this._invalidTransitionCallback){\r\n            this._invalidTransitionCallback = callback\r\n         }\r\n         return this;\r\n      }\r\n\r\n      /**\r\n       * Declares the start state(s) of a transition function, must be followed with a '.to(...endStates)'\r\n       */\r\n      public from(...states: T[]): Transitions<T> {\r\n         var _transition = new Transitions<T>(this);\r\n         _transition.fromStates = states;\r\n         return _transition;\r\n      }\r\n\r\n      public fromAny(states: any): Transitions<T> {\r\n         var fromStates: T[] = [];\r\n         for (var s in states) {\r\n            if (states.hasOwnProperty(s)) {\r\n               fromStates.push((<T>states[s]));\r\n            }\r\n         }\r\n\r\n         var _transition = new Transitions<T>(this);\r\n         _transition.fromStates = fromStates;\r\n         return _transition;\r\n      }\r\n\r\n      private _validTransition(from: T, to: T): boolean {\r\n         return this._transitionFunctions.some(tf => {\r\n            return (tf.from === from && tf.to === to);\r\n         });\r\n      }\r\n\r\n      /**\r\n       * Check whether a transition between any two states is valid.\r\n       *    If allowImplicitSelfTransition is true, always allow transitions from a state back to itself.\r\n       *     Otherwise, check if it's a valid transition.\r\n       */\r\n      private _canGo(fromState: T, toState: T): boolean {\r\n          return (this._allowImplicitSelfTransition && fromState === toState) || this._validTransition(fromState, toState);\r\n      } \r\n\r\n      /**\r\n       * Check whether a transition to a new state is valid\r\n       */\r\n      public canGo(state: T): boolean {\r\n          return this._canGo(this.currentState, state);\r\n      }\r\n\r\n      /**\r\n       * Transition to another valid state\r\n       */\r\n      public go(state: T, event?: any): void {\r\n         if (!this.canGo(state)) {\r\n            if(!this._invalidTransitionCallback || !this._invalidTransitionCallback(this.currentState, state)){\r\n               throw new Error('Error no transition function exists from state ' + this.currentState.toString() + ' to ' + state.toString());\r\n            }\r\n         } else {\r\n            this._transitionTo(state, event);\r\n         }\r\n      }\r\n\r\n      /**\r\n       * This method is availble for overridding for the sake of extensibility. \r\n       * It is called in the event of a successful transition.\r\n       */\r\n      public onTransition(from: T, to: T) {\r\n         // pass, does nothing until overidden\r\n      }\r\n\r\n      /**\r\n      * Reset the finite state machine back to the start state, DO NOT USE THIS AS A SHORTCUT for a transition. \r\n      * This is for starting the fsm from the beginning.\r\n      */\r\n      public reset(): void {\r\n         this.currentState = this._startState;\r\n      }\r\n      \r\n      /**\r\n       * Whether or not the current state equals the given state\r\n       */\r\n      public is(state: T): boolean {\r\n          return this.currentState === state;\r\n      }\r\n\r\n      private _transitionTo(state: T, event?: any) {\r\n         if (!this._exitCallbacks[this.currentState.toString()]) {\r\n            this._exitCallbacks[this.currentState.toString()] = [];\r\n         }\r\n\r\n         if (!this._enterCallbacks[state.toString()]) {\r\n            this._enterCallbacks[state.toString()] = [];\r\n         }\r\n\r\n         if (!this._onCallbacks[state.toString()]) {\r\n            this._onCallbacks[state.toString()] = [];\r\n         }\r\n\r\n\r\n         var canExit = this._exitCallbacks[this.currentState.toString()].reduce<boolean>((accum: boolean, next: (to: T) => boolean) => {\r\n            return accum && (<boolean>next.call(this, state));\r\n         }, true);\r\n\r\n         var canEnter = this._enterCallbacks[state.toString()].reduce<boolean>((accum: boolean, next: (from: T) => boolean) => {\r\n            return accum && (<boolean>next.call(this, this.currentState, event));\r\n         }, true);\r\n\r\n         if (canExit && canEnter) {\r\n            var old = this.currentState;\r\n            this.currentState = state;\r\n            this._onCallbacks[this.currentState.toString()].forEach(fcn => {\r\n               fcn.call(this, old, event);\r\n            });\r\n            this.onTransition(old, state);\r\n         }\r\n      }\r\n   }\r\n}\r\n\r\n// maintain backwards compatibility for people using the pascal cased version\r\nvar TypeState = typestate;\r\n","///<reference path=\"typestate.ts\"/>\r\nnamespace Pockey {\r\n    export module StateMachineModule {\r\n        import FiniteStateMachine = typestate.FiniteStateMachine;\r\n\r\n        export enum PockeyStates {\r\n            /*0*/onLoad,\r\n            /*1*/onMainMenu,\r\n            /*2*/onStart,\r\n            /*3*/onRoundEnd,\r\n            /*4*/onDefineClient,\r\n            /*5*/onSearchForPartner,\r\n            /*6*/onWatch,\r\n            /*7*/onRearrangeStick,\r\n            /*8*/onRepositionWhiteBall,\r\n            /*9*/onShoot,\r\n            /*10*/onEndTurn,\r\n            /*11*/onEndMatch,\r\n            /*12*/onPrepareRoundOne,\r\n            /*13*/onPrepareRoundTwo,\r\n            /*14*/onPrepareRoundThree,\r\n        }\r\n\r\n        // export enum PockeyStates {\r\n        //     StartGame,\r\n        //     PlayerTurn,\r\n        //     PlayerTurnFirstBall,\r\n        //     OpponentTurn,\r\n        //     OpponentTurnFirstBall,\r\n        //\r\n        // }\r\n\r\n\r\n        export class PockeyStateMachine {\r\n\r\n            // Construct the FSM with the inital state, in this case the elevator starts with its doors opened\r\n            public fsm: FiniteStateMachine<PockeyStates>;\r\n\r\n            private static instance: PockeyStateMachine;\r\n            private initialized: boolean = false;\r\n\r\n            private nextState;\r\n            private currentState;\r\n\r\n            static Instance(): PockeyStateMachine {\r\n                if (!PockeyStateMachine.instance) {\r\n                    PockeyStateMachine.instance = new PockeyStateMachine();\r\n\r\n                    if (!PockeyStateMachine.Instance().initialized) {\r\n                        PockeyStateMachine.Instance().fsm = new FiniteStateMachine<PockeyStates>(PockeyStates.onLoad);\r\n                        PockeyStateMachine.Instance().InitializeStates();\r\n                        PockeyStateMachine.Instance().initialized = true;\r\n\r\n                        let s: string = PockeyStates[PockeyStates.onLoad];\r\n                        console.log(\"%c StateMachine -> FSM currentState: \" + s, \"background: yellow; color: #f6546a; font-weight:bold; \");\r\n                        // setTimeout(() => {\r\n                        //     PockeyStateMachine.Instance().printFsmCurrentState();\r\n\r\n                        // }, 100);\r\n\r\n                    }\r\n                }\r\n                return PockeyStateMachine.instance;\r\n            }\r\n\r\n            private InitializeStates() {\r\n                this.fsm.from(PockeyStates.onLoad).to(PockeyStates.onMainMenu);\r\n\r\n                this.fsm.from(PockeyStates.onMainMenu).to(PockeyStates.onRearrangeStick);\r\n                this.fsm.from(PockeyStates.onMainMenu).to(PockeyStates.onSearchForPartner);\r\n\r\n                // this.fsm.from(PockeyStates.onSearchForPartner).to(PockeyStates.onRearrangeStick);\r\n                this.fsm.from(PockeyStates.onSearchForPartner).to(PockeyStates.onPrepareRoundOne);\r\n                this.fsm.from(PockeyStates.onPrepareRoundOne).to(PockeyStates.onWatch);\r\n                this.fsm.from(PockeyStates.onPrepareRoundOne).to(PockeyStates.onRearrangeStick);\r\n\r\n                this.fsm.from(PockeyStates.onRoundEnd).to(PockeyStates.onPrepareRoundTwo);\r\n                this.fsm.from(PockeyStates.onPrepareRoundTwo).to(PockeyStates.onRearrangeStick);\r\n                this.fsm.from(PockeyStates.onPrepareRoundTwo).to(PockeyStates.onWatch);\r\n                // this.fsm.from(PockeyStates.onPrepareRoundThree).to(PockeyStates.onRearrangeStick);\r\n\r\n                // this.fsm.from(PockeyStates.onSearchForPartner).to(PockeyStates.onWatch);\r\n                // this.fsm.from(PockeyStates.onSearchForPartner).to(PockeyStates.onWatch);\r\n\r\n                this.fsm.from(PockeyStates.onRepositionWhiteBall).to(PockeyStates.onRearrangeStick);\r\n                this.fsm.from(PockeyStates.onRepositionWhiteBall).to(PockeyStates.onWatch);\r\n                this.fsm.from(PockeyStates.onRepositionWhiteBall).to(PockeyStates.onEndTurn);\r\n\r\n                this.fsm.from(PockeyStates.onEndTurn).to(PockeyStates.onRearrangeStick);\r\n\r\n                this.fsm.from(PockeyStates.onWatch).to(PockeyStates.onRearrangeStick);\r\n\r\n                this.fsm.from(PockeyStates.onRearrangeStick).to(PockeyStates.onShoot);\r\n                this.fsm.from(PockeyStates.onRearrangeStick).to(PockeyStates.onWatch);\r\n                this.fsm.from(PockeyStates.onRearrangeStick).to(PockeyStates.onEndTurn);\r\n\r\n                this.fsm.from(PockeyStates.onShoot).to(PockeyStates.onEndTurn);\r\n                this.fsm.from(PockeyStates.onShoot).to(PockeyStates.onRoundEnd);\r\n\r\n                this.fsm.from(PockeyStates.onEndTurn).to(PockeyStates.onRepositionWhiteBall);\r\n                this.fsm.from(PockeyStates.onEndTurn).to(PockeyStates.onWatch);\r\n                this.fsm.from(PockeyStates.onEndTurn).to(PockeyStates.onRoundEnd);\r\n\r\n                this.fsm.from(PockeyStates.onWatch).to(PockeyStates.onRoundEnd);\r\n                this.fsm.from(PockeyStates.onWatch).to(PockeyStates.onRepositionWhiteBall);\r\n\r\n                this.fsm.from(PockeyStates.onRoundEnd).to(PockeyStates.onRearrangeStick);\r\n                this.fsm.from(PockeyStates.onRoundEnd).to(PockeyStates.onWatch);\r\n\r\n            }\r\n\r\n            public delayStateChanging(delayedState): void {\r\n                // this.currentState = PockeyStateMachine.Instance().fsm.currentState;\r\n                this.nextState = delayedState;\r\n            }\r\n\r\n            public updateDelayedState(): void {\r\n                PockeyStateMachine.Instance().changeState(this.nextState);\r\n                this.nextState = null;\r\n            }\r\n\r\n            public hasStateInQueue(): boolean {\r\n                if (!_.isUndefined(this.nextState) && _.isNull(this.nextState))\r\n                    return true;\r\n\r\n                return false;\r\n            }\r\n\r\n            public changeState(state): void {\r\n                if (!PockeyStates[state]) {\r\n                    console.log(\"%c StateMachine -> state does not exist: \" + state, \"color: #000000; background:#ff9900\");\r\n\r\n                }\r\n                if (state == PockeyStates.onShoot) {\r\n                    console.log(\"current state=======\");\r\n                    this.printFsmCurrentState();\r\n                    console.log(\"current state=======\");\r\n                    console.log(\"stop\");\r\n                }\r\n                PockeyStateMachine.Instance().fsm.go(state);\r\n                this.printFsmCurrentState();\r\n            }\r\n\r\n            public getCurrentStateName(): string {\r\n                let s: string = \"\";\r\n\r\n                if (this.fsm) {\r\n                    _.forEach(this.fsm, (state) => {\r\n                        if (state == this.fsm.currentState) {\r\n                            // s = state.toString();\r\n                            s = PockeyStates[state];\r\n                            return;\r\n                        }\r\n                    });\r\n                }\r\n\r\n                return s;\r\n            }\r\n\r\n            private printFsmCurrentState(): void {\r\n                // if (PockeyStateMachine.Instance().fsm.currentState == PockeyStates.onShoot) {\r\n                //     console.log(\"%c GameManager -> FSM currentState: \" + PockeyStateMachine.Instance().getCurrentStateName(), \"background: black; color: yellow; font-weight:bold; \");\r\n                //\r\n                // }\r\n                // else {\r\n                console.log(\"%c GameManager -> FSM currentState: \" + PockeyStateMachine.Instance().getCurrentStateName(), \"background: yellow; color: #f6546a; font-weight:bold; \");\r\n\r\n                // }\r\n                // console.log(\"%c GameManager -> FSM currentState: \" + PockeyStateMachine.Instance().getCurrentStateName(), \"background: yellow; color: #f6546a; font-weight:bold; \");\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 7/24/2018\r\n */\r\n\r\n\r\nnamespace Framework {\r\n    export module Utils {\r\n        import Point = PIXI.Point;\r\n        import PointLike = PIXI.PointLike;\r\n\r\n        export class Vector2 {\r\n\r\n            public x: number;\r\n            public y: number;\r\n\r\n            constructor(x: number = 0, y: number = 0) {\r\n                this.x = x;\r\n                this.y = y;\r\n            }\r\n\r\n            public add(vector: Vector2 | Point | PointLike): Vector2 {\r\n                return new Vector2(this.x + vector.x, this.y + vector.y);\r\n            }\r\n\r\n            public addTo(vector: Vector2): void {\r\n                this.x += vector.x;\r\n                this.y += vector.y;\r\n            }\r\n\r\n            public substract(vector: Vector2 | Point | PointLike): Vector2 {\r\n                return new Vector2(this.x - vector.x, this.y - vector.y);\r\n            }\r\n\r\n            public distanceTo(vector: Vector2 | Point | PointLike): number {\r\n                var dx = this.x - vector.x;\r\n                var dy = this.y - vector.y;\r\n                return Math.sqrt(dx * dx + dy * dy);\r\n            }\r\n\r\n            public multiply(multiplicationFactor: number): Vector2 {\r\n                let cx:number = this.x;\r\n                let cy:number = this.y;\r\n                cx *= multiplicationFactor;\r\n                cy *= multiplicationFactor;\r\n                return new Vector2(cx, cy);\r\n            }\r\n\r\n            public dot(vector: Vector2): number {\r\n                return this.x * vector.x + this.y * vector.y;\r\n            }\r\n\r\n            public length(): number {\r\n                return (Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2)));\r\n            }\r\n\r\n\r\n            /**\r\n             * Method to obtain the projection of current vector on a given axis\r\n             * @param axis An axis where vector is projected on\r\n             * @return The projection length of current vector on given axis\r\n             */\r\n            public projectionOn(axis: Vector2): number {\r\n                return this.dotProduct(axis.normalise())\r\n            }\r\n\r\n            /**\r\n             * Method to perform dot product with another vector\r\n             * @param vector2 A vector to perform dot product with current vector\r\n             * @return A scalar number of dot product\r\n             */\r\n            public dotProduct(vector2: Vector2): number {\r\n                var componentX: number = this.x * vector2.x;\r\n                var componentY: number = this.y * vector2.y;\r\n                return componentX + componentY;\r\n            }\r\n\r\n            /**\r\n             * Method to obtain vector unit of current vector\r\n             * @return A copy of normalised vector\r\n             */\r\n            public normalise(): Vector2 {\r\n                if(this.x ==0 && this.y == 0)\r\n                {\r\n                    return new Vector2(0,0);\r\n                }\r\n                return new Vector2(this.x/(Math.sqrt(this.x * this.x + this.y * this.y)), this.y/(Math.sqrt(this.x * this.x + this.y * this.y)));\r\n                // return new Vector2(this.x / this.getMagnitude(), this.y / this.getMagnitude());\r\n            }\r\n\r\n            /**\r\n             * Method to obtain current magnitude of vector\r\n             * @return Magnitude of type number\r\n             */\r\n            public getMagnitude(): number {\r\n                return Math.sqrt(this.x * this.x + this.y * this.y);\r\n            }\r\n\r\n            public setMagnitude(magnitude: number): void {\r\n                var ang_current: number = this.getAngle();\r\n                this.polar(magnitude, ang_current);\r\n            }\r\n\r\n            public getAngle(): number {\r\n                return Math.atan2(this.y, this.x);\r\n            }\r\n\r\n            public polar(mag: number, ang_rad: number): void {\r\n                this.x = mag * Math.cos(ang_rad);\r\n                this.y = mag * Math.sin(ang_rad);\r\n            }\r\n\r\n            /**\r\n             * Method to rotate current vector\r\n             * @param    angle_rad Angle in radian to rotate current vector\r\n             * @param    offset A vector to offset current circular into an eliptical course\r\n             * @return A copy of the rotated vector\r\n             */\r\n            public rotate(angle_rad: number): Vector2 {\r\n                let newX: number = this.x * Math.cos(angle_rad) - this.y * Math.sin(angle_rad);\r\n                let newY: number = this.x * Math.sin(angle_rad) + this.y * Math.cos(angle_rad);\r\n\r\n                return new Vector2(newX, newY);\r\n            }\r\n\r\n            public clone(): Vector2 {\r\n                let clone1: Vector2 = new Vector2(this.x, this.y);\r\n                return clone1;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 8/22/2018\r\n */\r\n\r\n\r\nnamespace Framework {\r\n    export module Utils {\r\n        import Graphics = PIXI.Graphics;\r\n\r\n        export class PixiDashedLine {\r\n\r\n            // constructor( ) {\r\n            //     super();\r\n            //     this.drawDashedLine(startX, startY, endX, endY, strokeLength, gap);\r\n            // }\r\n\r\n            /**\r\n             * @description – returns a sprite with a dashed line\r\n             * @langversion 3.0\r\n             * @usage drawDashedLine( 30, 30, 100, 100, 5, 3 );\r\n             *\r\n             * @param graphicsObject The object where to draw the line\r\n             * @param startX Start X of dashed line\r\n             * @param startY Start Y of dashed line\r\n             * @param endX End X of dashed line\r\n             * @param endY End Y of dashed line\r\n             * @param strokeLength Stroke length of dash\r\n             * @param gap Length of gap between dashes\r\n             * @param color\r\n             * @param stroke\r\n             *\r\n             * @return adds dashed line to the Graphics element\r\n             */\r\n            // import flash.display.Graphics;\r\n            // import flash.display.Sprite;\r\n\r\n            public static drawDashedLine(graphics: Graphics, startX: number = 0, startY: number = 0, endX: number = 0, endY: number = 0, strokeLength: number = 0, gap: number = 0, color: number = 0xffffff, stroke: number = 1, alpha: number = 1): Vector2 {\r\n                let arrowPoint: Vector2 = new Vector2();\r\n\r\n                // let graphics:Graphics = new Graphics();\r\n                // let line:Sprite = new Sprite();\r\n                // let lineGraphics:Graphics = line.graphics;\r\n                graphics.lineStyle(stroke, color, alpha);\r\n\r\n//lineGraphics.lineTo( startX, startY );\r\n\r\n// calculate the length of the segment\r\n                let segmentLength: number = strokeLength + gap;\r\n\r\n// calculate the length of the dashed line\r\n                let deltaX: number = endX - startX;\r\n                let deltaY: number = endY - startY;\r\n\r\n//By Pythagorous theorem\r\n                let _delta: number = Math.sqrt((deltaX * deltaX) + (deltaY * deltaY));\r\n\r\n// calculate the number of segments needed\r\n                let segmentsCount: number = Math.floor(Math.abs(_delta / segmentLength));\r\n\r\n// get the angle of the line in radians\r\n                let radians: number = Math.atan2(deltaY, deltaX);\r\n\r\n// start the line here\r\n                let aX: number = startX;\r\n                let aY: number = startY;\r\n\r\n// add these to cx, cy to get next seg start\r\n                deltaX = Math.cos(radians) * segmentLength;\r\n                deltaY = Math.sin(radians) * segmentLength;\r\n\r\n// loop through each segment\r\n                for (let i: number = 0; i < segmentsCount; i++) {\r\n                    graphics.moveTo(aX, aY);\r\n                    graphics.lineTo(aX + Math.cos(radians) * strokeLength, aY + Math.sin(radians) * strokeLength);\r\n                    aX += deltaX;\r\n                    aY += deltaY;\r\n                }\r\n\r\n// handling the last segment\r\n                graphics.moveTo(aX, aY);\r\n                _delta = Math.sqrt((endX - aX) * (endX - aX) + (endY - aY) * (endY - aY));\r\n                if (_delta > segmentLength) {\r\n// segment ends in the gap; drawing a full dash\r\n                    graphics.lineTo(aX + Math.cos(radians) * strokeLength, aY + Math.sin(radians) * strokeLength);\r\n                } else if (_delta > 0) {\r\n// segment shorter than dash; draw the remaining only\r\n                    graphics.lineTo(aX + Math.cos(radians) * _delta, aY + Math.sin(radians) * _delta);\r\n                }\r\n// move to the end position\r\n                graphics.lineTo(endX, endY);\r\n\r\n                arrowPoint.x = aX + Math.cos(radians) * (gap);// + Math.cos(radians) * (radius + gap);\r\n                arrowPoint.y = aY + Math.sin(radians) * (gap);// + Math.sin(radians) * (radius + gap);\r\n\r\n                return arrowPoint;\r\n                // return graphics;\r\n            }\r\n\r\n            public static drawDottedLine(graphics: Graphics, startX: number = 0, startY: number = 0, endX: number = 0, endY: number = 0, radius: number = 0, gap: number = 0, color: number = 0xffffff, alpha: number = 1): Vector2 {\r\n                // startX += gap;\r\n                // startY += gap;\r\n                let arrowPoint: Vector2 = new Vector2();\r\n\r\n                // let graphics:Graphics = new Graphics();\r\n                // let line:Sprite = new Sprite();\r\n                // let lineGraphics:Graphics = line.graphics;\r\n                // graphics.lineStyle( stroke, color, alpha );\r\n\r\n//lineGraphics.lineTo( startX, startY );\r\n\r\n// calculate the length of the segment\r\n                let segmentLength: number = radius * 2 + gap;\r\n\r\n// calculate the length of the dashed line\r\n                let deltaX: number = endX - startX;\r\n                let deltaY: number = endY - startY;\r\n\r\n//By Pythagorous theorem\r\n                let _delta: number = Math.sqrt((deltaX * deltaX) + (deltaY * deltaY));\r\n\r\n// calculate the number of segments needed\r\n                let segmentsCount: number = Math.floor(Math.abs(_delta / segmentLength));\r\n\r\n// get the angle of the line in radians\r\n                let radians: number = Math.atan2(deltaY, deltaX);\r\n\r\n// start the line here\r\n                let aX: number = startX;\r\n                let aY: number = startY;\r\n\r\n// add these to cx, cy to get next seg start\r\n                deltaX = Math.cos(radians) * segmentLength;\r\n                deltaY = Math.sin(radians) * segmentLength;\r\n\r\n                graphics.beginFill(color, alpha);\r\n// loop through each segment\r\n                for (let i: number = 0; i < segmentsCount; i++) {\r\n                    // graphics.moveTo( aX, aY );\r\n                    graphics.drawCircle(aX + Math.cos(radians) * (radius + gap), aY + Math.sin(radians) * (radius + gap), radius);\r\n\r\n                    aX += deltaX;\r\n                    aY += deltaY;\r\n                }\r\n\r\n\r\n// handling the last segment\r\n//                 graphics.moveTo( aX, aY );\r\n                _delta = Math.sqrt((endX - aX) * (endX - aX) + (endY - aY) * (endY - aY));\r\n                if (_delta > segmentLength) {\r\n// segment ends in the gap; drawing a full dash\r\n                    graphics.drawCircle(aX + Math.cos(radians) * radius, aY + Math.sin(radians) * radius, radius);\r\n                    // arrowPoint.x = aX + Math.cos(radians) * (radius + gap);\r\n                    // arrowPoint.y = aY + Math.sin(radians) * (radius + gap);\r\n//                 } else if( _delta > 0 ) {\r\n// // segment shorter than dash; draw the remaining only\r\n//                     graphics.drawCircle( aX + Math.cos( radians ) * _delta, aY + Math.sin( radians ) * _delta, radius );\r\n//                 }\r\n// move to the end position\r\n                    graphics.drawCircle(endX, endY, radius);\r\n                    // arrowPoint.x = endX;// + Math.cos(radians) * (radius + gap);\r\n                    // arrowPoint.y = endY;// + Math.cos(radians) * (radius + gap);\r\n                    // return graphics;\r\n                }\r\n                graphics.endFill();\r\n                arrowPoint.x = aX + Math.cos(radians) * gap * 1.6;// (radius * 2 + gap * 1.2);// + Math.cos(radians) * (radius + gap);\r\n                arrowPoint.y = aY + Math.sin(radians) * gap * 1.6;// (radius * 2 + gap * 1.2);// + Math.sin(radians) * (radius + gap);\r\n\r\n                return arrowPoint;\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n","/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 7/17/2018\r\n */\r\n\r\nnamespace Framework {\r\n    export module Utils {\r\n        export class ButtonState {\r\n            public down: boolean = false;\r\n            public pressed: boolean = false;\r\n        }\r\n    }\r\n}\r\n","///<reference path=\"Vector2.ts\"/>\r\n///<reference path=\"button-state.ts\"/>\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 7/17/2018\r\n */\r\n\r\n\r\nnamespace Framework {\r\n    export module Utils {\r\n\r\n        import Point = PIXI.Point;\r\n        import Vector2 = Framework.Utils.Vector2;\r\n\r\n        export class MouseHandler {\r\n            private static instance: MouseHandler;\r\n            private initialized: boolean = false;\r\n\r\n            public left: ButtonState;\r\n            public middle: ButtonState;\r\n            public right: ButtonState;\r\n\r\n            public position: Point;\r\n\r\n            static Instance(): MouseHandler {\r\n                if (!MouseHandler.instance) {\r\n                    MouseHandler.instance = new MouseHandler();\r\n\r\n                    if (!MouseHandler.Instance().initialized) {\r\n                        MouseHandler.Instance().initialized = true;\r\n\r\n                        MouseHandler.Instance().position = new Point();\r\n                        MouseHandler.Instance().left = new ButtonState();\r\n                        MouseHandler.Instance().middle = new ButtonState();\r\n                        MouseHandler.Instance().right = new ButtonState();\r\n\r\n                        // document.onmousemove = MouseHandler.Instance().handleMouseMove.bind(this);\r\n                        // document.onmousedown = MouseHandler.Instance().handleMouseDown.bind(this);\r\n                        // document.onmouseup = MouseHandler.Instance().handleMouseUp.bind(this);\r\n\r\n                        // console.log(\"mouse-ul: \" + AbstractEntryPoint.renderer.interaction.mouse.);\r\n                        // AbstractEntryPoint.stage. = ()=>{\r\n\r\n                        // };\r\n\r\n\r\n                        AbstractEntryPoint.stage.interactive = true;\r\n                        AbstractEntryPoint.stage.interactiveChildren = true;\r\n                        AbstractEntryPoint.stage.on(\"mousemove\",\r\n                            MouseHandler.Instance().handleMouseMove.bind(this)\r\n                        );\r\n\r\n                        AbstractEntryPoint.stage.on(\"mousedown\", (e) => {\r\n                            MouseHandler.Instance().handleMouseDown(e);\r\n                        });\r\n\r\n                        AbstractEntryPoint.stage.on(\"mouseup\", (e) => {\r\n                            MouseHandler.Instance().handleMouseUp(e);\r\n                        });\r\n\r\n                        AbstractEntryPoint.stage.on(\"mouseupoutside\", (e) => {\r\n                            MouseHandler.Instance().handleMouseUp(e);\r\n                        });\r\n                        MouseHandler.Instance().reset();\r\n                        // function mousedownEventHandler(e) {\r\n                        //     //get the data\r\n                        //     var button = e.data.button;\r\n                        //     console.log('Mouse Down: button is:', button);\r\n                        // }\r\n\r\n\r\n                    }\r\n                }\r\n                return MouseHandler.instance;\r\n            }\r\n\r\n            private handleMouseMove(): void {\r\n                let x: number = AbstractEntryPoint.renderer.plugins.interaction.mouse.global.x;\r\n                let y: number = AbstractEntryPoint.renderer.plugins.interaction.mouse.global.y;\r\n\r\n                // AbstractEntryPoint.renderer.plugins.mouse.getLocalPosition(AbstractEntryPoint.stage);\r\n\r\n\r\n                MouseHandler.Instance().position = new Point(x, y);\r\n            }\r\n\r\n            private handleMouseDown(e): void {\r\n                // this.handleMouseMove(e);\r\n\r\n                console.log(\"intra la mouse down\");\r\n                if (e.data && e.data.button == 0) {\r\n\r\n                    if (!MouseHandler.Instance().left.down) {\r\n                        MouseHandler.Instance().left.pressed = true;\r\n                    }\r\n                    MouseHandler.Instance().left.down = true;\r\n\r\n                } else if (e.data && e.data.button == 1) {\r\n\r\n                    if (!MouseHandler.Instance().middle.down) {\r\n                        MouseHandler.Instance().middle.pressed = true;\r\n                    }\r\n                    MouseHandler.Instance().middle.down = true;\r\n\r\n                } else if (e.data && e.data.button == 2) {\r\n\r\n                    if (!MouseHandler.Instance().right.down) {\r\n                        MouseHandler.Instance().right.pressed = true;\r\n                    }\r\n                    MouseHandler.Instance().right.down = true;\r\n                }\r\n            }\r\n\r\n            private handleMouseUp(e): void {\r\n                // this.handleMouseMove(e);\r\n                if (e.data && e.data.button == 0) {\r\n                    MouseHandler.Instance().left.down = false;\r\n                } else if (e.data && e.data.button == 1) {\r\n                    MouseHandler.Instance().middle.down = false;\r\n                } else if (e.data && e.date.button == 2) {\r\n                    MouseHandler.Instance().right.down = false;\r\n                }\r\n            }\r\n\r\n            private reset(): void {\r\n                // this.position.x = e.pageX;\r\n                this.left.pressed = false;\r\n                this.middle.pressed = false;\r\n                this.right.pressed = false;\r\n\r\n                requestAnimationFrame(this.reset.bind(this));\r\n            }\r\n\r\n            public GetAngle(vector: Vector2): number {\r\n                return Math.atan2(this.position.x - vector.x, -(this.position.y - vector.y)) * (180 / Math.PI);\r\n            }\r\n        }\r\n\r\n    }\r\n}","///<reference path=\"../Framework/Utils/Vector2.ts\"/>\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 7/24/2018\r\n */\r\n\r\n\r\nnamespace Pockey {\r\n\r\n    import Vector2 = Framework.Utils.Vector2;\r\n    import Settings = Framework.Settings;\r\n\r\n    export interface InventoryVO {\r\n        id?: string,\r\n        icon?: string,\r\n        model?: string,\r\n        category?: string,\r\n        level?: number,\r\n        color?: number\r\n    }\r\n\r\n    export class PockeySettings {\r\n\r\n        public static PLAYER_AVATAR_ID: string;\r\n        public static PLAYER_SOCKET_ID: string = \"\";\r\n        public static PLAYER_NICKNAME: string = \"\";\r\n        public static PLAYER_ID: string = \"guest\";\r\n        public static PLAYER_LEVEL: number = 1;\r\n        public static OPPONENT_COLOR: number;\r\n\r\n        public static OPPONENT_SOCKET_ID: string = \"\";\r\n        public static OPPONENT_AVATAR_ID: string;\r\n        public static OPPONENT_NICKNAME: string = \"SandruOpponent\";\r\n        public static DELTA: number = 0.98;\r\n\r\n        public static FRAMES_TO_SEND_ON_WATCH:number = 6;\r\n        public static BALL_RADIUS: number = 17;\r\n        public static P2_WORLD_STEP: number = 1 / 60;\r\n        public static POCKEY_CUSTOM_BACKGROUND_NAME: string = \"pockey_custom_background_name\";\r\n\r\n        public static PUCK_COLOR: number = 0xe4b31c;\r\n        public static MIDDLE_TABLE_POS: Vector2;\r\n        public static MIDDLE_TABLE_LEFT_POS: Vector2;\r\n        public static MIDDLE_TABLE_RIGHT_POS: Vector2;\r\n        public static BALLS_NUMBER_FOR_EACH_PLAYER: number = 7;\r\n        public static STICK_MAX_POWER: number = 108;\r\n        public static LARGE_GOALIES_ARRAY: number[] = [];\r\n\r\n        public static BABYLON_Y_OFFSET:number = 27;\r\n        public static GOALIE_SPEED: number = 1;\r\n        public static SMALL_GOALIES_ARRAY: number[] = [];\r\n\r\n        public static LARGE_COLORS_ARRAY: InventoryVO[] = [\r\n            {\r\n                category: \"COLORS\",\r\n                id: \"0xe92c5a\",\r\n                color: 0xe92c5a\r\n            },\r\n            {\r\n                category: \"COLORS\",\r\n                id: \"0x16e0f8\",\r\n                color: 0x16e0f8\r\n            },\r\n            {\r\n                category: \"COLORS\",\r\n                id: \"0xd6d72a\",\r\n                color: 0xd6d72a\r\n            },\r\n            {\r\n                category: \"COLORS\",\r\n                id: \"0xc32ce9\",\r\n                color: 0xc32ce9\r\n            },\r\n            {\r\n                category: \"COLORS\",\r\n                id: \"0x1584f4\",\r\n                color: 0x1584f4\r\n            },\r\n            {\r\n                category: \"COLORS\",\r\n                id: \"0x15efaf\",\r\n                color: 0x15efaf\r\n            },\r\n            {\r\n                category: \"COLORS\",\r\n                id: \"0x24a247\",\r\n                color: 0x24a247\r\n            },\r\n            {\r\n                category: \"COLORS\",\r\n                id: \"0x86b009\",\r\n                color: 0x86b009\r\n            },\r\n            {\r\n                category: \"COLORS\",\r\n                id: \"0xff8023\",\r\n                color: 0xff8023\r\n            },\r\n            {\r\n                category: \"COLORS\",\r\n                id: \"0xe82bc3\",\r\n                color: 0xE82BC3\r\n            }\r\n        ];\r\n\r\n        public static SMALL_COLORS_ARRAY: InventoryVO[] = [\r\n            {\r\n                category: \"COLORS\",\r\n                id: \"0xe92c5a\",\r\n                color: 0xe92c5a\r\n            },\r\n            {\r\n                category: \"COLORS\",\r\n                id: \"0x16e0f8\",\r\n                color: 0x16e0f8\r\n            }\r\n        ];\r\n\r\n        public static PLAYER_COLOR_ID: string = PockeySettings.SMALL_COLORS_ARRAY[0].id;\r\n\r\n        public static SMALL_DECALS_ARRAY: InventoryVO[] = [\r\n            {\r\n                category: \"DECALS\",\r\n                id: \"decal_default\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_default.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_default.png\",\r\n                level: 1\r\n            }\r\n        ];\r\n\r\n        public static LARGE_DECALS_ARRAY: InventoryVO[] = [\r\n            {\r\n                category: \"DECALS\",\r\n                id: \"decal_default\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_default.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_default.png\",\r\n                level: 1\r\n            },\r\n            {\r\n                category: \"DECALS\",\r\n                id: \"decal_welcome\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/dccal_welcome.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/dccal_welcome.png\",\r\n                level: 1\r\n            },\r\n            {\r\n                category: \"DECALS\",\r\n                id: \"decal_astrojunkie\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_astrojunkie.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_astrojunkie.png\",\r\n                level: 2\r\n            }, {\r\n                category: \"DECALS\",\r\n                id: \"decal_blastoff\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_blastoff.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_blastoff.png\",\r\n                level: 2\r\n            },\r\n            {\r\n                category: \"DECALS\",\r\n                id: \"decal_cthulu\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_cthulu.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_cthulu.png\",\r\n                level: 3\r\n            },\r\n            {\r\n                category: \"DECALS\",\r\n                id: \"decal_dice\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_dice.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_dice.png\",\r\n                level: 3\r\n            },\r\n            {\r\n                category: \"DECALS\",\r\n                id: \"decal_insertcoin\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_insertcoin.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_insertcoin.png\",\r\n                level: 4\r\n            },\r\n            {\r\n                category: \"DECALS\",\r\n                id: \"decal_knucklesandwhich\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_knucklesandwhich.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_knucklesandwhich.png\",\r\n                level: 4\r\n            }, {\r\n                category: \"DECALS\",\r\n                id: \"decal_looselips\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_looselips.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_looselips.png\",\r\n                level: 5\r\n            },\r\n            {\r\n                category: \"DECALS\",\r\n                id: \"decal_oneup\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_oneup.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_oneup.png\",\r\n                level: 6\r\n            },\r\n            {\r\n                category: \"DECALS\",\r\n                id: \"decal_playerone\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_playerone.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_playerone.png\",\r\n                level: 7\r\n            }, {\r\n                category: \"DECALS\",\r\n                id: \"decal_pockey\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_pockey.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_pockey.png\",\r\n                level: 7\r\n            },\r\n            {\r\n                category: \"DECALS\",\r\n                id: \"decal_ragequit\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_ragequit.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_ragequit.png\",\r\n                level: 8\r\n            },\r\n            {\r\n                category: \"DECALS\",\r\n                id: \"decal_statTrickshot\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_statTrickshot.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_statTrickshot.png\",\r\n                level: 9\r\n            },\r\n            {\r\n                category: \"DECALS\",\r\n                id: \"decal_towerking\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_towerking.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_towerking.png\",\r\n                level: 10\r\n            },\r\n            {\r\n                category: \"DECALS\",\r\n                id: \"decal_wingedsword\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_wingedsword.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/decalSkins/decal_wingedsword.png\",\r\n                level: 11\r\n            },\r\n        ];\r\n\r\n        public static PLAYER_DECAL_ID: string = PockeySettings.SMALL_DECALS_ARRAY[0].id;\r\n\r\n        public static LARGE_AVATARS_ARRAY: InventoryVO[] = [\r\n            {\r\n                category: \"AVATARS\",\r\n                id: \"avatar_guest\",\r\n                icon: Settings.desktopAssetsPath + \"Images/avatar_guest.png\",\r\n                level: 1\r\n            },\r\n            {\r\n                category: \"AVATARS\",\r\n                id: \"avatar_boi\",\r\n                icon: Settings.desktopAssetsPath + \"Images/avatar_boi.png\",\r\n                level: 1\r\n            },\r\n            {\r\n                category: \"AVATARS\",\r\n                id: \"avatar_grrl\",\r\n                icon: Settings.desktopAssetsPath + \"Images/avatar_grrl.png\",\r\n                level: 1\r\n            },\r\n            {\r\n                category: \"AVATARS\",\r\n                id: \"nerdist\",\r\n                icon: Settings.desktopAssetsPath + \"Images/avatar_nerdist.png\",\r\n                level: 2\r\n            },\r\n            {\r\n                category: \"AVATARS\",\r\n                id: \"avatar_micky\",\r\n                icon: Settings.desktopAssetsPath + \"Images/avatar_micky.png\",\r\n                level: 2\r\n            },\r\n            {\r\n                category: \"AVATARS\",\r\n                id: \"avatar_glenn\",\r\n                icon: Settings.desktopAssetsPath + \"Images/avatar_glenn.png\",\r\n                level: 3\r\n            },\r\n            {\r\n                category: \"AVATARS\",\r\n                id: \"avatar_sc-izzi\",\r\n                icon: Settings.desktopAssetsPath + \"Images/avatar_sc-izzi.png\",\r\n                level: 4\r\n            },\r\n            {\r\n                category: \"AVATARS\",\r\n                id: \"avatar_atlas\",\r\n                icon: Settings.desktopAssetsPath + \"Images/avatar_atlas.png\",\r\n                level: 5\r\n            },\r\n            {\r\n                category: \"AVATARS\",\r\n                id: \"avatar_bear-blue\",\r\n                icon: Settings.desktopAssetsPath + \"Images/avatar_bear-blue.png\",\r\n                level: 6\r\n            },\r\n            {\r\n                category: \"AVATARS\",\r\n                id: \"avatar_cate\",\r\n                icon: Settings.desktopAssetsPath + \"Images/avatar_cate.png\",\r\n                level: 7\r\n            },\r\n            {\r\n                category: \"AVATARS\",\r\n                id: \"avatar_kooky\",\r\n                icon: Settings.desktopAssetsPath + \"Images/avatar_kooky.png\",\r\n                level: 8\r\n            },\r\n            {\r\n                category: \"AVATARS\",\r\n                id: \"avatar_r66-z\",\r\n                icon: Settings.desktopAssetsPath + \"Images/avatar_r66-z.png\",\r\n                level: 8\r\n            },\r\n            {\r\n                category: \"AVATARS\",\r\n                icon: Settings.desktopAssetsPath + \"Images/avatar_sc-comet.png\",\r\n                id: \"avatar_sc-comet\",\r\n                level: 8\r\n            },\r\n            {\r\n                category: \"AVATARS\",\r\n                id: \"avatar_spooky\",\r\n                icon: Settings.desktopAssetsPath + \"Images/avatar_spooky.png\",\r\n                level: 9\r\n            },\r\n            {\r\n                category: \"AVATARS\",\r\n                id: \"avatar_xmas-atlas\",\r\n                icon: Settings.desktopAssetsPath + \"Images/avatar_xmas-atlas.png\",\r\n                level: 9\r\n            },\r\n            {\r\n                category: \"AVATARS\",\r\n                id: \"avater_snuggles\",\r\n                icon: Settings.desktopAssetsPath + \"Images/avater_snuggles.png\",\r\n                level: 10\r\n            }\r\n        ];\r\n\r\n\r\n        public static SMALL_AVATARS_ARRAY: InventoryVO[] = [\r\n            {\r\n                category: \"AVATARS\",\r\n                id: \"avatar_guest\",\r\n                icon: Settings.desktopAssetsPath + \"Images/avatar_guest.png\",\r\n                level: 1\r\n            }\r\n        ];\r\n\r\n        //////////////////\r\n        public static LARGE_MISC_ARRAY: InventoryVO[] = [\r\n            {\r\n                category: \"MISC\",\r\n                id: \"feltcolor-blue\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/feltColorSkins/icon_feltcolor-blue.png\",\r\n                level: 1\r\n            },\r\n            {\r\n                category: \"MISC\",\r\n                id: \"feltcolor-orange\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/feltColorSkins/icon_feltcolor-orange.png\",\r\n                level: 1\r\n            },\r\n            {\r\n                category: \"MISC\",\r\n                id: \"feltcolor-pink\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/feltColorSkins/icon_feltcolor-pink.png\",\r\n                level: 1\r\n            },\r\n            {\r\n                category: \"MISC\",\r\n                id: \"feltcolor-purple\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/feltColorSkins/icon_feltcolor-purple.png\",\r\n                level: 1\r\n            },\r\n            {\r\n                category: \"MISC\",\r\n                id: \"feltcolor-red\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/feltColorSkins/icon_feltcolor-red.png\",\r\n                level: 1\r\n            },\r\n            {\r\n                category: \"MISC\",\r\n                id: \"feltcolor-silver\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/feltColorSkins/icon_feltcolor-silver.png\",\r\n                level: 1\r\n            },\r\n            {\r\n                category: \"MISC\",\r\n                id: \"feltcolor-teal\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/feltColorSkins/icon_feltcolor-teal.png\",\r\n                level: 1\r\n            },\r\n            {\r\n                category: \"MISC\",\r\n                id: \"feltcolor-tope\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/feltColorSkins/icon_feltcolor-tope.png\",\r\n                level: 1\r\n            },\r\n            {\r\n                category: \"MISC\",\r\n                id: \"feltcolor-yellow\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/feltColorSkins/icon_feltcolor-blue.png\",\r\n                level: 1\r\n            }\r\n        ];\r\n\r\n\r\n        public static SMALL_MISC_ARRAY: InventoryVO[] = [\r\n            {\r\n                category: \"MISC\",\r\n                id: \"feltcolor-blue\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/feltColorSkins/icon_feltcolor-blue.png\",\r\n                level: 1\r\n            }\r\n        ];\r\n\r\n        public static PLAYER_MISC_ID: string = PockeySettings.SMALL_MISC_ARRAY[0].id;\r\n\r\n        //////////////////\r\n\r\n        public static SMALL_CUES_ARRAY: InventoryVO[] = [\r\n            {\r\n                category: \"CUES\",\r\n                id: \"icon_stick_default\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/icon_stick-default.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/stick_default.png\",\r\n                level: 1\r\n            }\r\n        ];\r\n\r\n        public static LARGE_CUES_ARRAY: InventoryVO[] = [\r\n            {\r\n                category: \"CUES\",\r\n                id: \"icon_stick-default\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/icon_stick-default.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/stick_default.png\",\r\n                level: 1\r\n            },\r\n            {\r\n                category: \"CUES\",\r\n                id: \"stick_basic\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/icon_stick-basic.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/stick_basic.png\",\r\n                level: 1\r\n            },\r\n            {\r\n                category: \"CUES\",\r\n                id: \"stick_asiimowned\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/icon_stick-asiimowned.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/stick_asiimowned.png\",\r\n                level: 1\r\n            },\r\n            {\r\n                category: \"CUES\",\r\n                id: \"stick_bluesteel\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/icon_stick-bluesteel.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/stick_bluesteel.png\",\r\n                level: 2\r\n            },\r\n            {\r\n                category: \"CUES\",\r\n                id: \"stick_candycane\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/icon_stick-candycane.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/stick_candycane.png\",\r\n                level: 2\r\n            },\r\n            {\r\n                category: \"CUES\",\r\n                id: \"stick_dotty\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/icon_stick-dotty.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/stick_dotty.png\",\r\n                level: 2\r\n            },\r\n            {\r\n                category: \"CUES\",\r\n                id: \"stick_faceybook\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/icon_stick-faceybook.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/stick_faceybook.png\",\r\n                level: 3\r\n            },\r\n            {\r\n                category: \"CUES\",\r\n                id: \"stick_faceyou\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/icon_stick-faceyou.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/stick_faceyou.png\",\r\n                level: 3\r\n            },\r\n            {\r\n                category: \"CUES\",\r\n                id: \"stick_ivory\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/icon_stick-ivory.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/stick_ivory.png\",\r\n                level: 4\r\n            },\r\n            {\r\n                category: \"CUES\",\r\n                id: \"stick_ninja\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/icon_stick-ninja.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/stick_ninja.png\",\r\n                level: 4\r\n            },\r\n            {\r\n                category: \"CUES\",\r\n                id: \"stick_pinky\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/icon_stick-pinky.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/stick_pinky.png\",\r\n                level: 4\r\n            },\r\n            {\r\n                category: \"CUES\",\r\n                id: \"stick_purplestripe\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/icon_stick-purplestripe.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/stick_purplestripe.png\",\r\n                level: 5\r\n            },\r\n            {\r\n                category: \"CUES\",\r\n                id: \"stick_ragequit\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/icon_stick-ragequit.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/stick_ragequit.png\",\r\n                level: 6\r\n            },\r\n            {\r\n                category: \"CUES\",\r\n                id: \"stick_rawkstar\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/icon_stick-rawkstar.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/stick_rawkstar.png\",\r\n                level: 7\r\n            },\r\n            {\r\n                category: \"CUES\",\r\n                id: \"stick_rocket\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/icon_stick-rocket.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/stick_rocket.png\",\r\n                level: 7\r\n            },\r\n            {\r\n                category: \"CUES\",\r\n                id: \"stick_snakeeyes\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/icon_stick-snakeeyes.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/stick_snakeeyes.png\",\r\n                level: 8\r\n            },\r\n            {\r\n                category: \"CUES\",\r\n                id: \"stick_tiger\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/icon_stick-tiger.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/stick_tiger.png\",\r\n                level: 8\r\n            },\r\n            {\r\n                category: \"CUES\",\r\n                id: \"stick_tweetybird\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/icon_stick-tweetybird.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/stick_tweetybird.png\",\r\n                level: 9\r\n            },\r\n            {\r\n                category: \"CUES\",\r\n                id: \"stick_whiteknight\",\r\n                icon: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/icon_stick-whiteknight.png\",\r\n                model: Settings.desktopAssetsPath + \"Images/InventoryScreen/poolstickSkins/stick_whiteknight.png\",\r\n                level: 10\r\n            },\r\n\r\n        ];\r\n\r\n        public static PLAYER_CUE_ID: string = PockeySettings.SMALL_CUES_ARRAY[0].id;\r\n\r\n\r\n        public static ROUND_DURATION_IN_SECONDS: number = 25;\r\n\r\n        public static MAIN_COLLISION_POLYGON: number[][] = [\r\n            [-559, -98],\r\n            [-487, -98],\r\n            [-482, -106],\r\n            [-482, -196],\r\n            [-485, -201],\r\n            [-520, -242],\r\n            [-520, -268],\r\n            [-494, -282],\r\n            [-468, -264],\r\n            [-439, -245],\r\n            [-431, -242],\r\n            [-47, -242],\r\n            [-41, -245],\r\n            [-25, -264],\r\n            [-10, -288],\r\n            [14, -288],\r\n            [30, -264],\r\n            [46, -245],\r\n            [53, -242],\r\n            [439, -242],\r\n            [447, -245],\r\n            [488, -280],\r\n            [515, -278],\r\n            [527, -249],\r\n            [490, -202],\r\n            [484, -195],\r\n            [484, -104],\r\n            [492, -96],\r\n            [555, -96],\r\n            [565, -96],\r\n            [565, -317],\r\n            [-559, -317]\r\n        ];\r\n        public static MAIN_COLLISION_SHADOW: number[][] = [\r\n            [429 - 978, 277 - 12 - 549],\r\n            [429 - 978, 561 - 12 - 549],\r\n            [513 - 978, 561 - 12 - 549],\r\n            [513 - 978, 357 - 12 - 549],\r\n\r\n            [478 - 978, 314 - 12 - 549],\r\n\r\n            [476 - 978, 300 - 12 - 549],\r\n            [490 - 978, 303 - 12 - 549],\r\n\r\n\r\n            [535 - 978, 336 - 12 - 549],\r\n            [940 - 978, 336 - 12 - 549],\r\n            [981 - 978, 287 - 12 - 549],\r\n            [1018 - 978, 335 - 12 - 549],\r\n            [1426 - 978, 335 - 12 - 549],\r\n\r\n            [1469 - 978, 303 - 12 - 549],\r\n\r\n            [1485 - 978, 300 - 12 - 549],\r\n\r\n            [1483 - 978, 314 - 12 - 549],\r\n\r\n            [1448 - 978, 358 - 12 - 549],\r\n            [1448 - 978, 561 - 12 - 549],\r\n            [1533 - 978, 561 - 12 - 549],\r\n            [1533 - 978, 277 - 12 - 549]];\r\n\r\n        public static PLAYER_TOTAL_POINTS: number = 1;\r\n\r\n\r\n    }\r\n}\r\n","///<reference path=\"../../../Framework/Settings.ts\"/>\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 11/20/2018\r\n */\r\n\r\n\r\nnamespace Pockey {\r\n    export module Sound {\r\n        import Settings = Framework.Settings;\r\n\r\n        export class PockeySoundURLS {\r\n            public static MAIN_MENU_AMBIANCE:string = Settings.desktopAssetsPath + \"Audio/\" + \"pockey_main_menu.ogg\";\r\n            public static IN_GAME_AMBIANCE:string = Settings.desktopAssetsPath + \"Audio/\" + \"ambient.ogg\";\r\n            public static SHOOT_BALL:string = Settings.desktopAssetsPath + \"Audio/\" + \"shoot_ball.mp3\";\r\n            static LAST_FIVE_SECONDS:string = Settings.desktopAssetsPath + \"Audio/\" + \"5sec.ogg\";\r\n            static OPPONENT_FOUND:string = Settings.desktopAssetsPath + \"Audio/\" + \"opponent_found.ogg\";\r\n            static BALL_TO_BALL_HIT:string = Settings.desktopAssetsPath + \"Audio/\" + \"ball2ball_hit2.mp3\";\r\n            static GOALKEEPER_HIT:string = Settings.desktopAssetsPath + \"Audio/\" + \"goalkeeperHit.mp3\";\r\n            static BALL_IN_POCKET:string = Settings.desktopAssetsPath + \"Audio/\" + \"ballinpocket.mp3\";\r\n        }\r\n    }\r\n}\r\n\r\n","///<reference path=\"../../../../lib/types/p2/p2.d.ts\"/>\r\n///<reference path=\"../../../PockeyEntryPoint/pockey-settings.ts\"/>\r\n///<reference path=\"../../../Framework/Signals/signals-manager.ts\"/>\r\n///<reference path=\"../../../Framework/Signals/signal-types.ts\"/>\r\n///<reference path=\"../SoundModule/pockey-sound-names.ts\"/>\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 8/9/2018\r\n */\r\n\r\nnamespace Pockey {\r\n    export module GameModule {\r\n        import SignalsManager = Framework.Signals.SignalsManager;\r\n        import SignalsType = Framework.Signals.SignalsType;\r\n        import Vector2 = Framework.Utils.Vector2;\r\n        import PockeySoundURLS = Pockey.Sound.PockeySoundURLS;\r\n\r\n        export enum MaterialType {\r\n            BALL_MATERIAL = 1,\r\n            SHADOW_MATERIAL = 2,\r\n            LINE_MATERIAL = 3,\r\n            BALL_ONLY_MATERIAL = 4,\r\n            PUCK_ONLY_MATERIAL = 5,\r\n            PUCK_MATERIAL = 6,\r\n            GOALIE_MATERIAL = 7\r\n        }\r\n\r\n        export class P2WorldManager {\r\n            private static instance: P2WorldManager;\r\n            private initialized: boolean = false;\r\n            public name: string;\r\n            private materials: { [id: string]: p2.Material; };\r\n            // public ballMaterial: p2.Material;\r\n            // aici se calluie salamu!\r\n\r\n            public world: p2.World;\r\n            public frameStep: number = 1 / 60;\r\n\r\n            private ballToBallCollisionMaterial: p2.ContactMaterial;\r\n            private ballToPuckOnlyLineCollisionMaterial: p2.ContactMaterial;\r\n            private puckToBallOnlyLineCollisionMaterial: p2.ContactMaterial;\r\n\r\n\r\n            constructor() {\r\n                this.name = \"P2WorldManager\";\r\n                this.materials = {};\r\n            }\r\n\r\n            static Instance() {\r\n                if (!P2WorldManager.instance) {\r\n                    P2WorldManager.instance = new P2WorldManager();\r\n\r\n                    if (!P2WorldManager.Instance().initialized) {\r\n                        P2WorldManager.Instance().world = new p2.World({\r\n                            gravity: [0, 0],\r\n\r\n                        });\r\n\r\n                        P2WorldManager.Instance().world.stepping = true;\r\n                        P2WorldManager.Instance().world.frictionGravity = 0.6;\r\n                        // P2WorldManager.Instance().world.stepping = true;\r\n                        // P2WorldManager.Instance().world.frictionGravity = 0;\r\n                        // P2WorldManager.Instance().world.useFrictionGravityOnZeroGravity = false;\r\n                        // P2WorldManager.Instance().world.useWorldGravityAsFrictionGravity = false;\r\n\r\n                        // let solver:p2.GSSolver = new p2.GSSolver();\r\n                        // solver.tolerance = 0.00001;\r\n                        // solver.iterations = 20;//\r\n                        // solver.solve(40, P2WorldManager.Instance().world);\r\n\r\n                        // P2WorldManager.Instance().world.solver = solver;//\r\n                        // P2WorldManager.Instance().world.solver.sti = solver;//\r\n\r\n                        TweenMax.delayedCall(PockeySettings.P2_WORLD_STEP, P2WorldManager.Instance().createElements.bind(this));\r\n                        P2WorldManager.Instance().initialized = true;\r\n                        console.log(\"%c\" + \"P2WorldManager initialized\", \"color: blue\");\r\n\r\n                    }\r\n                }\r\n                return P2WorldManager.instance;\r\n            }\r\n\r\n            public getMaterialByID(materialID: number): p2.Material {\r\n                if (!_.isNull(P2WorldManager.Instance().materials[materialID]) && !_.isUndefined(P2WorldManager.Instance().materials[materialID]))\r\n                    return P2WorldManager.Instance().materials[materialID];\r\n\r\n                else {\r\n                    console.log(\"c%\" + \" \" + P2WorldManager.Instance().name + \" -> ERROR: material not registered\");\r\n                    return null;\r\n                }\r\n\r\n            }\r\n\r\n            private createElements() {\r\n\r\n                P2WorldManager.Instance().world.sleepMode = p2.World.BODY_SLEEPING;\r\n\r\n\r\n                P2WorldManager.Instance().materials = {};\r\n                P2WorldManager.createMaterials();\r\n\r\n                P2WorldManager.defineContactMaterials();\r\n            }\r\n\r\n            private static createMaterials(): void {\r\n                P2WorldManager.createNewMaterial(MaterialType.SHADOW_MATERIAL);\r\n                P2WorldManager.createNewMaterial(MaterialType.BALL_MATERIAL);\r\n                P2WorldManager.createNewMaterial(MaterialType.PUCK_MATERIAL);\r\n                P2WorldManager.createNewMaterial(MaterialType.BALL_ONLY_MATERIAL);\r\n                P2WorldManager.createNewMaterial(MaterialType.PUCK_ONLY_MATERIAL);\r\n                P2WorldManager.createNewMaterial(MaterialType.LINE_MATERIAL);\r\n                P2WorldManager.createNewMaterial(MaterialType.GOALIE_MATERIAL);\r\n            }\r\n\r\n            private static defineContactMaterials() {\r\n\r\n                // // ball to normal line contact material\r\n                let ballToNormalLineContactMaterial: p2.ContactMaterial = new p2.ContactMaterial(P2WorldManager.Instance().getMaterialByID(MaterialType.BALL_MATERIAL), P2WorldManager.Instance().getMaterialByID(MaterialType.LINE_MATERIAL), {\r\n                    // stiffness: 10000,\r\n                    // frictionStiffness: 500000,\r\n                    // friction: 0.68,\r\n                    restitution: 0.6821,\r\n                    // relaxation: 10\r\n                });\r\n\r\n                //ball to ball contact material\r\n                let ballToBallContactMaterial = new p2.ContactMaterial(P2WorldManager.Instance().getMaterialByID(MaterialType.BALL_MATERIAL), P2WorldManager.Instance().getMaterialByID(MaterialType.BALL_MATERIAL), {\r\n                    // friction: 0.2,\r\n                    restitution: 0.9\r\n                });\r\n                P2WorldManager.Instance().world.addContactMaterial(ballToBallContactMaterial);\r\n                //end ball to ball contact material\r\n\r\n                // ball to ball contact material\r\n                let ballToPuckContactMaterial = new p2.ContactMaterial(P2WorldManager.Instance().getMaterialByID(MaterialType.BALL_MATERIAL), P2WorldManager.Instance().getMaterialByID(MaterialType.PUCK_MATERIAL), {\r\n                    // friction: 10,\r\n                    restitution: 1,\r\n                    // friction: 0,\r\n                    // frictionStiffness: 10,\r\n                    // frictionRelaxation: 5,\r\n\r\n                });\r\n                P2WorldManager.Instance().world.addContactMaterial(ballToPuckContactMaterial);\r\n                //end ball to ball contact material\r\n\r\n\r\n                P2WorldManager.Instance().world.addContactMaterial(ballToNormalLineContactMaterial);\r\n                // // end ball to normal line contact material\r\n\r\n                //ball to puck only line contact material\r\n                let ballToPuckOnlyLineContactMaterial: p2.ContactMaterial = new p2.ContactMaterial(P2WorldManager.Instance().getMaterialByID(MaterialType.BALL_MATERIAL), P2WorldManager.Instance().getMaterialByID(MaterialType.PUCK_ONLY_MATERIAL), {\r\n                    // stiffness: 500000,\r\n                    // friction: 0.4,\r\n                    restitution: 0.6\r\n                });\r\n                P2WorldManager.Instance().world.addContactMaterial(ballToPuckOnlyLineContactMaterial);\r\n                //end ball to puck only line contact material\r\n\r\n\r\n                //ball to normal line contact material\r\n                let puckToNormalLineContactMaterial: p2.ContactMaterial = new p2.ContactMaterial(P2WorldManager.Instance().getMaterialByID(MaterialType.LINE_MATERIAL), P2WorldManager.Instance().getMaterialByID(MaterialType.PUCK_MATERIAL), {\r\n                    // surfaceVelocity: 88,\r\n                    // friction: 20,\r\n                    // stiffness: 1e10000,\r\n                    // restitution: 0.4\r\n                    // friction: 10,\r\n                    restitution: 0.6,\r\n                    // relaxation: 10\r\n                });\r\n                P2WorldManager.Instance().world.addContactMaterial(puckToNormalLineContactMaterial);\r\n                //end ball to normal line contact material\r\n\r\n                // //puck to ball only line contact material\r\n                let puckToBallOnlyLineContactMaterial: p2.ContactMaterial = new p2.ContactMaterial(P2WorldManager.Instance().getMaterialByID(MaterialType.BALL_ONLY_MATERIAL), P2WorldManager.Instance().getMaterialByID(MaterialType.PUCK_MATERIAL), {\r\n                    // stiffness: 888,\r\n                    // friction: 20,\r\n                    // surfaceVelocity: 20,\r\n                    restitution: 0.6\r\n                });\r\n                P2WorldManager.Instance().world.addContactMaterial(puckToBallOnlyLineContactMaterial);\r\n                //end puck to ball only line contact material\r\n\r\n                // goalieToBall\r\n                let goalieToBallContactMaterial: p2.ContactMaterial = new p2.ContactMaterial(P2WorldManager.Instance().getMaterialByID(MaterialType.BALL_MATERIAL), P2WorldManager.Instance().getMaterialByID(MaterialType.GOALIE_MATERIAL), {\r\n                    // friction: 10,\r\n                    // stiffness: 0,\r\n                    // friction: 0,\r\n                    // surfaceVelocity: 20,\r\n                    restitution: 1\r\n                });\r\n                P2WorldManager.Instance().world.addContactMaterial(goalieToBallContactMaterial);\r\n                //end puck to ball only line contact material\r\n\r\n                // goalieToBall\r\n                let goalieToPuckContactMaterial: p2.ContactMaterial = new p2.ContactMaterial(P2WorldManager.Instance().getMaterialByID(MaterialType.PUCK_MATERIAL), P2WorldManager.Instance().getMaterialByID(MaterialType.GOALIE_MATERIAL), {\r\n                    // stiffness: 0,\r\n                    // friction: 10,\r\n                    // surfaceVelocity: 20,\r\n                    restitution: 0.8\r\n                });\r\n                P2WorldManager.Instance().world.addContactMaterial(goalieToPuckContactMaterial);\r\n                //end puck to ball only line contact material\r\n\r\n                P2WorldManager.Instance().world.on(\"preSolve\", (evt) => {\r\n\r\n                    _.forEach(evt.contactEquations, (ce: p2.ContactEquation) => {\r\n                        // console.log(\"mat id1: \" + ce.shapeA.material.id, \"mat id2: \" + ce.shapeB.material.id);\r\n                        if ((ce.shapeA.material.id == MaterialType.BALL_MATERIAL && ce.shapeB.material.id == MaterialType.SHADOW_MATERIAL)) {\r\n                            ce.enabled = false;\r\n                        }\r\n                        else if ((ce.shapeA.material.id == MaterialType.PUCK_MATERIAL && ce.shapeB.material.id == MaterialType.PUCK_ONLY_MATERIAL)) {\r\n                            ce.enabled = false;\r\n                        }\r\n                        else if ((ce.shapeA.material.id == MaterialType.BALL_MATERIAL && ce.shapeB.material.id == MaterialType.BALL_ONLY_MATERIAL)) {\r\n                            ce.enabled = false;\r\n\r\n                        }\r\n                        else if ((ce.shapeA.material.id == MaterialType.SHADOW_MATERIAL && ce.shapeB.material.id == MaterialType.BALL_MATERIAL)) {\r\n                            ce.enabled = false;\r\n                        }\r\n                        else if ((ce.shapeA.material.id == MaterialType.PUCK_MATERIAL && ce.shapeB.material.id == MaterialType.SHADOW_MATERIAL)) {\r\n                            ce.enabled = false;\r\n                        }\r\n                        else if ((ce.shapeA.material.id == MaterialType.SHADOW_MATERIAL && ce.shapeB.material.id == MaterialType.PUCK_MATERIAL)) {\r\n                            ce.enabled = false;\r\n                        }\r\n                        else if ((ce.shapeA.material.id == MaterialType.SHADOW_MATERIAL && ce.shapeB.material.id == MaterialType.GOALIE_MATERIAL)) {\r\n                            ce.enabled = false;\r\n                        }\r\n                        else if ((ce.shapeA.material.id == MaterialType.GOALIE_MATERIAL && ce.shapeB.material.id == MaterialType.PUCK_ONLY_MATERIAL)) {\r\n                            ce.enabled = false;\r\n                        }\r\n                        else if ((ce.shapeA.material.id == MaterialType.GOALIE_MATERIAL && ce.shapeB.material.id == MaterialType.LINE_MATERIAL)) {\r\n                            ce.enabled = false;\r\n                        }\r\n                        else if ((ce.shapeA.material.id == MaterialType.BALL_MATERIAL && ce.shapeB.material.id == MaterialType.BALL_MATERIAL)) {\r\n                            let maxPower: number = 460;\r\n                            let velocityVectorA: Vector2 = new Vector2(ce.bodyA.velocity[0], ce.bodyA.velocity[1]);\r\n                            let speedA: number = velocityVectorA.getMagnitude();\r\n                            let velocityVectorB: Vector2 = new Vector2(ce.bodyB.velocity[0], ce.bodyB.velocity[1]);\r\n                            let speedB: number = velocityVectorB.getMagnitude();\r\n                            let higherVelocity: number = (speedB > speedA) ? speedB : speedA;\r\n                            let hitVolume: number = Math.round((higherVelocity / maxPower) * 100) / 100;\r\n                            if (hitVolume > 1)\r\n                                hitVolume = 1;\r\n                            else if (hitVolume < 0.3)\r\n                                hitVolume = 0.3;\r\n                            // console.log(\"velocity: \" + hitVolume);\r\n                            // let velocity:number = ce.bodyA.velocity\r\n                            // ce.bodyA.velocity\r\n                            // if()\r\n                            SignalsManager.DispatchSignal(SignalsType.PLAY_SOUND, [{\r\n                                volume: hitVolume,\r\n                                soundName: PockeySoundURLS.BALL_TO_BALL_HIT,\r\n                                enableMulti: false\r\n                            }]);\r\n\r\n                        }\r\n                        else if ((ce.shapeA.material.id == MaterialType.BALL_MATERIAL && ce.shapeB.material.id == MaterialType.GOALIE_MATERIAL)) {\r\n                            // veloCounter++;\r\n                            let ballVelocity: Vector2 = new Vector2(ce.bodyA.velocity[0], ce.bodyA.velocity[1]);\r\n                            // console.log(\"salam \" + veloCounter + \" velocity: \" + ballVelocity.x, ballVelocity.y);\r\n\r\n                            let ballSpeed: number = ballVelocity.getMagnitude();\r\n\r\n                            if (ballSpeed < 108) {\r\n                                let normalizedVector: Vector2 = ballVelocity.normalise().multiply(108);\r\n                                ce.bodyA.velocity[0] = normalizedVector.x;\r\n                                ce.bodyA.velocity[1] = normalizedVector.y;\r\n                            }\r\n\r\n                            SignalsManager.DispatchSignal(SignalsType.PLAY_SOUND, [{\r\n                                soundName: PockeySoundURLS.GOALKEEPER_HIT\r\n                            }]);\r\n                            // console.log(\"salam ball speed: \" + ballSpeed);\r\n                            // ce.bodyB.\r\n                        }\r\n                        else if ((ce.shapeA.material.id == MaterialType.PUCK_MATERIAL && ce.shapeB.material.id == MaterialType.GOALIE_MATERIAL)) {\r\n                            let ballVelocity: Vector2 = new Vector2(ce.bodyA.velocity[0], ce.bodyA.velocity[1]);\r\n                            // console.log(\"salam \" + veloCounter + \" velocity: \" + ballVelocity.x, ballVelocity.y);\r\n\r\n                            let ballSpeed: number = ballVelocity.getMagnitude();\r\n\r\n                            if (ballSpeed < 108) {\r\n                                let normalizedVector: Vector2 = ballVelocity.normalise().multiply(108);\r\n                                ce.bodyA.velocity[0] = normalizedVector.x;\r\n                                ce.bodyA.velocity[1] = normalizedVector.y;\r\n                            }\r\n\r\n                            SignalsManager.DispatchSignal(SignalsType.PLAY_SOUND, [{\r\n                                soundName: PockeySoundURLS.GOALKEEPER_HIT\r\n                            }]);\r\n                            // console.log(\"salam ball speed: \" + ballSpeed);\r\n                            // ce.bodyB.\r\n                        }\r\n                    });\r\n                }, this);\r\n            }\r\n\r\n            protected checkCollisions(): void {\r\n\r\n            }\r\n\r\n            private static createNewMaterial(ballMaterialType: MaterialType) {\r\n                P2WorldManager.Instance().materials[ballMaterialType] = new p2.Material(ballMaterialType);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","///<reference path=\"../../PockeyEntryPoint/pockey-entry-point.ts\"/>\r\n///<reference path=\"../../GameFiles/Modules/GameModule/balls/abstract-ball.ts\"/>\r\n///<reference path=\"../../GameFiles/Modules/GameModule/p2-world-manager.ts\"/>\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 8/1/2018\r\n */\r\n\r\n\r\nnamespace Framework {\r\n    export module Utils {\r\n        import Vector2 = Framework.Utils.Vector2;\r\n        import MaterialType = Pockey.GameModule.MaterialType;\r\n        import P2WorldManager = Pockey.GameModule.P2WorldManager;\r\n\r\n        export enum LineType {\r\n            BallsOnly = \"BallOnly\",\r\n            PuckOnly = \"PuckOnly\",\r\n            Normal = \"Normal\"\r\n        }\r\n\r\n        export class Line {\r\n\r\n            public firstPoint: Vector2;\r\n            public secondPoint: Vector2;\r\n            private angle: number;\r\n            public cosAlpha;\r\n            public sinAlpha;\r\n            public lineType: LineType;\r\n            public p2Body: p2.Body;\r\n\r\n            constructor(firstPoint: Vector2, secondPoint: Vector2, materialType: MaterialType) {\r\n                this.firstPoint = firstPoint;\r\n                this.secondPoint = secondPoint;\r\n                this.angle = this.getAngle();\r\n                this.cosAlpha = Math.cos(this.angle);\r\n                this.sinAlpha = Math.sin(this.angle);\r\n                // this.lineType = type;\r\n\r\n                this.p2Body = new p2.Body({\r\n                    mass: 0,\r\n                    // position: [496, 560],\r\n                    // fixedRotation: true,\r\n                    position: [(firstPoint.x + secondPoint.x) / 2, (firstPoint.y + secondPoint.y) / 2],\r\n                    angle: this.getAngle()\r\n                });\r\n\r\n                // this.p2Body.collisionResponse = true;\r\n                // this.p2Body.damping = 20;\r\n                // this.p2Body.angularDamping = 20;\r\n                // this.p2Body.angularVelocity = 20;\r\n\r\n                // let c:Graphics =\r\n                // this.p2Body.angle\r\n\r\n                // this.p2Body.damping = 0.3;\r\n\r\n\r\n                // var lineShape = new p2.Line({length: 500});\r\n                var lineShape = new p2.Line({length: firstPoint.distanceTo(secondPoint), collisionGroup: 5});\r\n                lineShape.material = new p2.Material(materialType);\r\n                // circleShape.material.\r\n\r\n                // let m = new p2.ContactMaterial(new AbstractBall(null).circleShape.material, lineShape.material, {\r\n                // friction: 0,\r\n                // relaxation: 10,\r\n                // frictionRelaxation: 0.5\r\n                // restitution: 0,\r\n                // frictionRelaxation: 0,\r\n                // relaxation: 0,\r\n                // friction: 0,\r\n                // frictionStiffness: 0,\r\n                // stiffness: 10000,\r\n                // surfaceVelocity: 100,\r\n                // restitution: 0.9,\r\n                //\r\n                // });\r\n                // P2WorldManager.Instance().world.addContactMaterial(m);\r\n\r\n                this.p2Body.addShape(lineShape);\r\n\r\n                P2WorldManager.Instance().world.addBody(this.p2Body);\r\n            }\r\n\r\n            private getAngle(): number {\r\n                let x1: number = this.firstPoint.x;//, y1, x2, y2\r\n                let y1: number = this.firstPoint.y;\r\n\r\n                let x2: number = this.secondPoint.x;//, y1, x2, y2\r\n                let y2: number = this.secondPoint.y;\r\n\r\n                let dy = y2 - y1;\r\n                let dx = x2 - x1;\r\n                let theta: number = Math.atan2(dy, dx); // range (-PI, PI]\r\n                // theta *= 180 / Math.PI; // rads to degs, range (-180, 180]\r\n                //if (theta < 0) theta = 360 + theta; // range [0, 360)\r\n                return theta;\r\n            }\r\n        }\r\n    }\r\n}\r\n","///<reference path=\"../Signals/signals-manager.ts\"/>\r\n///<reference path=\"../Signals/signal-types.ts\"/>\r\n// Created by: Sandru Andrei for Edgeflow on 7/11/2018\r\n\r\nnamespace Framework {\r\n    export module Loaders {\r\n        import SignalsManager = Framework.Signals.SignalsManager;\r\n        import SignalsType = Framework.Signals.SignalsType;\r\n\r\n        export class AssetsLoader {\r\n\r\n            // private static _instance: AssetsLoader = new AssetsLoader();\r\n            private loader = PIXI.loader;\r\n            private assetsNames: string[];\r\n            protected fontsToLoad: string[];\r\n\r\n            constructor() {\r\n                this.assetsNames = [];\r\n\r\n                this.loader.onComplete.add(() => {\r\n                    _.forEach(this.assetsNames, (assetName:string)=>\r\n                    {\r\n                        if(_.includes(assetName,\".mp3\") ||\r\n                            _.includes(assetName,\".ogg\") ||\r\n                            _.includes(assetName,\".wav\"))\r\n                        {\r\n                            SignalsManager.DispatchSignal(SignalsType.CREATE_SOUND_CACHE, [assetName]);\r\n                        }\r\n                    });\r\n\r\n                    SignalsManager.DispatchSignal(SignalsType.ASSETS_LOADED);\r\n                });\r\n                this.loader.onProgress.add(() => {\r\n                    let event:CustomEvent = new CustomEvent('progress', { detail: this.loader.progress});\r\n\r\n                    // let event:Event = new Event('progress');\r\n                    document.dispatchEvent(event);\r\n                    // console.log(\"progresu: \" + this.loader.progress);\r\n                })\r\n            }\r\n\r\n            public addAssetToLoad(assetName: string): void {\r\n                if (!_.includes(this.assetsNames, assetName))\r\n                {\r\n                    this.assetsNames.push(assetName);\r\n                    this.loader.add(assetName);\r\n                }\r\n            }\r\n\r\n            public StartLoading(): void {\r\n                this.loadFonts();\r\n                this.loader.load();\r\n            }\r\n\r\n            public addFontToLoad(fontName:string) {\r\n                if (!this.fontsToLoad)\r\n                    this.fontsToLoad = [];\r\n\r\n                this.fontsToLoad.push(fontName);\r\n            }\r\n\r\n            private loadFonts(): void {\r\n\r\n                WebFont.load(\r\n                    {\r\n                        active: () => {\r\n                            // let browser take a breath. Some fonts may require more room for taking deep breath\r\n                            TweenMax.delayedCall(0.4, this.onFontLoadComplete.bind(this))\r\n                        },\r\n                        // when font is loaded do some magic, so font can be correctly rendered immediately after PIXI is initialized\r\n                        // this event is triggered when the fonts have been rendered, see https://github.com/typekit/webfontloader\r\n                        fontloading: this.preRenderFont.bind(this),\r\n\r\n                        // multiple fonts can be passed here\r\n                        custom: {\r\n                            families: this.fontsToLoad,\r\n                            urls: ['/css/fonts.css']\r\n                        }\r\n                        // google: {\r\n                        //     families: this.fontsToLoad\r\n                        // }\r\n                    })\r\n\r\n            }\r\n\r\n            protected onFontLoadComplete():void\r\n            {\r\n                console.log(\"Font Loading Complete\");\r\n            }\r\n\r\n            private preRenderFont():void\r\n            {\r\n               /* let el = document.createElement('p');\r\n                el.style.fontFamily = this._titleFont;\r\n                el.style.fontSize = \"0px\";\r\n                el.style.visibility = \"hidden\";\r\n                el.innerHTML = '.';\r\n\r\n                document.body.appendChild(el);*/\r\n            }\r\n        }\r\n    }\r\n}","\r\nnamespace Framework {\r\n    export module Background {\r\n        import AbstractModule = Framework.Abstracts.AbstractModule;\r\n        import SignalsManager = Framework.Signals.SignalsManager;\r\n        import SignalsType = Framework.Signals.SignalsType;\r\n\r\n        export interface iBackground {\r\n            initialWidth?:number,\r\n            initialHeight?:number,\r\n            path:string,\r\n            div:HTMLDivElement\r\n        }\r\n\r\n        export class AbstractBackgroundModule extends AbstractModule {\r\n\r\n            protected backgrounds: { [name: string]: iBackground; };\r\n            protected currentBackground: iBackground;\r\n\r\n            constructor() {\r\n                super();\r\n\r\n                this.addAssetToLoad(Settings.desktopAssetsPath + Settings.backgroundsPath + \"main_bg.png\");\r\n                this.registerBackground(Settings.mainBackgroundName, Settings.desktopAssetsPath + Settings.backgroundsPath + \"main_bg.png\", document.getElementById(\"MainBackground\") as HTMLDivElement);\r\n            }\r\n\r\n\r\n            protected registerSignalsHandlers(): void {\r\n\r\n                super.registerSignalsHandlers();\r\n                SignalsManager.AddSignalCallback(SignalsType.CHANGE_BACKGROUND, this.onChangeBackground.bind(this));\r\n            }\r\n\r\n            private onChangeBackground(param: any[]): void {\r\n                this.changeBackground(param[0].toString(), +param[1]);\r\n            }\r\n\r\n            public registerBackground(name: string, texturePath: string, htmlDiv:HTMLDivElement): void {\r\n                if (!this.backgrounds)\r\n                    this.backgrounds = {};\r\n\r\n                let bg:iBackground = {path: texturePath, div:htmlDiv};\r\n                bg.initialWidth = bg.div.offsetWidth;\r\n                bg.initialHeight = bg.div.offsetHeight;\r\n\r\n                this.backgrounds[name] = bg;\r\n            }\r\n\r\n\r\n            public createElements(): void {\r\n                super.createElements();\r\n\r\n                _.forEach(this.backgrounds, (bg:iBackground) => {\r\n                    bg.div.style.background = \"center / contain no-repeat #1A4157 url(\" + bg.path + \")\";\r\n                    bg.div.style.opacity = \"0\";\r\n\r\n                    if(bg.initialHeight == 0 || bg.initialWidth == 0)\r\n                    {\r\n                        bg.initialWidth = bg.div.offsetWidth;\r\n                        bg.initialHeight = bg.div.offsetHeight;\r\n                    }\r\n\r\n                    bg.div.style.display = \"none\";\r\n                });\r\n\r\n                // this.changeBackground(Settings.mainBackgroundName, 60);\r\n            }\r\n\r\n            private changeBackground(id: string, fadeTime: number) {\r\n                if (this.backgrounds[id]) {\r\n                    let newBackground: iBackground = this.backgrounds[id];\r\n                    newBackground.div.style.opacity = \"0\";\r\n                    newBackground.div.style.display = \"block\";\r\n                    // this.addChild(newBackground);\r\n                    //\r\n                    if(!_.isUndefined(this.currentBackground) && !_.isNull(this.currentBackground))\r\n                    {\r\n                        let oldBackground:iBackground = this.currentBackground;\r\n\r\n                        TweenMax.to(newBackground.div, fadeTime, {css:{opacity:1}, onComplete:this.removeBackgroundFromParent.bind(this), onCompleteParams:[oldBackground.div]});\r\n                    }\r\n                    else\r\n                    {\r\n                        TweenMax.to(newBackground.div, fadeTime, {css:{opacity:1}});\r\n                    }\r\n\r\n\r\n                    this.currentBackground = newBackground;\r\n\r\n                }\r\n                else {\r\n                    console.warn(\"background id not registered: \" + id);\r\n                }\r\n            }\r\n\r\n            private removeBackgroundFromParent(background: HTMLDivElement): void {\r\n                background.style.display = \"none\";\r\n                // if (background && background.parent)\r\n                //     background.parent.removeChild(background);\r\n            }\r\n\r\n\r\n            protected onResize(params: any[]): void {\r\n\r\n                super.onResize(params);\r\n\r\n\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n}","///<reference path=\"../../Abstracts/abstract-module.ts\"/>\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 8/8/2018\r\n */\r\nnamespace Framework {\r\n    export module UserInterface {\r\n        import AbstractModule = Framework.Abstracts.AbstractModule;\r\n\r\n        export class AbstractUserInterfaceModule extends AbstractModule {\r\n\r\n            //\r\n            // constructor() {\r\n            //\r\n            //     super();\r\n            //\r\n            // }\r\n\r\n\r\n            // createElements(): void {\r\n            //     super.createElements();\r\n            // }\r\n        }\r\n\r\n\r\n    }\r\n}","/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 7/17/2018\r\n */\r\n\r\n\r\nnamespace Framework {\r\n    export module Utils {\r\n\r\n        import Point = PIXI.Point;\r\n        import Vector2 = Framework.Utils.Vector2;\r\n\r\n        export class TouchHandler {\r\n            private static instance: TouchHandler;\r\n            private initialized: boolean = false;\r\n\r\n            public isTouchMoving: boolean = false;\r\n            // public left: ButtonState;\r\n            // public middle: ButtonState;\r\n            // public right: ButtonState;\r\n\r\n            public position: Point;\r\n\r\n            static Instance(): TouchHandler {\r\n                if (!TouchHandler.instance) {\r\n                    TouchHandler.instance = new TouchHandler();\r\n\r\n                    if (!TouchHandler.Instance().initialized) {\r\n                        TouchHandler.Instance().initialized = true;\r\n\r\n                        TouchHandler.Instance().position = new Point();\r\n                        // TouchHandler.Instance().left = new ButtonState();\r\n                        // TouchHandler.Instance().middle = new ButtonState();\r\n                        // TouchHandler.Instance().right = new ButtonState();\r\n\r\n                        document.ontouchmove = TouchHandler.Instance().handleTouchMove.bind(this);\r\n                        document.ontouchend = TouchHandler.Instance().handleTouchEnd.bind(this);\r\n                        // document.onmousedown = TouchHandler.Instance().handleMouseDown.bind(this);\r\n                        // document.onmouseup = TouchHandler.Instance().handleMouseUp.bind(this);\r\n\r\n                        // TouchHandler.Instance().reset();\r\n\r\n                    }\r\n                }\r\n                return TouchHandler.instance;\r\n            }\r\n\r\n            private handleTouchMove(e: TouchEvent): void {\r\n                // let x: number = e.pageX;\r\n                // let y: number = e.pageY;\r\n\r\n                let x: number = e.touches[0].clientX;\r\n                let y: number = e.touches[0].clientY;\r\n                // clientY = e.touches[0].clientY;\r\n\r\n                TouchHandler.Instance().position = new Point(x, y);\r\n                TouchHandler.Instance().isTouchMoving = true;\r\n                // console.log(\"x -> \" + x, \"y -> \" + y);\r\n                // console.log(\"isTouchMoving: \" + this.isTouchMoving);\r\n            }\r\n\r\n            private handleTouchEnd(e: TouchEvent): void {\r\n                // let x: number = e.pageX;\r\n                // let y: number = e.pageY;\r\n                //\r\n                // let x: number = e.touches[0].clientX;\r\n                // let y: number = e.touches[0].clientY;\r\n                // // clientY = e.touches[0].clientY;\r\n                //\r\n                // TouchHandler.Instance().position = new Point(x, y);\r\n                TouchHandler.Instance().isTouchMoving = false;\r\n                // console.log(\"isTouchMoving: \" + this.isTouchMoving);\r\n\r\n                // console.log(\"x -> \" + x, \"y -> \" + y);\r\n            }\r\n\r\n            /*private handleMouseDown(e: MouseEvent): void {\r\n                // this.handleMouseMove(e);\r\n\r\n                if (e.button == 0) {\r\n\r\n                    if (!TouchHandler.Instance().left.down) {\r\n                        TouchHandler.Instance().left.pressed = true;\r\n                    }\r\n                    TouchHandler.Instance().left.down = true;\r\n\r\n                } else if (e.button == 1) {\r\n\r\n                    if (!TouchHandler.Instance().middle.down) {\r\n                        TouchHandler.Instance().middle.pressed = true;\r\n                    }\r\n                    TouchHandler.Instance().middle.down = true;\r\n\r\n                } else if (e.button == 2) {\r\n\r\n                    if (!TouchHandler.Instance().right.down) {\r\n                        TouchHandler.Instance().right.pressed = true;\r\n                    }\r\n                    TouchHandler.Instance().right.down = true;\r\n                }\r\n            }\r\n\r\n            private handleMouseUp(e): void {\r\n                // this.handleMouseMove(e);\r\n                if (e.button == 0) {\r\n                    TouchHandler.Instance().left.down = false;\r\n                } else if (e.button == 1) {\r\n                    TouchHandler.Instance().middle.down = false;\r\n                } else if (e.button == 2) {\r\n                    TouchHandler.Instance().right.down = false;\r\n                }\r\n            }\r\n\r\n            private reset(): void {\r\n                // this.position.x = e.pageX;\r\n                this.left.pressed = false;\r\n                this.middle.pressed = false;\r\n                this.right.pressed = false;\r\n\r\n                requestAnimationFrame(this.reset.bind(this));\r\n            }*/\r\n\r\n            /*public GetAngle(vector: Vector2): number {\r\n                // let angle:number = 0;\r\n                var angle = Math.atan2(this.position.x - vector.x, -(this.position.y - vector.y)) * (180 / Math.PI);\r\n\r\n                return angle;\r\n            }*/\r\n        }\r\n\r\n    }\r\n}","namespace Framework {\r\n    export module Connection {\r\n        export class FrameworkSocketNamespaces {\r\n            public static SEARCH: string = \"/searching\";\r\n            public static PLAY: string = \"/play\";\r\n        }\r\n\r\n        export class FrameworkSocketEvents {\r\n\r\n            public static newConnection: string = \"FrameworkSocketEvents\" + \"newConnection\";\r\n            public static letsConnect: string = \"FrameworkSocketEvents\" + \"letsConnect\";\r\n            public static joinRoom: string = \"FrameworkSocketEvents\" + \"joinRoom\";\r\n            public static joinedRoom: string = \"FrameworkSocketEvents\" + \"joinedRoom\";\r\n            public static privateMessage: string = \"FrameworkSocketEvents\" + \"privateMessage\";\r\n            public static getUserFromDatabase: string = \"FrameworkSocketEvents\" + \"getUserFromDatabase\";\r\n            public static updateUserData: string = \"FrameworkSocketEvents\" + \"updateUserData\";\r\n            // public static partnerFoundChannel: string = \"partnerFoundChannel\";\r\n        }\r\n\r\n        export class FrameworkSocketMessages {\r\n            public static WHO_WANTS_TO_PLAY: string = \"FrameworkSocketMessages.\" + \"WHO_WANTS_TO_PLAY\";\r\n            public static I_WANT_TO_PLAY: string = \"FrameworkSocketMessages.\" + \"I_WANTS_TO_PLAY\";\r\n            public static HELLO: string = \"FrameworkSocketMessages.\" + \"HELLO\";\r\n\r\n        }\r\n    }\r\n}","///<reference path=\"../../Signals/signals-manager.ts\"/>\r\n///<reference path=\"../../Signals/signal-types.ts\"/>\r\n///<reference path=\"connection-channels-and-messages.ts\"/>\r\n///<reference path=\"../../../../lib/types/socket.io/socket.io-client.d.ts\"/>\r\n\r\nnamespace Framework {\r\n    export module Connection {\r\n        import SignalsManager = Framework.Signals.SignalsManager;\r\n        import ConnectionSignalsType = Framework.Signals.ConnectionSignalsType;\r\n        import PockeySettings = Pockey.PockeySettings;\r\n\r\n        export class SocketClient {\r\n            protected socket: any;\r\n            protected searchingSocket: any;\r\n            protected playingSocket: any;\r\n            protected lookingForPartner: boolean = false;\r\n            protected myID: string = \"\";\r\n            protected partnerID: string;\r\n            protected connectionID: string;\r\n            public socketConnectionCreated: boolean = false;\r\n\r\n            public initializeClientSocket(onSocketInitialiazed: Function): void {\r\n                this.socket = io();\r\n                this.socket.binaryType = \"blob\";\r\n                this.socket.on('connect', () => {\r\n                    onSocketInitialiazed();\r\n                    /* */\r\n                    /* console.log(\"%c socket client connected\", \"background: #ff9900; color: black; font-weight:bold; \");*/\r\n                });\r\n\r\n\r\n                // this.initializeSearchingSocket();\r\n            }\r\n\r\n            public getUserFromDataBase(username: string, callback:Function): void {\r\n                this.socket.on(FrameworkSocketEvents.getUserFromDatabase, (usernameData: JSON) => {\r\n                    callback(usernameData);\r\n                });\r\n                this.socket.emit(FrameworkSocketEvents.getUserFromDatabase, username);\r\n            }\r\n\r\n            public updateUserData( dbObject:DatabaseObject, callback:Function): void {\r\n                this.socket.on(FrameworkSocketEvents.updateUserData, (data) => {\r\n                    callback(data);\r\n                });\r\n                this.socket.emit(FrameworkSocketEvents.updateUserData, dbObject);\r\n                console.log(\"intra la socket client updateUserData\");\r\n            }\r\n\r\n            public initializeSearchingSocket(): void {\r\n                this.searchingSocket = io(FrameworkSocketNamespaces.SEARCH);\r\n                this.searchingSocket.on('connect', () => {\r\n                    this.myID = this.searchingSocket.id.replace(FrameworkSocketNamespaces.SEARCH, '');\r\n                    SignalsManager.DispatchSignal(ConnectionSignalsType.UPDATE_SOCKET_ID, [this.myID]);\r\n\r\n                    console.log(\"sunt conectat pe search: \" + this.myID);\r\n\r\n                    this.searchingSocket.emit(FrameworkSocketEvents.letsConnect, FrameworkSocketMessages.WHO_WANTS_TO_PLAY, this.myID, \"\");\r\n                    this.lookingForPartner = true;\r\n                });\r\n\r\n                this.searchingSocket.on(FrameworkSocketEvents.letsConnect, (msg, id, partnerID) => {\r\n                    console.log(\"cineva vrea sa ma conectez, socket: \" + id + \". verific...\");\r\n                    if (this.lookingForPartner && msg == FrameworkSocketMessages.WHO_WANTS_TO_PLAY) {\r\n                        if (id != this.myID && (partnerID == \"\")) {\r\n                            console.log(\"ma conectez cu: \" + id);\r\n                            this.searchingSocket.emit(FrameworkSocketEvents.letsConnect, FrameworkSocketMessages.I_WANT_TO_PLAY, id, this.myID);\r\n                            this.partnerID = id;\r\n                            this.connectionID = id + this.myID;\r\n\r\n                            this.initializePlayingSocket();\r\n\r\n                            this.lookingForPartner = false;\r\n                        }\r\n                    }\r\n                    else if (this.lookingForPartner && msg == FrameworkSocketMessages.I_WANT_TO_PLAY) {\r\n                        if (id == this.myID && (partnerID != \"\" && partnerID != null && partnerID != undefined)) {\r\n                            console.log(\"ma conectez cu: \" + partnerID);\r\n\r\n                            this.partnerID = partnerID;\r\n                            this.connectionID = this.myID + partnerID;\r\n\r\n                            this.initializePlayingSocket();\r\n\r\n                            this.lookingForPartner = false;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            protected initializePlayingSocket(): void {\r\n                this.playingSocket = io(FrameworkSocketNamespaces.PLAY);\r\n                this.playingSocket.on('connect', () => {\r\n                    this.searchingSocket.disconnect();\r\n                    this.searchingSocket = null;\r\n\r\n                    this.playingSocket.emit(FrameworkSocketEvents.joinRoom, this.connectionID, this.myID);\r\n\r\n                    this.playingSocket.on(FrameworkSocketEvents.joinedRoom, (room) => {\r\n                        console.log(\"sunt conectat pe playing room: \" + room + \" as \" + this.myID);\r\n\r\n                        this.playingSocket.emit(FrameworkSocketEvents.privateMessage, this.connectionID, FrameworkSocketMessages.HELLO, this.myID, this.partnerID);\r\n                        // SignalsManager.DispatchSignal(ConnectionSignalsType.SOCKET_IO_CONNECTION_CREATED, [this.myID, this.partnerID, this.connectionID]);\r\n                    });\r\n\r\n                    this.playingSocket.on(FrameworkSocketEvents.privateMessage, (messageType, messageData) => {\r\n                        this.handlePrivateMessage(messageType, messageData);\r\n\r\n                    });\r\n                });\r\n            }\r\n\r\n            protected handlePrivateMessage(messageType, messageData): void {\r\n                switch (messageType) {\r\n                    case FrameworkSocketMessages.HELLO: {\r\n                        if (!this.socketConnectionCreated) {\r\n                            this.socketConnectionCreated = true;\r\n\r\n                            SignalsManager.DispatchSignal(ConnectionSignalsType.SOCKET_IO_CONNECTION_CREATED, [this.myID, this.partnerID, this.connectionID]);\r\n                            this.playingSocket.emit(FrameworkSocketEvents.privateMessage, this.connectionID, FrameworkSocketMessages.HELLO);\r\n                        }\r\n\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            public sendPrivateMessage(params: any[]): void {\r\n                if (this.playingSocket && this.connectionID && this.myID) {\r\n                    let messageType = params[0];\r\n                    let messageData = params[1];\r\n\r\n                    this.playingSocket.emit(FrameworkSocketEvents.privateMessage, this.connectionID, messageType, messageData);\r\n\r\n                    // console.log(\"private message sent: \" + messageType, messageData);\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","///<reference path=\"../../Signals/signals-manager.ts\"/>\r\n///<reference path=\"../../Signals/signal-types.ts\"/>\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 11/14/2018\r\n */\r\nnamespace Framework {\r\n    export module Connection {\r\n        import SignalsManager = Framework.Signals.SignalsManager;\r\n        import SignalsType = Framework.Signals.SignalsType;\r\n\r\n        export class LoginHandler {\r\n\r\n            constructor() {\r\n                SignalsManager.AddSignalCallback(SignalsType.CHECK_USER_DATA, this.onCheckUserData.bind(this));\r\n            }\r\n\r\n            protected onCheckUserData(): void {\r\n                console.log(\"on LOGIN HANDLER: onCheckUserData\");\r\n                SignalsManager.DispatchSignal(SignalsType.USER_DATA_CHECKED);\r\n            }\r\n        }\r\n    }\r\n}\r\n","///<reference path=\"../../Abstracts/abstract-module.ts\"/>\r\n///<reference path=\"socket-client.ts\"/>\r\n///<reference path=\"../../Signals/signal-types.ts\"/>\r\n///<reference path=\"../../Signals/signals-manager.ts\"/>\r\n///<reference path=\"login-handler.ts\"/>\r\n\r\nnamespace Framework {\r\n    export module Connection {\r\n\r\n        import AbstractModule = Framework.Abstracts.AbstractModule;\r\n        import SocketClient = Framework.Connection.SocketClient;\r\n        import ConnectionSignalsType = Framework.Signals.ConnectionSignalsType;\r\n        import SignalsManager = Framework.Signals.SignalsManager;\r\n        import SignalsType = Framework.Signals.SignalsType;\r\n\r\n        export class AbstractConnectionModule extends AbstractModule {\r\n\r\n            protected socketClient: SocketClient;\r\n\r\n            constructor() {\r\n\r\n                super();\r\n\r\n                this.Name = \"AbstractConnectionModule\";\r\n\r\n                this.createLoginHandler();\r\n            }\r\n\r\n            protected createLoginHandler():void\r\n            {\r\n                let loginHandler:LoginHandler = new LoginHandler();\r\n                console.log(\"%c AbstractConnectionModule -> login handler\", \"color: white; background:green\");\r\n\r\n            }\r\n\r\n            public createElements(): void {\r\n                /*super.createElements();*/\r\n\r\n                this.startSocketConnection();\r\n            }\r\n\r\n            private startSocketConnection(): void {\r\n                this.onCreateSocketIoConnection();\r\n                console.log(\"%c AbstractConnectionModule -> startSocketConnection\", \"color: white; background:green\");\r\n            }\r\n\r\n            protected registerSignalsHandlers(): void {\r\n                super.registerSignalsHandlers();\r\n                if (!Settings.singlePlayer) {\r\n                    SignalsManager.AddSignalCallback(ConnectionSignalsType.CREATE_SEARCH_FOR_PARTNER_CONNECTION, this.onCreateSearchForPartnerConnection.bind(this));\r\n                    SignalsManager.AddSignalCallback(ConnectionSignalsType.SOCKET_IO_DISCONNECTED, this.onSocketIoDisconnected.bind(this));\r\n                    SignalsManager.AddSignalCallback(ConnectionSignalsType.PRIVATE_MESSAGE, this.onPrivateMessage.bind(this));\r\n                    SignalsManager.AddSignalCallback(ConnectionSignalsType.UPDATE_SOCKET_ID, this.onUpdateSocketID.bind(this));\r\n                }\r\n            }\r\n\r\n            protected onCreateSearchForPartnerConnection():void\r\n            {\r\n                this.socketClient.initializeSearchingSocket();\r\n            }\r\n\r\n            protected onUpdateSocketID(params: any[]): void {\r\n                Settings.socketID = params[0];\r\n            }\r\n\r\n            protected onSocketIoDisconnected(): void {\r\n\r\n            }\r\n\r\n            protected onPrivateMessage(params: any[]): void {\r\n                this.socketClient.sendPrivateMessage(params);\r\n            }\r\n\r\n            protected onCreateSocketIoConnection(): void {\r\n                if (_.isNull(this.socketClient) || _.isUndefined(this.socketClient)) {\r\n                    this.socketClient = this.getSocketIoClient();\r\n                    DatabaseConnector.socketClient = this.socketClient;\r\n                    this.socketClient.initializeClientSocket(this.onSocketInitiliazed.bind(this));\r\n                }\r\n            }\r\n\r\n            protected onSocketInitiliazed(): void {\r\n                console.log(\"%c AbstractConnectionModule -> Socket Initiliazed\", \"color: white; background:green\");\r\n                console.log(\"%c\" + this.Name + \" Elements Created!\", \"color: green\");\r\n               this.ElementsCreated = true;\r\n               SignalsManager.DispatchSignal(SignalsType.MODULE_ELEMENTS_CREATED);\r\n            }\r\n\r\n            protected getSocketIoClient(): SocketClient {\r\n                return new SocketClient();\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n}","/**\r\n *  Edgeflow\r\n *  Copyright 2017 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 7/12/2018\r\n */\r\n\r\nnamespace Framework {\r\n    export class Layers {\r\n\r\n        public static DefaultLayer: string = \"DefaultLayer\";\r\n        public static BackgroundLayer: string = \"BackgroundLayer\";\r\n        public static GameLayer: string = \"GameLayer\";\r\n        public static UILayer: string = \"UILayer\";\r\n\r\n        public static LayerOrder: string[] = [Layers.BackgroundLayer, Layers.GameLayer, Layers.UILayer];\r\n    }\r\n}\r\n","///<reference path=\"../../Signals/signals-manager.ts\"/>\r\n///<reference path=\"../../../PockeyEntryPoint/pockey-settings.ts\"/>\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 11/9/2018\r\n */\r\n\r\n\r\nnamespace Framework {\r\n    export module Connection {\r\n        import PockeySettings = Pockey.PockeySettings;\r\n\r\n        export interface DatabaseObject {\r\n            userID: string,\r\n            column: string,\r\n            value: any\r\n        }\r\n\r\n        export class DatabaseConnector {\r\n\r\n            private static checkUserRequest: XMLHttpRequest;\r\n            private static _socketClient: SocketClient;\r\n\r\n            constructor() {\r\n\r\n                /* let postString: string =\r\n                     \"email=\" + this.userEmail +\r\n                     \"&image=\" + this.currentImage +\r\n                     \"&rating=\" + (e.currentTarget as HTMLButtonElement).value;\r\n\r\n                 this.checkUserRequest = new XMLHttpRequest();\r\n                 this.checkUserRequest.addEventListener(\"load\", this.onPostLoad.bind(this));\r\n                 this.checkUserRequest.open(\"POST\", \"includes/postData.php\", true);\r\n\r\n                 this.checkUserRequest.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n                 this.checkUserRequest.send(postString);*/\r\n                // SignalsManager.AddSignalCallback(PockeySignalTypes.GET_PLAYER_INFO, this.getPlayerInfo.bind(this));\r\n\r\n            }\r\n\r\n            public static set socketClient(value: Framework.Connection.SocketClient) {\r\n                this._socketClient = value;\r\n            }\r\n\r\n            public static checkDatabaseUser(userID: string, callback: Function): void {\r\n                this._socketClient.getUserFromDataBase(userID, callback);\r\n            }\r\n\r\n            public static updateUserData(dbObject: DatabaseObject, callback: Function): void {\r\n                console.log(\"intra la database connector updateUserData\");\r\n\r\n                let cb:Function = (callback != null) ? callback : this.userDataUpdated.bind(this);\r\n                this._socketClient.updateUserData(dbObject, cb);\r\n            }\r\n\r\n            private static userDataUpdated(data):void\r\n            {\r\n                console.log(\"DatabaseConnector userDataUpdated\");\r\n            }\r\n\r\n            private static checkUserIDRequestListener(e: Event): void {\r\n                /* console.log(\"this.checkUserRequest.responseText: \" + this.checkUserRequest.responseText);\r\n                 // if (this.checkUserRequest.responseText != 'false' && this.checkUserRequest.responseText != '') {\r\n                 //     // this.seen = _.split(this.checkUserRequest.responseText, ',').map(Number);\r\n                 // }\r\n\r\n                 this.checkUserRequest.removeEventListener(\"load\", this.checkUserIDRequestListener.bind(this));*/\r\n            }\r\n        }\r\n    }\r\n}\r\n","\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 11/20/2018\r\n */\r\n\r\n\r\nnamespace Framework {\r\n    export module Sound {\r\n\r\n        import AbstractModule = Framework.Abstracts.AbstractModule;\r\n        import SignalsManager = Framework.Signals.SignalsManager;\r\n        import SignalsType = Framework.Signals.SignalsType;\r\n\r\n        export interface SoundVO {\r\n            soundName?: string,\r\n            soundURL?: string,\r\n            loop?: boolean,\r\n            volume?: number,\r\n            enableMulti:boolean\r\n        }\r\n\r\n        export class AbstractSoundModule extends AbstractModule {\r\n\r\n            //@ts-ignore\r\n            private sounds: { [id: string]: Howl; };\r\n\r\n            constructor() {\r\n\r\n                super();\r\n\r\n                this.Name = \"AbstractSoundModule\";\r\n                this.sounds = {};\r\n            }\r\n\r\n\r\n            protected registerSignalsHandlers(): void {\r\n                super.registerSignalsHandlers();\r\n\r\n                SignalsManager.AddSignalCallback(SignalsType.CREATE_SOUND_CACHE, this.onCreateSoundCache.bind(this));\r\n                SignalsManager.AddSignalCallback(SignalsType.PLAY_SOUND, this.onPlaySound.bind(this));\r\n                SignalsManager.AddSignalCallback(SignalsType.STOP_SOUND, this.onStopSound.bind(this));\r\n            }\r\n\r\n            protected onCreateSoundCache(params: any[]): void {\r\n                let soundName:string = params[0];\r\n\r\n                //@ts-ignore\r\n                // let s = new Howl({src: soundName});\r\n                if(!this.sounds[soundName])\r\n                {\r\n                    //@ts-ignore\r\n                    this.sounds[soundName] = new Howl({src: soundName});//.add(soundName, {\r\n                        // url: soundData,\r\n                        // preload: true\r\n                    // });\r\n                }\r\n            }\r\n\r\n            protected onStopSound(params: any[]): void {\r\n                let soundVO: SoundVO = params[0] as SoundVO;\r\n                if(!this.sounds[soundVO.soundName])\r\n                {\r\n                    console.warn(\"SOUND - \" + soundVO.soundName + \" - WAS NOT ADDED TO THE PRELOADER!\");\r\n\r\n                    return;\r\n                }\r\n\r\n                this.sounds[soundVO.soundName].stop();\r\n            }\r\n\r\n\r\n            protected onPlaySound(params: any[]): void {\r\n\r\n\r\n                let soundVO: SoundVO = params[0] as SoundVO;\r\n                {\r\n                    if(!this.sounds[soundVO.soundName])\r\n                    {\r\n                        console.warn(\"SOUND - \" + soundVO.soundName + \" - WAS NOT ADDED TO THE PRELOADER!\");\r\n                        return;\r\n                    }\r\n                }\r\n                if (_.isNull(soundVO.volume) || _.isUndefined(soundVO.volume)) {\r\n                    soundVO.volume = 1;\r\n                }\r\n                // if (soundVO.soundName == PockeySoundURLS.BALL_TO_BALL_HIT) {\r\n                //     console.log(\"s-a cerut ball to ball hit\");\r\n                // }\r\n                /*interface PlayOptions {\r\n                    start?: number;\r\n                    end?: number;\r\n                    speed?: number;\r\n                    loop?: boolean;\r\n                    volume?: number;\r\n                    sprite?: string;\r\n                    muted?: boolean;\r\n                    complete?: CompleteCallback;\r\n                    loaded?: LoadedCallback;\r\n                }*/\r\n\r\n                // let playOptions:PlayOptions = {\r\n                //   loop:soundVO.loop,\r\n                //   // volume: soundVO.volume\r\n                // };\r\n                // // PixiSound.play(soundVO.soundName, {loop: soundVO.loop});\r\n                // PixiSound.play(soundVO.soundName, playOptions);\r\n\r\n\r\n                // if (!PIXI.sound.exists(soundVO.soundName)) {\r\n                //     PIXI.sound.add(soundVO.soundName, {\r\n                //         url: soundVO.soundURL,\r\n                //         preload: true\r\n                //     });\r\n                // }\r\n\r\n                // PIXI.sound.play('boing');\r\n                // let sound = PIXI.sound.Sound.from({\r\n                //     url: soundVO.soundName,\r\n                //     volume: soundVO.volume\r\n                // });\r\n                // // if(PIXI.sound.exists('boing'))\r\n                // sound.play();\r\n\r\n                if(!soundVO.enableMulti && this.sounds[soundVO.soundName].playing())\r\n                {\r\n                    this.sounds[soundVO.soundName].stop();\r\n                }\r\n                this.sounds[soundVO.soundName].volume(soundVO.volume);\r\n                this.sounds[soundVO.soundName].play();\r\n            }\r\n        }\r\n\r\n    }\r\n}","///<reference path=\"Loaders/assets-loader.ts\"/>\r\n///<reference path=\"Abstracts/abstract-module.ts\"/>\r\n///<reference path=\"AbstractModules/Background/abstract-background-module.ts\"/>\r\n///<reference path=\"Signals/signals-manager.ts\"/>\r\n///<reference path=\"AbstractModules/UserInterface/abstract-user-interface-module.ts\"/>\r\n///<reference path=\"Utils/touch-handler.ts\"/>\r\n///<reference path=\"AbstractModules/Connection/abstract-connection-module.ts\"/>\r\n///<reference path=\"Abstracts/layers.ts\"/>\r\n///<reference path=\"../../lib/types/webfontloader/webfontloader.d.ts\"/>\r\n///<reference path=\"AbstractModules/Connection/database-connector.ts\"/>\r\n///<reference path=\"AbstractModules/Sound/abstract-sound-module.ts\"/>\r\n///<reference path=\"../../node_modules/babylonjs/babylon.d.ts\"/>\r\n///<reference path=\"../../lib/types/pixi/pixi.d.ts\"/>\r\n\r\n// Created by: Sandru Andrei for Edgeflow on 7/11/2018\r\n\r\nnamespace Framework {\r\n    import AbstractModule = Framework.Abstracts.AbstractModule;\r\n    import AssetsLoader = Framework.Loaders.AssetsLoader;\r\n    import Container = PIXI.Container;\r\n    import SignalsManager = Framework.Signals.SignalsManager;\r\n    import SignalsType = Framework.Signals.SignalsType;\r\n    import TouchHandler = Framework.Utils.TouchHandler;\r\n    import AbstractConnectionModule = Framework.Connection.AbstractConnectionModule;\r\n    import AbstractBackgroundModule = Framework.Background.AbstractBackgroundModule;\r\n    import AbstractUserInterfaceModule = Framework.UserInterface.AbstractUserInterfaceModule;\r\n    import ConnectionSignalsType = Framework.Signals.ConnectionSignalsType;\r\n    import Settings = Framework.Settings;\r\n    import AbstractSoundModule = Framework.Sound.AbstractSoundModule;\r\n    import PockeySettings = Pockey.PockeySettings;\r\n\r\n\r\n    export class AbstractEntryPoint {\r\n        //array holding all the modules that the framework will use\r\n        protected gameModules: AbstractModule[];\r\n        //the pixi loader that will load all the assets mapped to each module\r\n        protected assetsLoader: AssetsLoader;\r\n        protected name: string = \"\";\r\n\r\n        public static stage: Container;\r\n        protected backgroundModule: AbstractModule;\r\n        protected uiModule: AbstractModule;\r\n        protected connectionModule: AbstractModule;\r\n        protected soundModule: AbstractModule;\r\n        protected allElementsCreated: boolean = false;\r\n        public static renderer;\r\n        protected engine: any;\r\n        public static camera: any;\r\n        public static scene: BABYLON.Scene;\r\n        protected isWebGL1: boolean;\r\n\r\n\r\n        constructor() {\r\n            this.name = \"AbstractEntryPoint\";\r\n\r\n            this.checkDevice();\r\n            this.setWindowSize();\r\n            this.initializeBabylon();\r\n            this.initializePixi();\r\n            this.registerSignals();\r\n            this.subscribeToSignals();\r\n            this.createLayers();\r\n            this.addModules();\r\n            this.initializeSingletons();\r\n            this.startLoadingAssets();\r\n        }\r\n\r\n        protected getCookieData(): void {\r\n            SignalsManager.DispatchSignal(SignalsType.CHECK_USER_DATA);\r\n        }\r\n\r\n        protected userDataChecked(): void {\r\n            if (!this.allElementsCreated) {\r\n                this.allElementsCreated = true;\r\n\r\n\r\n                SignalsManager.DispatchSignal(SignalsType.ALL_MODULES_ELEMENTS_CREATED);\r\n                SignalsManager.DispatchSignal(SignalsType.WINDOW_RESIZE);\r\n            }\r\n\r\n        }\r\n\r\n        // protected connectToDataBase(): void {\r\n        //     let dbConnector: DatabaseConnector = new DatabaseConnector();\r\n        // }\r\n\r\n        private setWindowSize(): void {\r\n            Settings.stageWidth = window.innerWidth;\r\n            Settings.stageHeight = window.innerHeight;\r\n        }\r\n\r\n        protected checkDevice(): void {\r\n            if (this.isMobile()) {\r\n                Settings.isMobile = true;\r\n                console.log(\"%c AbstractEntryPoint -> running on MOBILE!\", \"background: green; color: white; font-weight:bold; \");\r\n                return;\r\n            }\r\n\r\n            console.log(\"%c AbstractEntryPoint -> running on DESKTOP!\", \"background: green; color: white; font-weight:bold; \");\r\n        }\r\n\r\n\r\n        //here Pixi is initiated. Make sure you define the stage width and height before calling this method\r\n        protected initializeBabylon(): void {\r\n            let canvas: HTMLCanvasElement = document.getElementById(\"renderCanvas\") as HTMLCanvasElement;\r\n\r\n            // babylon.js rendering\r\n            this.engine = new BABYLON.Engine(canvas, true);\r\n            AbstractEntryPoint.scene = new BABYLON.Scene(this.engine);\r\n            // AbstractEntryPoint.scene.posi\r\n            // let camera = new BABYLON.FreeCamera(\"camera1\", new BABYLON.Vector3(0, 0, -1000), AbstractEntryPoint.scene);\r\n            AbstractEntryPoint.camera = new BABYLON.UniversalCamera(\"camera1\", new BABYLON.Vector3(0, 0, -1000 - PockeySettings.BALL_RADIUS * 3 - 7), AbstractEntryPoint.scene);\r\n            // camera.orthoTop = 20;\r\n            // camera.orthoTop = 20;\r\n            AbstractEntryPoint.camera.mode = BABYLON.Camera.ORTHOGRAPHIC_CAMERA;\r\n\r\n            AbstractEntryPoint.camera.setTarget(BABYLON.Vector3.Zero());\r\n\r\n            let light = new BABYLON.HemisphericLight(\"light1\", new BABYLON.Vector3(-80, 60, -110), AbstractEntryPoint.scene);\r\n            // light.intensity = 0.7;\r\n            // let sphere = BABYLON.Mesh.CreateSphere(\"sphere1\", 16, 2, this.scene);\r\n            // sphere.position.y = 1;\r\n            // let ground = BABYLON.Mesh.CreateGround(\"ground1\", 6, 6, 2, this.scene);\r\n            this.isWebGL1 = this.engine.webGLVersion === 1;\r\n        }\r\n\r\n        protected initializePixi(): void {\r\n\r\n            /* var pixiRenderer = new PIXI.WebGLRenderer({\r\n                 context: engine._gl,\r\n                 view: engine.getRenderingCanvas(),\r\n                 width: engine.getRenderWidth(),\r\n                 height: engine.getRenderHeight(),\r\n                 clearBeforeRender: false,\r\n                 roundPixels: true,\r\n                 autoStart: false\r\n             });\r\n             var stage = new PIXI.Container();*/\r\n            /////////////////////\r\n\r\n            PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.LINEAR;\r\n\r\n            // SignalsManager.DispatchSignal(SignalsType.WINDOW_RESIZE, [this.stageWidth, this.stageHeight]);\r\n\r\n            // PIXI.Texture.SC.DEFAULT = PIXI.Texture.SCALE_MODE.NEAREST;\r\n\r\n            AbstractEntryPoint.renderer = PIXI.autoDetectRenderer(Settings.stageWidth, Settings.stageHeight, {\r\n                /* backgroundColor: 0x0f404b,\r\n                 antialias: true,\r\n                 roundPixels: true,\r\n                 resolution: window.devicePixelRatio || 1,\r\n                 autoResize: true*/\r\n                context: this.engine._gl,\r\n                view: this.engine.getRenderingCanvas(),\r\n                width: this.engine.getRenderWidth(),\r\n                height: this.engine.getRenderHeight(),\r\n                clearBeforeRender: true,\r\n                roundPixels: true,\r\n                autoResize: true,\r\n                antialias: true,\r\n                resolution: window.devicePixelRatio || 1,\r\n                transparent: true\r\n            });\r\n            /*AbstractEntryPoint.renderer.view.style.position = \"absolute\";\r\n            AbstractEntryPoint.renderer.view.style.top = \"0px\";\r\n            AbstractEntryPoint.renderer.view.style.left = \"0px\";\r\n            AbstractEntryPoint.renderer.view.style.zIndex = \"-800\";\r\n            AbstractEntryPoint.renderer.view.style.width = \"100%\";\r\n            AbstractEntryPoint.renderer.view.style.height = \"100%\";*/\r\n            // console.log(\"la creare pixi: \" + AbstractEntryPoint.renderer.view.parentNode.clientWidth);\r\n            // AbstractEntryPoint.renderer.view.parentNode.clientHeight;\r\n            // AbstractEntryPoint.renderer.view.style.overflow = \"hidden\";\r\n\r\n            // var c = document.getElementById(\"canvas\");\r\n            // //@ts-ignore\r\n            // var ctx = c.getContext(\"2d\");\r\n            //\r\n            // // ctx.fillStyle=\"red\";\r\n            // // ctx.fillRect(20,20,75,50);\r\n            // // ctx.globalCompositeOperation=\"source-over\";\r\n            // // ctx.fillStyle=\"blue\";\r\n            // // ctx.fillRect(50,50,75,50);\r\n            // //\r\n            // // ctx.fillStyle=\"red\";\r\n            // // ctx.fillRect(150,20,75,50);\r\n            // //@ts-ignore\r\n            // ctx.globalCompositeOperation = \"destination-over\";\r\n            // AbstractEntryPoint.renderer.view.style.ctx.globalCompositeOperation='destination-over';\r\n\r\n            // document.body.appendChild(AbstractEntryPoint.renderer.view);\r\n\r\n            AbstractEntryPoint.stage = new Container();\r\n            /*if(Settings.isMobile){\r\n                console.log(\"e mobil in plm\");\r\n                // this.stage.buttonMode = true;\r\n                // this.stage.interactive = true;\r\n                // this.stage.defaultCursor = \"url(cursor.png) 3 2, auto\";\r\n                this.stage.buttonMode = true;\r\n                this.stage.interactive = true;\r\n                this.stage.hitArea = new PIXI.Rectangle(0, 0, 800, 600);\r\n                this.stage.defaultCursor = \"url(cursor.png) 3 2, auto\";\r\n            }*/\r\n\r\n            // this.engine.runRenderLoop(() => {\r\n            //\r\n            //\r\n            // });\r\n\r\n            PIXI.ticker.shared.add(this.renderEngine.bind(this));\r\n        }\r\n\r\n        private renderEngine():void\r\n        {\r\n            //@ts-ignore\r\n            AbstractEntryPoint.renderer.reset();\r\n            AbstractEntryPoint.renderer.render(AbstractEntryPoint.stage);\r\n\r\n            AbstractEntryPoint.scene.autoClear = false;\r\n            // tsphere.rotation.y += 0.01;\r\n            AbstractEntryPoint.scene.render();\r\n            this.engine.wipeCaches(true);\r\n            this.frameAnimate();\r\n        }\r\n\r\n        //all the modules used in the game should be mapped from here, before calling startLoadingAssets() as super()\r\n        protected addModules() {\r\n            //map the modules here before calling startLoadingAssets() by using registerModule(module)\r\n            this.addConnectionModule();\r\n            this.addBackgroundModule();\r\n            this.addUIModule();\r\n            this.addSoundModule();\r\n        }\r\n\r\n        protected addSoundModule(): void {\r\n            this.soundModule = this.getSoundModule();\r\n            this.registerModule(this.soundModule);\r\n        }\r\n\r\n        protected addBackgroundModule(): void {\r\n            this.backgroundModule = this.getBackgroundModule();\r\n            this.registerModule(this.backgroundModule);\r\n        }\r\n\r\n        protected addConnectionModule(): void {\r\n            this.connectionModule = this.getConnectionModule();\r\n            this.registerModule(this.connectionModule);\r\n        }\r\n\r\n        protected addUIModule(): void {\r\n            this.uiModule = this.getUIModule();\r\n            this.registerModule(this.uiModule);\r\n        }\r\n\r\n        //once every the textures have been mapped to its according module, all of them will be loaded.\r\n        // When everything is loaded the callback method onAssetsLoadComplete is called and will tell each module\r\n        // that it can start do his thing in  module.createElements();\r\n        protected startLoadingAssets() {\r\n\r\n            if (_.isNull(this.assetsLoader) || _.isUndefined(this.assetsLoader)) {\r\n                this.assetsLoader = new AssetsLoader();\r\n            }\r\n\r\n            this.addFontsToLoad();\r\n\r\n            console.log(this.gameModules);\r\n            _.forEach(this.gameModules, (module: AbstractModule) => {\r\n                _.forEach(module.AssetsToLoad, (asset: string) => {\r\n\r\n                    this.assetsLoader.addAssetToLoad(asset);\r\n\r\n                });\r\n            });\r\n\r\n\r\n            this.assetsLoader.StartLoading();\r\n        }\r\n\r\n        protected addFontsToLoad(): void {\r\n            // this.assetsLoader.addFontToLoad();\r\n        }\r\n\r\n        protected onAssetsLoadComplete(): void {\r\n            //when each asset of each module is loaded that module will start creating the elements\r\n            _.forEach(this.gameModules, (module: AbstractModule) => {\r\n                module.createElements();\r\n                // this.stage.addChild(module.Layer);\r\n            });\r\n\r\n        }\r\n\r\n        protected registerModule(module: AbstractModule) {\r\n            if (_.isNull(this.gameModules) || _.isUndefined(this.gameModules)) {\r\n                this.gameModules = [];\r\n            }\r\n\r\n            this.gameModules.push(module);\r\n        }\r\n\r\n        protected frameAnimate() {\r\n            // requestAnimationFrame(this.frameAnimate.bind(this));\r\n            //\r\n            // // if (Settings.stageWidth != window.innerWidth || Settings.stageHeight != window.innerHeight) {\r\n            // //     this.windowResize();\r\n            // // }\r\n            // // //Render the stage\r\n            // AbstractEntryPoint.renderer.render(this.stage);\r\n\r\n            // this.engine.runRenderLoop(() => {\r\n            //\r\n            //     //@ts-ignore\r\n            //     AbstractEntryPoint.renderer.reset();\r\n            //     AbstractEntryPoint.renderer.render(AbstractEntryPoint.stage);\r\n            //\r\n            //     AbstractEntryPoint.scene.autoClear = false;\r\n            //     // tsphere.rotation.y += 0.01;\r\n            //     AbstractEntryPoint.scene.render();\r\n            //     this.engine.wipeCaches(true);\r\n            //\r\n            //\r\n            //     // this.scene.render();\r\n            //\r\n            //     // if(this.isWebGL1)\r\n            //     // {\r\n            //     //\r\n            //     //     AbstractEntryPoint.renderer.reset();\r\n            //     // }\r\n            //     //\r\n            //     //\r\n            //     // this.scene.render();\r\n            //     // this.engine.wipeCaches(true);\r\n            //     //\r\n            //     // //@ts-ignore\r\n            //     // AbstractEntryPoint.renderer.reset();\r\n            //     // AbstractEntryPoint.renderer.render(this.stage);\r\n            //\r\n            //\r\n            // });\r\n        }\r\n\r\n        // protected renderLoop():void\r\n        // {\r\n        //\r\n        // }\r\n\r\n        protected getBackgroundModule(): AbstractModule {\r\n            let backgroundModule: AbstractBackgroundModule = new AbstractBackgroundModule();\r\n\r\n            backgroundModule.Layer = this.getLayer(Layers.BackgroundLayer);\r\n\r\n            return backgroundModule;\r\n        }\r\n\r\n        protected getSoundModule(): AbstractModule {\r\n            let soundModule: AbstractSoundModule = new AbstractSoundModule();\r\n\r\n            soundModule.Layer = this.getLayer(Layers.DefaultLayer);\r\n\r\n            return soundModule;\r\n        }\r\n\r\n        protected getUIModule(): AbstractModule {\r\n\r\n            let uiModule: AbstractModule = new AbstractUserInterfaceModule();\r\n            uiModule.Layer = this.getLayer(Layers.UILayer);\r\n\r\n            return uiModule;\r\n        }\r\n\r\n        protected getConnectionModule(): AbstractModule {\r\n\r\n            console.log(\"intra la get connection module in: \" + this.name);\r\n            let connectionModule: AbstractModule = new AbstractConnectionModule();\r\n            return connectionModule;\r\n        }\r\n\r\n        public windowResize(stageWidth: number, stageHeight: number) {\r\n            if (Settings.stageWidth == stageWidth && Settings.stageHeight == stageHeight) {\r\n                return;\r\n            }\r\n\r\n            Settings.stageWidth = stageWidth;\r\n            Settings.stageHeight = stageHeight;\r\n\r\n            // var ratio = Settings.stageWidth / Settings.stageHeight ;\r\n            // var zoom = AbstractEntryPoint.camera.orthoTop;\r\n            // var newWidth = zoom * ratio;\r\n            // AbstractEntryPoint.camera.orthoLeft = -Math.abs(newWidth);\r\n            // AbstractEntryPoint.camera.orthoRight = newWidth;\r\n            // AbstractEntryPoint.camera.orthoBottom = -Math.abs(zoom);\r\n\r\n            // if(window.innerWidth >= window.innerHeight)\r\n            // {\r\n            //     Settings.stageWidth = window.innerWidth;\r\n            //     Settings.stageHeight = window.innerHeight;\r\n            // }\r\n            // else\r\n            // {\r\n            //     Settings.stageWidth = window.innerHeight;\r\n            //     Settings.stageHeight = window.innerWidth;\r\n            // }\r\n            /*\r\n            Settings.stageWidth = window.innerWidth;\r\n            Settings.stageHeight = window.innerHeight;*/\r\n//             console.log(\"la window resize: w - h : \" + Settings.stageWidth, Settings.stageHeight);\r\n            // this.stageWidth = window.innerWidth;\r\n            // this.stageHeight = window.innerHeight;s\r\n            // AbstractEntryPoint.renderer.view.style.width = \"100%\";//Settings.stageWidth.toString() + \"px\";\r\n            // AbstractEntryPoint.renderer.view.style.height = Settings.stageHeight.toString() + \"px\";\r\n            // console.log(\"se face resize: \" + Settings.stageWidth, Settings.stageHeight);\r\n            AbstractEntryPoint.renderer.resize(Settings.stageWidth, Settings.stageHeight);\r\n\r\n            SignalsManager.DispatchSignal(SignalsType.WINDOW_RESIZE);\r\n        }\r\n\r\n        private createLayers() {\r\n\r\n            // Layers.LayerOrder.reverse();\r\n            for (let i = 0; i < Layers.LayerOrder.length; i++) {\r\n                let layerName: string = Layers.LayerOrder[i];\r\n                let layer: Container = new Container();\r\n                layer.name = layerName;\r\n                AbstractEntryPoint.stage.addChild(layer);\r\n            }\r\n            // _.forEach(Layers.LayerOrder, (layerName: string) => {\r\n            //     let layer: Container = new Container();\r\n            //     layer.nickname = layerName;\r\n            //     this.stage.addChild(layer);\r\n            // })\r\n        }\r\n\r\n        protected getLayer(layerName: string): Container {\r\n            return AbstractEntryPoint.stage.getChildByName(layerName) as Container;\r\n        }\r\n\r\n        protected initializeSingletons() {\r\n            SignalsManager.Instance();\r\n            TouchHandler.Instance();\r\n        }\r\n\r\n        private subscribeToSignals() {\r\n            SignalsManager.GetSignal(SignalsType.ASSETS_LOADED).add(this.onAssetsLoadComplete.bind(this));\r\n            SignalsManager.GetSignal(SignalsType.MODULE_ELEMENTS_CREATED).add(this.onModuleElementsCreated.bind(this));\r\n        }\r\n\r\n        protected registerSignals() {\r\n            SignalsManager.CreateNewSignal(SignalsType.CHECK_USER_DATA);\r\n            SignalsManager.CreateNewSignal(SignalsType.USER_DATA_CHECKED);\r\n            SignalsManager.CreateNewSignal(SignalsType.ASSETS_LOADED);\r\n            SignalsManager.CreateNewSignal(SignalsType.MODULE_ELEMENTS_CREATED);\r\n            SignalsManager.CreateNewSignal(SignalsType.ALL_MODULES_ELEMENTS_CREATED);\r\n            SignalsManager.CreateNewSignal(SignalsType.WINDOW_RESIZE);\r\n            SignalsManager.CreateNewSignal(SignalsType.CHANGE_BACKGROUND);\r\n            SignalsManager.CreateNewSignal(SignalsType.CREATE_SOUND_CACHE);\r\n            SignalsManager.CreateNewSignal(SignalsType.PLAY_SOUND);\r\n            SignalsManager.CreateNewSignal(SignalsType.STOP_SOUND);\r\n            SignalsManager.CreateNewSignal(SignalsType.CHANGE_BACKGROUND);\r\n            /*SignalsManager.CreateNewSignal(SignalsType.REGISTER_MAIN_BACKGROUND);\r\n            SignalsManager.CreateNewSignal(SignalsType.REGISTER_CUSTOM_BACKGROUND);*/\r\n            SignalsManager.CreateNewSignal(ConnectionSignalsType.CREATE_SEARCH_FOR_PARTNER_CONNECTION);\r\n            SignalsManager.CreateNewSignal(ConnectionSignalsType.SOCKET_IO_CONNECTION_CREATED);\r\n            SignalsManager.CreateNewSignal(ConnectionSignalsType.SOCKET_IO_DISCONNECTED);\r\n            SignalsManager.CreateNewSignal(ConnectionSignalsType.PRIVATE_MESSAGE);\r\n            SignalsManager.CreateNewSignal(ConnectionSignalsType.UPDATE_SOCKET_ID);\r\n\r\n            SignalsManager.AddSignalCallback(SignalsType.USER_DATA_CHECKED, this.userDataChecked.bind(this));\r\n        }\r\n\r\n        private onModuleElementsCreated(): void {\r\n            let modulesCounter: number = 0;\r\n\r\n            _.forEach(this.gameModules, (module: AbstractModule) => {\r\n                if (module.ElementsCreated) {\r\n\r\n                    modulesCounter++;\r\n                }\r\n            });\r\n\r\n            if (modulesCounter == this.gameModules.length) {\r\n                this.getCookieData();\r\n            }\r\n\r\n            // TweenMax.delayedCall(0.05, this.windowResize, [Settings.stageWidth, Settings.stageHeight]);\r\n\r\n        }\r\n\r\n        private isMobile(): boolean {\r\n            if (navigator.userAgent.match(/Mobi/)) {\r\n                return true;\r\n            }\r\n\r\n            if ('screen' in window && window.screen.width < 1366) {\r\n                return true;\r\n            }\r\n\r\n            // @ts-ignore\r\n            let connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection;\r\n\r\n            if (connection && connection.type === 'cellular') {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\n","///<reference path=\"../../../../Framework/Utils/Line.ts\"/>\r\n///<reference path=\"../../../../Framework/abstract-entry-point.ts\"/>\r\n// /**\r\n//  *  Edgeflow\r\n//  *  Copyright 2018 EdgeFlow\r\n//  *  All Rights Reserved.\r\n//  *\r\n//  *  NOTICE: You may not use, distribute or modify this document without the\r\n//  *  written permission of its copyright owner\r\n//  *\r\n//  *  Created by Sandru Andrei on 7/23/2018\r\n//  */\r\n\r\n\r\nnamespace Pockey {\r\n    export module GameModule {\r\n\r\n        import Sprite = PIXI.Sprite;\r\n        import Vector2 = Framework.Utils.Vector2;\r\n        import Circle = PIXI.Circle;\r\n        import Line = Framework.Utils.Line;\r\n        import Graphics = PIXI.Graphics;\r\n        import Vector3 = BABYLON.Vector3;\r\n        import AbstractEntryPoint = Framework.AbstractEntryPoint;\r\n        import Settings = Framework.Settings;\r\n        import Point = PIXI.Point;\r\n        import PockeySignalTypes = Pockey.SignalsModule.PockeySignalTypes;\r\n        import SignalsManager = Framework.Signals.SignalsManager;\r\n        import Color4 = BABYLON.Color4;\r\n        import PockeySoundURLS = Pockey.Sound.PockeySoundURLS;\r\n        import SignalsType = Framework.Signals.SignalsType;\r\n\r\n        export enum BallType {\r\n            Player = \"PlayerBall\",\r\n            Opponent = \"OpponentBall\",\r\n            White = \"WhiteBall\",\r\n            Puck = \"Puck\"\r\n        }\r\n\r\n        export interface BallState {\r\n            name?: string,\r\n            x?: number,\r\n            y?: number,\r\n            rotation?: number,\r\n            alpha?: number,\r\n            canBeRemoved?: boolean,\r\n            shadowScaleX?: number,\r\n            shadowScaleY?: number\r\n        }\r\n\r\n        /*export interface BallData {\r\n\r\n            positions?: Vector2[]\r\n            removedFromArray?: boolean;\r\n            name?: string,\r\n            x?: number,\r\n            y?: number,\r\n            veloX?: number;\r\n            veloY?: number;\r\n            alpha?: number,\r\n            parentName?: string,\r\n            visible?: boolean,\r\n            canBeRemoved?: boolean,\r\n            scaleX?: number,\r\n            scaleY?: number,\r\n            zIndexSwitched?: boolean,\r\n            animationInProgress?: boolean\r\n        }*/\r\n\r\n        export class AbstractBall extends PIXI.Container {\r\n\r\n            private ballInPocketAnimationTimeline: TimelineMax;\r\n            private circleShape: p2.Circle;\r\n\r\n            public ballType: BallType;\r\n            public side: string;\r\n            public radius: number;\r\n            public mass: number = 1.4;\r\n            public velocity: Vector2;\r\n            public moving: boolean = false;\r\n            public power: number;\r\n            public lineLimits: Line[];\r\n            public pockets: Circle[];\r\n            public p2Body: p2.Body;\r\n            public p2BodyShadow: p2.Body;\r\n            public canBeRemoved: boolean = false;\r\n            public removed: boolean = false;\r\n            public zIndexSwitched: boolean = false;\r\n            public ballAnimationHolder: Container;\r\n            public animationInProgress: boolean = false;\r\n            public ballValue: number = 1;\r\n            public ballShadow: Graphics;\r\n            public removedFromArray: boolean = false;\r\n            public initialPosition: Vector2;\r\n\r\n            protected sphere: any;\r\n            protected lastPosition: Vector3;\r\n            protected minStopLimit: number = 0.1;\r\n            protected leftLimit: number;\r\n            protected rightLimit: number;\r\n            protected upLimit: number;\r\n            protected downLimit: number;\r\n            protected ballTexture: Sprite;\r\n            protected _ballPosition: Vector2;\r\n            protected oldPos: Vector2;\r\n            protected delta: number;\r\n\r\n\r\n            public onWatchTimeline: TimelineMax;\r\n\r\n            // protected updatesReceived: number = 0;\r\n\r\n\r\n            constructor(ballSide: string = \"\", id: string = 'ball') {\r\n                super();\r\n\r\n                this.moving = false;\r\n                this.velocity = new Vector2();\r\n                this.oldPos = new Vector2();\r\n\r\n                this.delta = PockeySettings.DELTA;\r\n                this.radius = PockeySettings.BALL_RADIUS;\r\n\r\n                this.side = ballSide;\r\n                this.name = this.side + id;\r\n\r\n                this.addTexture();\r\n\r\n                this.addP2Body();\r\n\r\n                this.onWatchTimeline = new TimelineMax({\r\n                    smoothChildTiming: true,\r\n                    ease: Linear.easeNone,\r\n                    onUpdate: this.onWatchUpdate.bind(this)\r\n                });\r\n            }\r\n\r\n            protected addP2Body(): void {\r\n                this.p2Body = new p2.Body({\r\n                    mass: this.mass,\r\n                    position: [this.x, this.y],\r\n                    fixedRotation: false\r\n                });\r\n                this.p2BodyShadow = new p2.Body({\r\n                    mass: 0,\r\n                    position: [this.x, this.y]\r\n                });\r\n                this.p2Body.angularDamping = 0;\r\n                this.p2Body.angularForce = 0;\r\n                this.p2Body.angularVelocity = 0;\r\n\r\n                this.p2Body.damping = 0.2;\r\n                this.p2Body.boundingRadius = this.radius;\r\n                this.p2Body.allowSleep = true;\r\n                this.p2Body.sleepSpeedLimit = 2; // Body will feel sleepy if speed<1 (speed is the norm of velocity)\r\n                this.p2Body.sleepTimeLimit = 0.1;\r\n                this.p2Body.sleep();// =  1;\r\n                this.p2Body.velocity[0] = 0;// =  1;\r\n                this.p2Body.velocity[1] = 0;// =  1;\r\n\r\n                this.circleShape = new p2.Circle({radius: this.radius});\r\n                this.circleShape.material = this.getCircleMaterial();\r\n                this.p2Body.addShape(this.circleShape);\r\n\r\n                let circleShape2 = new p2.Circle({radius: this.radius + PockeySettings.BALL_RADIUS});\r\n                circleShape2.material = new p2.Material(MaterialType.SHADOW_MATERIAL);\r\n\r\n                this.p2BodyShadow.addShape(circleShape2);\r\n\r\n                P2WorldManager.Instance().world.addBody(this.p2Body);\r\n\r\n\r\n                P2WorldManager.Instance().world.on(\"preSolve\", (evt) => {\r\n                    this.worldPreSolveHandler();\r\n                }, this);\r\n\r\n                /*P2WorldManager.Instance().world.on(\"postStep\", (evt) => {\r\n                    this.update();\r\n                }, this);*/\r\n            }\r\n\r\n            protected worldPreSolveHandler(): void {\r\n\r\n                // if (this.speed() < 50)\r\n                // this.p2Body.velocity = [this.p2Body.velocity[0] * PockeySettings.DELTA, this.p2Body.velocity[1] * PockeySettings.DELTA]\r\n            }\r\n\r\n            protected getCircleMaterial(): p2.Material {\r\n                return P2WorldManager.Instance().getMaterialByID(MaterialType.BALL_MATERIAL);\r\n            }\r\n\r\n            protected addTexture(): void {\r\n\r\n                this.sphere = BABYLON.Mesh.CreateSphere(this.name, 16, this.radius * 2, AbstractEntryPoint.scene);\r\n                // this.sphere.isVisible = false;\r\n                let myMaterial = new BABYLON.StandardMaterial(\"myMaterial\", AbstractEntryPoint.scene);\r\n\r\n                myMaterial.diffuseTexture = new BABYLON.Texture(Settings.desktopAssetsPath + \"Images/ballTexture.jpg\", AbstractEntryPoint.scene);\r\n\r\n                this.sphere.material = myMaterial;\r\n                TweenMax.to(this.sphere.rotation, 0.1, {x: -2 * Math.PI, y: -2 * Math.PI, z: -2 * Math.PI});\r\n                this.lastPosition = new Vector3(0, 0, 0);\r\n            }\r\n\r\n            public setLineLimits(lineLimits: Line[]): void {\r\n                this.lineLimits = lineLimits;\r\n            }\r\n\r\n            public setPockets(pockets: Circle[]): void {\r\n                this.pockets = pockets;\r\n            }\r\n\r\n            public setWallLimits(left: number, right: number, up: number, down: number): void {\r\n                this.leftLimit = left;\r\n                this.rightLimit = right;\r\n                this.upLimit = up;\r\n                this.downLimit = down;\r\n            }\r\n\r\n            public tintBall(color: number): void {\r\n                let colorToHex: string = ('00000' + (color | 0).toString(16)).substr(-6);\r\n                let rgbColor: Color4 = this.HexToRGB(colorToHex);\r\n\r\n                if (this.sphere) {\r\n                    this.sphere.material.diffuseColor = rgbColor;\r\n                }\r\n            }\r\n\r\n            private HexToRGB(hex: string): Color4 {\r\n\r\n                let r: number = parseInt(hex.substring(0, 2), 16) / 255;\r\n                let g: number = parseInt(hex.substring(2, 4), 16) / 255;\r\n                let b: number = parseInt(hex.substring(4, 6), 16) / 255;\r\n\r\n                return new BABYLON.Color4(r, g, b, 1);\r\n            }\r\n\r\n            public getState(): BallState {\r\n\r\n                let ballState: BallState = {\r\n                    name: this.name,\r\n                    x: Math.round(this.x * 10000),\r\n                    y: Math.round(this.y * 10000),\r\n                    rotation: this.rotation,\r\n                    canBeRemoved: this.canBeRemoved,\r\n                    shadowScaleX: this.ballShadow.scale.x,\r\n                    shadowScaleY: this.ballShadow.scale.y,\r\n                };\r\n\r\n                if (this.sphere)\r\n                    ballState.alpha = this.sphere.visibility;\r\n\r\n                return ballState;\r\n            }\r\n\r\n            // private playAnimation():void\r\n            // {\r\n            //\r\n            // }\r\n\r\n            // private lerp(a:number, b:number, n:number):number {\r\n            //     return (1 - n) * a + n * b;\r\n            // }\r\n\r\n\r\n            public setState(ballState: BallState, animTime: number): void {\r\n\r\n                let time: number = (animTime + 1 / 60) / 2;\r\n\r\n                this.ballShadow.scale.x = ballState.shadowScaleX;\r\n                this.ballShadow.scale.y = ballState.shadowScaleY;\r\n\r\n                if (this.sphere)\r\n                {\r\n                    this.sphere.visibility = ballState.alpha;\r\n                    if(this.sphere.visibility == 0)\r\n                    {\r\n                        this.sphere.material.freeze();\r\n                    }\r\n                    else\r\n                    {\r\n                        this.sphere.material.unfreeze();\r\n                    }\r\n                    TweenMax.to(this, time, {\r\n                        x: ballState.x / 10000,\r\n                        y: ballState.y / 10000,\r\n                        onUpdate: this.onWatchUpdate.bind(this),\r\n                        ease:Linear.easeNone,\r\n                    });\r\n                }\r\n                else\r\n                {\r\n                    TweenMax.to(this, time, {\r\n                        x: ballState.x / 10000,\r\n                        y: ballState.y / 10000,\r\n                        rotation: ballState.rotation,\r\n                        onUpdate: this.onWatchUpdate.bind(this),\r\n                        ease:Linear.easeNone,\r\n                    });\r\n                }\r\n\r\n                // this.onWatchTimeline.to(this, time, {\r\n                //     x: ballState.x / 10000,\r\n                //     y: ballState.y / 10000\r\n                // }, \"-=0.002\");\r\n\r\n                if(ballState.canBeRemoved)\r\n                {\r\n                    this.canBeRemoved = ballState.canBeRemoved;\r\n                    P2WorldManager.Instance().world.removeBody(this.p2Body);\r\n                    P2WorldManager.Instance().world.removeBody(this.p2BodyShadow);\r\n                }\r\n               /* if(this.ballType == BallType.White)\r\n                                {\r\n                                    console.log(\"anim time: \" + ballState.shadowScaleX, ballState.shadowScaleY);\r\n                                }*/\r\n\r\n            }\r\n\r\n            private onWatchUpdate(): void {\r\n                this.ballPosition = new Vector2(this.x, this.y);\r\n\r\n                // this.handleRotation();\r\n            }\r\n\r\n            public update(): void {\r\n\r\n                this.moving = this.p2Body.sleepState != p2.Body.SLEEPING;\r\n\r\n                if (this.canBeRemoved) {\r\n                    this.moving = false;\r\n                    return;\r\n                }\r\n\r\n                if (!this.moving)\r\n                    return;\r\n\r\n                if (this.moving && !this.canBeRemoved) {\r\n\r\n\r\n                    let isCloserToPocket: boolean = false;\r\n                    let pocketPosition: Vector2 = new Vector2();\r\n                    let p2BodyPos: Vector2 = new Vector2(this.p2Body.position[0], this.p2Body.position[1]);\r\n                    let lastDirection: number = 0;\r\n\r\n                    this.oldPos.x = this.p2Body.velocity[0];\r\n                    this.oldPos.y = this.p2Body.velocity[1];\r\n                    this.oldPos = this.oldPos.normalise();\r\n\r\n                    _.forEach(this.pockets, (pocket: Pocket) => {\r\n                        pocketPosition = new Vector2(pocket.x, pocket.y);\r\n\r\n                        if (pocketPosition.distanceTo(p2BodyPos) <= (this.radius + pocket.radius + 8)) {\r\n                            isCloserToPocket = true;\r\n\r\n                            if (pocketPosition.distanceTo(p2BodyPos) <= (pocket.radius + 1)) {\r\n\r\n                                SignalsManager.DispatchSignal(SignalsType.PLAY_SOUND, [{\r\n                                    soundName: PockeySoundURLS.BALL_IN_POCKET\r\n                                }]);\r\n\r\n                                this.canBeRemoved = true;\r\n                                this.p2Body.velocity = [0, 0];\r\n                                P2WorldManager.Instance().world.removeBody(this.p2Body);\r\n                                P2WorldManager.Instance().world.removeBody(this.p2BodyShadow);\r\n\r\n                                SignalsManager.DispatchSignal(PockeySignalTypes.BALL_IN_POCKET, [this.ballType]);\r\n\r\n                                this.x = p2BodyPos.x;\r\n                                this.y = p2BodyPos.y;\r\n\r\n                                this.ballShadow.x = p2BodyPos.x;\r\n                                this.ballShadow.y = p2BodyPos.y;\r\n\r\n                                let closestDistance: number = 3000;\r\n                                let distanceToNextClosestPoint: number = 3000;\r\n                                let pointId: number = 0;\r\n                                let nextPointId: number = 0;\r\n                                let direction: number = 0;\r\n                                let closestPoint: Vector2 = new Vector2();\r\n                                let nextClosestPoint2: Vector2 = new Vector2();\r\n\r\n                                closestPoint.x = pocket.x + this.oldPos.x;\r\n                                closestPoint.y = pocket.y + this.oldPos.y;\r\n                                closestPoint.x = closestPoint.x / 2 + p2BodyPos.x / 2;\r\n                                closestPoint.y = closestPoint.y / 2 + p2BodyPos.y / 2;\r\n\r\n                                nextClosestPoint2.x = p2BodyPos.x + this.oldPos.x * PockeySettings.BALL_RADIUS * 2;\r\n                                nextClosestPoint2.y = p2BodyPos.y + this.oldPos.y * PockeySettings.BALL_RADIUS * 2;\r\n\r\n                                let finalTouchPoint: Vector2 = new Vector2(closestPoint.x, closestPoint.y);\r\n                                _.forEach(pocket.touchPoints, (touchPoint: Vector2, id: number) => {\r\n                                    let newDist: number = closestPoint.distanceTo(touchPoint);\r\n                                    let dirDist: number = nextClosestPoint2.distanceTo(touchPoint);\r\n\r\n                                    if (newDist < closestDistance) {\r\n                                        closestDistance = newDist;\r\n                                        finalTouchPoint = new Vector2(touchPoint.x, touchPoint.y);\r\n                                        pointId = id;\r\n                                    }\r\n\r\n                                    if (dirDist < distanceToNextClosestPoint) {\r\n                                        distanceToNextClosestPoint = dirDist;\r\n                                        nextPointId = id;\r\n                                    }\r\n\r\n                                });\r\n\r\n                                closestPoint.x = finalTouchPoint.x;\r\n                                closestPoint.y = finalTouchPoint.y;\r\n\r\n                                let touchPointsArrayLength: number = pocket.touchPoints.length;\r\n                                let clockwiseDistance: number = 0;\r\n                                let counterclockDistance: number = 0;\r\n                                let idCounter: number = pointId;\r\n\r\n                                if (nextPointId > pointId) {\r\n                                    clockwiseDistance = nextPointId - pointId;\r\n                                    let tempDist: number = 0;\r\n                                    for (let i = 0; i < touchPointsArrayLength; i++) {\r\n                                        tempDist++;\r\n                                        idCounter--;\r\n                                        if (idCounter < 0)\r\n                                            idCounter = touchPointsArrayLength - 1;\r\n\r\n                                        if (idCounter == nextPointId)\r\n                                            counterclockDistance = tempDist;\r\n                                    }\r\n\r\n                                    if (counterclockDistance < clockwiseDistance)\r\n                                        direction = -1;\r\n                                    else if (counterclockDistance > clockwiseDistance)\r\n                                        direction = 1;\r\n                                    else\r\n                                        direction = 0;\r\n                                }\r\n                                else {\r\n\r\n                                    clockwiseDistance = pointId - nextPointId;\r\n                                    let tempDist: number = 0;\r\n                                    idCounter = nextPointId;\r\n                                    for (let i = 0; i < touchPointsArrayLength; i++) {\r\n                                        tempDist++;\r\n                                        idCounter--;\r\n                                        if (idCounter < 0)\r\n                                            idCounter = touchPointsArrayLength - 1;\r\n\r\n                                        if (idCounter == pointId)\r\n                                            counterclockDistance = tempDist;\r\n                                    }\r\n\r\n                                    if (clockwiseDistance < counterclockDistance)\r\n                                        direction = -1;\r\n                                    else if (clockwiseDistance > counterclockDistance)\r\n                                        direction = 1;\r\n                                    else\r\n                                        direction = 0;\r\n                                }\r\n                                lastDirection = direction;\r\n\r\n                                let bezierPositions: Point[] = [];\r\n\r\n                                idCounter = pointId;\r\n\r\n                                if (direction == -1) {\r\n                                    for (let i = 0; i < touchPointsArrayLength - 1; i++) {\r\n                                        bezierPositions[i] = new Point(pocket.touchPoints[idCounter].x, pocket.touchPoints[idCounter].y);\r\n                                        idCounter--;\r\n                                        if (idCounter < 0)\r\n                                            idCounter = touchPointsArrayLength - 1;\r\n\r\n                                    }\r\n                                    bezierPositions.shift();\r\n\r\n                                }\r\n                                else if (direction == 1) {\r\n                                    for (let i = 0; i < touchPointsArrayLength; i++) {\r\n\r\n                                        bezierPositions[i] = new Point(pocket.touchPoints[idCounter].x, pocket.touchPoints[idCounter].y);\r\n\r\n                                        idCounter++;\r\n                                        if (idCounter > touchPointsArrayLength - 1)\r\n                                            idCounter = 0;\r\n\r\n                                    }\r\n                                    bezierPositions.shift();\r\n\r\n                                }\r\n                                else if (direction == 0) {\r\n\r\n                                    direction = Math.round(Math.random()) - 1;\r\n                                    lastDirection = direction;\r\n                                    if (direction == 0)\r\n                                        direction = 1;\r\n\r\n\r\n                                    idCounter = nextPointId;\r\n                                    bezierPositions.push(new Point(pocket.touchPoints[pointId].x, pocket.touchPoints[pointId].y));\r\n                                    bezierPositions.push(new Point(pocket.touchPoints[nextPointId].x, pocket.touchPoints[nextPointId].y));\r\n\r\n                                    for (let i = 0; i < touchPointsArrayLength - counterclockDistance; i++) {\r\n\r\n                                        if (i == 1) {\r\n\r\n                                            let tempPoint: Point = new Point(\r\n                                                pocket.touchPoints[nextPointId].x / 2 + pocket.touchPoints[idCounter].x / 2,\r\n                                                pocket.touchPoints[nextPointId].y / 2 + pocket.touchPoints[idCounter].y / 2\r\n                                            );\r\n\r\n                                            tempPoint = new Point(\r\n                                                tempPoint.x / 2 + pocket.touchPoints[nextPointId].x / 2,\r\n                                                tempPoint.y / 2 + pocket.touchPoints[nextPointId].y / 2\r\n                                            );\r\n                                            tempPoint = new Point(\r\n                                                tempPoint.x / 2 + pocket.touchPoints[nextPointId].x / 2,\r\n                                                tempPoint.y / 2 + pocket.touchPoints[nextPointId].y / 2\r\n                                            );\r\n                                            tempPoint = new Point(\r\n                                                tempPoint.x / 2 + pocket.touchPoints[nextPointId].x / 2,\r\n                                                tempPoint.y / 2 + pocket.touchPoints[nextPointId].y / 2\r\n                                            );\r\n                                            bezierPositions.push(tempPoint);\r\n                                        }\r\n\r\n                                        idCounter -= direction;\r\n                                        if (idCounter > touchPointsArrayLength - 1)\r\n                                            idCounter = 0;\r\n                                        if (idCounter < 0)\r\n                                            idCounter = touchPointsArrayLength - 1;\r\n                                    }\r\n\r\n                                }\r\n                                bezierPositions.push(new Point(pocket.finalPoint.x, pocket.finalPoint.y));\r\n\r\n                                let duration: number = 1 / (this.speed() / 60);\r\n                                if (lastDirection == 0)\r\n                                    duration *= 2.4;\r\n                                else\r\n                                    duration *= 2;\r\n                                if (duration > 1.8)\r\n                                    duration = 1.8;\r\n                                else if (duration < 1)\r\n                                    duration = 1;\r\n\r\n                                this.animationInProgress = true;\r\n\r\n                                this.ballInPocketAnimationTimeline = new TimelineMax();\r\n                                this.ballInPocketAnimationTimeline.add(TweenMax.to(this, duration, {\r\n                                    bezier: bezierPositions,\r\n                                    ease: Linear.easeNone,\r\n                                    onUpdate: this.handleRotation.bind(this)\r\n\r\n                                }), 0);\r\n\r\n                                this.ballInPocketAnimationTimeline.add(TweenMax.to(this.scale, duration - duration / 3, {\r\n                                    x: 0.8,\r\n                                    y: 0.8,\r\n                                    ease: Linear.easeNone\r\n                                }), 0);\r\n                                this.ballInPocketAnimationTimeline.add(TweenMax.to(this.ballShadow.scale, (0.1), {\r\n                                    x: 0,\r\n                                    y: 0,\r\n                                    ease: Linear.easeNone\r\n                                }), 0);\r\n                                this.ballInPocketAnimationTimeline.add(TweenMax.to(this.sphere, (duration / 3), {\r\n                                    visibility: 0,\r\n                                    ease: Linear.easeNone, onComplete: this.declareAnimationFinished.bind(this)\r\n                                }), duration / 8);\r\n\r\n\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                    });\r\n\r\n                    if (this.canBeRemoved)\r\n                        return;\r\n\r\n                    this.x = p2BodyPos.x;\r\n                    this.y = p2BodyPos.y;\r\n\r\n                    this.ballShadow.x = p2BodyPos.x;\r\n                    this.ballShadow.y = p2BodyPos.y;\r\n\r\n                    this.oldPos.x = this.x;\r\n                    this.oldPos.y = this.y;\r\n\r\n                    // this.lastPosition = new Vector3(this.x, this.y, 0);\r\n                    // console.log(\"last pos\");\r\n                    // this.lastPosition.y = this.y;\r\n\r\n                    // this.previousPosition = this.oldPos.clone();\r\n                    // this.latestPositionTime = Date.now();//.NOW;\r\n                    // this.actualPosition = this.oldPos.clone();\r\n\r\n\r\n                    this.handleRotation();\r\n                }\r\n\r\n            }\r\n\r\n            protected handleRotation(): void {\r\n                if (this.ballType == BallType.Puck) {\r\n                    return;\r\n                }\r\n\r\n                if (this.radius == 0) {\r\n                    return;\r\n                }\r\n\r\n                this.moving = true;\r\n\r\n                this.sphere.position.x = this.x;\r\n                this.sphere.position.y = -this.y - PockeySettings.BABYLON_Y_OFFSET;\r\n\r\n                // this.lastPositions.push(this.ballPosition);\r\n\r\n                let position: Vector3 = new BABYLON.Vector3(this.sphere.position.x, this.sphere.position.y, 0);\r\n\r\n                let currentToLast = position.subtract(this.lastPosition);\r\n//                 console.log(\"last pos\");\r\n\r\n\r\n                let segment = currentToLast.length();\r\n\r\n                if (segment == 0) {\r\n                    return;\r\n                }\r\n\r\n                let ballDown: Vector3 = new BABYLON.Vector3(0, 0, -1);\r\n\r\n                let axis = BABYLON.Vector3.Cross(ballDown, currentToLast);\r\n\r\n                if (axis == BABYLON.Vector3.Zero()) {\r\n\r\n                    return;\r\n                }\r\n\r\n                let theta: number = (segment / (this.radius * 3.5)) / this.radius; // in radians\r\n                let thetaDegrees: number = theta * 180 / Math.PI;\r\n\r\n                let q = BABYLON.Quaternion.RotationAxis(axis, thetaDegrees);\r\n\r\n                let sphereRotToQuaternion = this.sphere.rotation.toQuaternion();\r\n\r\n                let sphereRotation = q.multiply(sphereRotToQuaternion).toEulerAngles();\r\n                this.sphere.rotation.x = sphereRotation.x;\r\n                this.sphere.rotation.y = sphereRotation.y;\r\n                this.sphere.rotation.z = sphereRotation.z;\r\n\r\n                this.lastPosition = position;\r\n//                 console.log(\"last pos\");\r\n\r\n                // console.log(\"last pos on push: \" + this.lastPositions.length);\r\n            }\r\n\r\n\r\n            protected declareAnimationFinished(): void {\r\n                this.animationInProgress = false;\r\n                if(this.sphere)\r\n                {\r\n                    this.sphere.setEnabled(false);\r\n                }\r\n            }\r\n\r\n            public addShadowBody(): void {\r\n                this.p2BodyShadow.position[0] = this.x;\r\n                this.p2BodyShadow.position[1] = this.y;\r\n\r\n                P2WorldManager.Instance().world.addBody(this.p2BodyShadow);\r\n            }\r\n\r\n            set ballPosition(positionVector: Vector2) {\r\n                if (!this.initialPosition) {\r\n                    this.initialPosition = positionVector.clone();\r\n                }\r\n                this._ballPosition = positionVector;\r\n\r\n                this.x = positionVector.x;\r\n                this.y = positionVector.y;\r\n\r\n                // this.ballShadow.scale.x = 1;\r\n                // this.ballShadow.scale.y = 1;\r\n\r\n                this.ballShadow.x = this.x;\r\n                this.ballShadow.y = this.y;\r\n\r\n                this.p2Body.position = [positionVector.x, positionVector.y];\r\n                this.p2BodyShadow.position = [positionVector.x, positionVector.y];\r\n\r\n                // this.lastPosition = new Vector3(this.x, this.y, 0);\r\n\r\n                if (this.sphere) {\r\n                    // this.sphere.position.x = this.p2Body.position[0];\r\n                    // this.sphere.position.y = -this.p2Body.position[1] - PockeySettings.BABYLON_Y_OFFSET;\r\n                    this.handleRotation();\r\n                }\r\n                // if (this.sphere)\r\n                //     this.handleRotation();\r\n\r\n\r\n//                 console.log(\"last pos\");\r\n\r\n            }\r\n\r\n            get ballPosition(): Vector2 {\r\n                return new Vector2(this.x, this.y);\r\n            }\r\n\r\n            public speed(): number {\r\n                // magnitude of velocity vector\r\n                return Math.sqrt(this.p2Body.velocity[0] * this.p2Body.velocity[0] + this.p2Body.velocity[1] * this.p2Body.velocity[1]);\r\n            }\r\n\r\n\r\n            public angle(): number {\r\n                //angle of ball with the x axis\r\n                return Math.atan2(this.velocity.y, this.velocity.x);\r\n            }\r\n\r\n            public onShoot(rotation: number, power: number): void {\r\n                this.power = power;\r\n                this.velocity = new Vector2(this.power * Math.cos(rotation), this.power * Math.sin(rotation));\r\n                // console.log(\"velo length\" + this.velocity.length());\r\n                this.moving = true;\r\n            }\r\n\r\n            public reset(): void {\r\n                console.log(this.name + \"se reseteaza mingea!\");\r\n                if (this.ballInPocketAnimationTimeline && this.ballInPocketAnimationTimeline.isActive()) {\r\n                    this.ballInPocketAnimationTimeline.pause();\r\n                    this.ballInPocketAnimationTimeline.kill();\r\n                }\r\n\r\n                // this.scale.x = 1;\r\n                // this.scale.y = 1;\r\n                if(this.sphere)\r\n                {\r\n                    this.sphere.visibility = 1;\r\n                    this.sphere.setEnabled(true);\r\n                }\r\n\r\n                this.ballShadow.scale.x = 1;\r\n                this.ballShadow.scale.y = 1;\r\n                // this.zIndexSwitched = false;\r\n                this.canBeRemoved = false;\r\n                this.animationInProgress = false;\r\n                this.p2Body.velocity[0] = 0;\r\n                this.p2Body.velocity[1] = 0;\r\n                P2WorldManager.Instance().world.addBody(this.p2Body);\r\n                P2WorldManager.Instance().world.addBody(this.p2BodyShadow);\r\n                this.removedFromArray = false;\r\n                this.visible = true;\r\n                this.removed = false;\r\n            }\r\n\r\n            public createBallShadow() {\r\n                this.ballShadow = new Graphics();\r\n                this.ballShadow.beginFill(0x000000, 0.4);\r\n                this.ballShadow.drawCircle(this.radius / 4, this.radius / 4, this.radius);\r\n            }\r\n\r\n            /*public getBallData(): BallData {\r\n                let ballData: BallData = {};\r\n\r\n\r\n                ballData.x = this.x;\r\n                ballData.y = this.y;\r\n\r\n                ballData.veloX = this.p2Body.velocity[0];\r\n                ballData.veloY = this.p2Body.velocity[1];\r\n\r\n                ballData.scaleX = this.scale.x;\r\n                ballData.scaleY = this.scale.y;\r\n\r\n                ballData.shadowScaleX = this.ballShadow.scale.x;\r\n                ballData.shadowScaleY = this.ballShadow.scale.y;\r\n\r\n                ballData.zIndexSwitched = this.zIndexSwitched;\r\n\r\n                ballData.visible = this.visible;\r\n                ballData.alpha = this.alpha;\r\n                ballData.name = this.name;\r\n                ballData.parentName = (this.parent) ? this.parent.name : \"none\";\r\n\r\n                return ballData;\r\n            }*/\r\n\r\n            protected lerp(min, max, fraction) {\r\n                return (max - min) * fraction + min;\r\n            }\r\n\r\n\r\n            /*public setBallData(ballData: BallData): void {\r\n                // this.updatesReceived++;\r\n\r\n                /!*_.forEach(ballData.positions, (position:Vector2) => {\r\n                    this.newPositions.push(position);\r\n                });\r\n\r\n                this.ballPosition = *!/\r\n                // this.newPositionCounter = 0;\r\n                // this.latestPositionTime = window.performance.now ? (performance.now() + performance.timing.navigationStart) : Date.now();\r\n                // this.opponentPosition = new Vector2(ballData.x, ballData.y);\r\n                // this.opponentVelocity = new Vector2(ballData.veloX, ballData.veloY);\r\n\r\n\r\n                // if (this.ballType == BallType.White)\r\n                // {\r\n                //     if (this.speed() == 0)\r\n                //     {\r\n                //         this.p2Body.velocity = [ballData.veloX, ballData.veloY];\r\n                //     }\r\n                // }\r\n                // = _currentTime;\r\n\r\n                // if(this.newPositions.length == 0)\r\n                // {\r\n                //     return;\r\n                // }\r\n\r\n                // console.log(\"new positions: \" + this.newPositions);\r\n                // if (this.latestPositionTime == 0) {\r\n                //     this.latestPositionTime = _currentTime;\r\n                //\r\n                //     this.prevPositions = [];\r\n                //\r\n                //     _.forEach(this.newPositions, (pos: Vector2) => {\r\n                //         this.prevPositions.push(pos);\r\n                //     });\r\n                //\r\n                //     return;\r\n                // }\r\n                //\r\n                // let timeDiff = _currentTime - this.latestPositionTime;\r\n\r\n                // if (this.networkTween) {\r\n                //     this.networkTween.kill();\r\n                //     this.networkTween = null;\r\n                // }\r\n                // this.networkTween = TweenMax.to(this, timeDiff / 1000 + 0.05, {bezier:this.newPositions, ease:Linear.easeNone, onUpdate:this.handleRotation.bind(this)});\r\n\r\n                // console.log(\"new positions: \");\r\n                // console.log(this.newPositions);\r\n                // console.log(\"=============\");\r\n                //\r\n\r\n\r\n                // this.prevPositions = [];\r\n                // _.forEach(this.newPositions, (pos: Vector2) => {\r\n                //     this.prevPositions.push(pos);\r\n                // });\r\n                // console.log(\"time diff: \" + timeDiff);\r\n                // console.log(\"time diff / 1000: \" + (timeDiff / 1000));\r\n\r\n\r\n                /!* let diff = _currentTime - this.latestPositionTime;\r\n\r\n\r\n\r\n\r\n                 // this.ballInPocketAnimationTimeline.add(TweenMax.to(this, duration, {\r\n                 //     bezier: bezierPositions,\r\n                 //     ease: Linear.easeNone,\r\n                 //     onUpdate: this.handleRotation.bind(this)\r\n                 //\r\n                 // }), 0);\r\n                 this.latestPositionTime = Date.now();\r\n\r\n                 this.networkTween = TweenMax.to(this, 1, {bezier: this.newPositions});*!/\r\n                // this.newPositionCounter = 0;\r\n                // this.opponentLastTime = window.performance.now ? (performance.now() + performance.timing.navigationStart) : Date.now();\r\n                // this.opponentPosition = new Vector2(ballData.x, ballData.y);\r\n                // this.opponentVelocity = new Vector2(ballData.veloX, ballData.veloY);\r\n                //\r\n                // this.previousPosition = this.latestPosition = new Vector2(ballData.x, ballData.y);\r\n                // this.latestPositionTime = Date.now();//.NOW;\r\n                // this.actualPosition = this.latestPosition;\r\n\r\n                // // if(this.p2Body.velocity.length == 0 && this.opponentVelocity.length() > 0)\r\n                // // {\r\n                //     this.p2Body.velocity[0] = this.opponentVelocity.x;\r\n                //     this.p2Body.velocity[1] = this.opponentVelocity.y;\r\n                // // }\r\n                // else {\r\n                //     this.p2Body.velocity[0] = this.lerp(this.p2Body.velocity[0], this.opponentVelocity.x, 0.5);\r\n                //     this.p2Body.velocity[1] = this.lerp(this.p2Body.velocity[1], this.opponentVelocity.y, 0.5);\r\n                // }\r\n                //\r\n                // if(this.ballPosition != this.opponentPosition)\r\n                // {\r\n                //     this.p2Body.position[0] = this.lerp(this.p2Body.position[0], this.opponentPosition.x, 0.5);\r\n                //     this.p2Body.position[1] = this.lerp(this.p2Body.position[1], this.opponentPosition.y, 0.5);\r\n                // }\r\n\r\n//                 console.log(\"a intrat data? opp last time: \" + this.opponentLastTime);\r\n\r\n                /!*this.ballPosition = new Vector2(ballData.x, ballData.y);\r\n\r\n                this.scale.x = ballData.scaleX;\r\n                this.scale.y = ballData.scaleY;\r\n\r\n                this.ballShadow.scale.x = ballData.shadowScaleX;\r\n                this.ballShadow.scale.y = ballData.shadowScaleY;\r\n\r\n                this.visible = ballData.visible;\r\n                this.alpha = ballData.alpha;*!/\r\n\r\n                // if (ballData.zIndexSwitched) {\r\n                //     this.ballAnimationHolder.addChildAt(this.ballShadow, 0);\r\n                //     this.ballAnimationHolder.addChild(this);\r\n                // }\r\n            }*/\r\n        }\r\n    }\r\n}","///<reference path=\"../../PockeyEntryPoint/pockey-entry-point.ts\"/>\r\n///<reference path=\"../../GameFiles/Modules/GameModule/balls/abstract-ball.ts\"/>\r\n///<reference path=\"../../GameFiles/Modules/GameModule/p2-world-manager.ts\"/>\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 8/1/2018\r\n */\r\n\r\n\r\nnamespace Framework {\r\n    export module Utils {\r\n        import Vector2 = Framework.Utils.Vector2;\r\n        import MaterialType = Pockey.GameModule.MaterialType;\r\n        import P2WorldManager = Pockey.GameModule.P2WorldManager;\r\n        import Rectangle = PIXI.Rectangle;\r\n\r\n        // export enum LineType {\r\n        //     BallsOnly = \"BallOnly\",\r\n        //     PuckOnly = \"PuckOnly\",\r\n        //     Normal = \"Normal\"\r\n        // }\r\n\r\n        export class Rect {\r\n\r\n            public firstPoint: Vector2;\r\n            public secondPoint: Vector2;\r\n            private angle: number;\r\n            public cosAlpha;\r\n            public sinAlpha;\r\n            public lineType: LineType;\r\n            public p2Body: p2.Body;\r\n\r\n            constructor(rectangle:Rectangle, rotationAngle:number, materialType: MaterialType) {\r\n                // this.firstPoint = firstPoint;\r\n                // this.secondPoint = secondPoint;\r\n                // this.angle = this.getAngle();\r\n                // this.cosAlpha = Math.cos(this.angle);\r\n                // this.sinAlpha = Math.sin(this.angle);\r\n                // this.lineType = type;\r\n\r\n                this.p2Body = new p2.Body({\r\n                    mass: 0,\r\n                    // position: [496, 560],\r\n                    // fixedRotation: true,\r\n                    position: [rectangle.x, rectangle.y],\r\n                    angle: rotationAngle\r\n                });\r\n\r\n                // this.p2Body.collisionResponse = true;\r\n                // this.p2Body.damping = 20;\r\n                // this.p2Body.angularDamping = 20;\r\n                // this.p2Body.angularVelocity = 20;\r\n\r\n                // let c:Graphics =\r\n                // this.p2Body.angle\r\n\r\n                // this.p2Body.damping = 0.3;\r\n\r\n\r\n                // var lineShape = new p2.Line({length: 500});\r\n                var rectShape = new p2.Box({\r\n                    width: rectangle.width,\r\n                    height: rectangle.height\r\n                });\r\n                rectShape.material = new p2.Material(materialType);\r\n                // circleShape.material.\r\n\r\n                // let m = new p2.ContactMaterial(new AbstractBall(null).circleShape.material, lineShape.material, {\r\n                // friction: 0,\r\n                // relaxation: 10,\r\n                // frictionRelaxation: 0.5\r\n                // restitution: 0,\r\n                // frictionRelaxation: 0,\r\n                // relaxation: 0,\r\n                // friction: 0,\r\n                // frictionStiffness: 0,\r\n                // stiffness: 10000,\r\n                // surfaceVelocity: 100,\r\n                // restitution: 0.9,\r\n                //\r\n                // });\r\n                // P2WorldManager.Instance().world.addContactMaterial(m);\r\n\r\n                this.p2Body.addShape(rectShape);\r\n\r\n                P2WorldManager.Instance().world.addBody(this.p2Body);\r\n            }\r\n\r\n            // private getAngle(): number {\r\n            //     let x1: number = this.firstPoint.x;//, y1, x2, y2\r\n            //     let y1: number = this.firstPoint.y;\r\n            //\r\n            //     let x2: number = this.secondPoint.x;//, y1, x2, y2\r\n            //     let y2: number = this.secondPoint.y;\r\n            //\r\n            //     let dy = y2 - y1;\r\n            //     let dx = x2 - x1;\r\n            //     let theta: number = Math.atan2(dy, dx); // range (-PI, PI]\r\n            //     // theta *= 180 / Math.PI; // rads to degs, range (-180, 180]\r\n            //     //if (theta < 0) theta = 360 + theta; // range [0, 360)\r\n            //     return theta;\r\n            // }\r\n        }\r\n    }\r\n}\r\n","/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 7/16/2018\r\n */\r\n\r\n\r\nnamespace Pockey {\r\n    export module GameModule {\r\n        import Sprite = PIXI.Sprite;\r\n\r\n        export enum DecalType {\r\n            Welcome = \"dccal_welcome.png\",\r\n            AstroJunkie = \"decal_astrojunkie.png\",\r\n            Blastoff = \"decal_blastoff.png\",\r\n            Cthulu = \"decal_cthulu.png\",\r\n            Dice = \"decal_dice.png\",\r\n            InserCoin = \"decal_insertcoin.png\",\r\n            KnuckeSandwich = \"decal_knucklesandwhich.png\",\r\n            Looselips = \"decal_looselips.png\",\r\n            OneUp = \"decal_oneup.png\",\r\n            PlayerOne = \"decal_playerone.png\",\r\n            Pockey = \"decal_pockey.png\",\r\n            RageQuit = \"decal_ragequit.png\",\r\n            StatTrickShot = \"decal_statTrickshot.png\",\r\n            ToweKing = \"decal_towerking.png\",\r\n            WingedSword = \"decal_wingedsword.png\"\r\n        }\r\n\r\n        export class Decal extends Sprite {\r\n\r\n            // private decalIcon: Sprite;\r\n\r\n            constructor() {\r\n                super();\r\n                this.anchor.set(0.5, 0.5);\r\n                // this.SetDecalIcon(DecalType.Pockey);\r\n            }\r\n\r\n            public SetDecalIcon(decalType: DecalType) {\r\n                let texture = PIXI.Texture.fromFrame(decalType.toString());\r\n                this.texture = texture;\r\n                this.alpha = 0.4;\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace Pockey {\r\n    export module Connection {\r\n        /*export class FrameworkSocketNamespaces {\r\n            public static SLEEP: string = \"/sleep_mode\";\r\n            public static SEARCH: string = \"/searching\";\r\n            public static PLAY: string = \"/play\";\r\n        }\r\n\r\n        export class FrameworkSocketEvents {\r\n\r\n            public static newConnection: string = \"newConnection\";\r\n            // public static lookingForPartnerChannel: string = \"lookingForPartner\";\r\n            public static letsConnect: string = \"letsConnect\";\r\n            public static joinRoom: string = \"joinRoom\";\r\n            public static joinedRoom: string = \"joinedRoom\";\r\n            public static privateMessage: string = \"privateMessage\";\r\n            // public static partnerFoundChannel: string = \"partnerFoundChannel\";\r\n        }*/\r\n\r\n        export class PockeySocketMessages {\r\n            public static WATCH: string = \"PockeySocketMessages.\" + \"WATCH\";\r\n            public static SCORE_UPDATE: string = \"PockeySocketMessages.\" + \"SCORE_UPDATE\";\r\n            public static OPPONENT: string = \"PockeySocketMessages.\" + \"OPPONENT\";\r\n            public static YOUR_TURN: string = \"PockeySocketMessages.\" + \"YOUR_TURN\";\r\n            public static OPPONENT_SETTINGS: string = \"PockeySocketMessages.\" + \"OPPONENT_SETTINGS\";\r\n            public static OPPONENT_RESTART_ROUND: any = \"PockeySocketMessages.\" + \"OPPONENT_RESTART_ROUND\";\r\n            // public static OPPONENT_RESTART: any;\r\n\r\n        }\r\n    }\r\n}","///<reference path=\"../../../Framework/Utils/mouse-handler.ts\"/>\r\n///<reference path=\"../../../Framework/Signals/signal-types.ts\"/>\r\n///<reference path=\"../ConnectionModule/pocket-connection-channels-and-messages.ts\"/>\r\n///<reference path=\"../SoundModule/pockey-sound-names.ts\"/>\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 7/16/2018\r\n */\r\n\r\n\r\nnamespace Pockey {\r\n    export module GameModule {\r\n        import Sprite = PIXI.Sprite;\r\n        import Point = PIXI.Point;\r\n        import SignalsManager = Framework.Signals.SignalsManager;\r\n        import PockeySignalTypes = Pockey.SignalsModule.PockeySignalTypes;\r\n        import Vector2 = Framework.Utils.Vector2;\r\n        import PointLike = PIXI.PointLike;\r\n        import MouseHandler = Framework.Utils.MouseHandler;\r\n        import SignalsType = Framework.Signals.SignalsType;\r\n        import PockeySoundURLS = Pockey.Sound.PockeySoundURLS;\r\n\r\n        export enum StickType {\r\n            Basic = \"stick_basic.png\",\r\n            BlueSteel = \"stick_bluesteel.png\",\r\n            CandyCue = \"stick_candycue.png\",\r\n            Default = \"stick_default.png\",\r\n            Dotty = \"stick_dotty.png\",\r\n            E = \"stick_e.png\",\r\n            Facebook1 = \"stick_facebook01.png\",\r\n            Facebook2 = \"stick_facebook02.png\",\r\n            Funky = \"stick_funky.png\",\r\n            Gnarly = \"stick_gnarly.png\",\r\n            Ivory = \"stick_ivory.png\",\r\n            KingsGlaive = \"stick_kingsglaive.png\",\r\n            Ninja = \"stick_ninja.png\",\r\n            Pinky = \"stick_pinky.png\",\r\n            GDY = \"stick_qdy.png\",\r\n            Rocket = \"stick_rocket.png\",\r\n            Rockstar = \"stick_rockstar.png\",\r\n            Saber = \"stick_saber.png\",\r\n            Sevn = \"stick_sevn.png\",\r\n            Snake = \"stick_snake.png\",\r\n            TigerMasou = \"stick_tigermasou.png\",\r\n            Twisted = \"stick_twisted.png\",\r\n            Twitch = \"stick_twitch.png\",\r\n            Twitter1 = \"stick_twitter01.png\"\r\n        }\r\n\r\n        export class Stick extends Sprite {\r\n            public power: number = 0;\r\n            public rotationEnabled: boolean = false;\r\n            private leftLimit: number;\r\n            private rightLimit: number;\r\n            private upLimit: number;\r\n            private downLimit: number;\r\n            protected opposite: number;\r\n            protected adjacent: number;\r\n            private shootTimeline: TimelineLite;\r\n            public isActive: boolean = false;\r\n            public startPosition: Point;\r\n            public initialPosition: Point;\r\n            public initialPivotPoint: Point;\r\n\r\n            protected clickPoint: Vector2;\r\n            protected clickPointRegistered: boolean = false;\r\n            protected firstPointOfTangent: Vector2;\r\n            protected secondPointOfTangent: Vector2;\r\n            protected stickPowerFactor: number = 3.8;\r\n            protected mouseReleased: boolean = false;\r\n\r\n            constructor() {\r\n                super();\r\n                this.SetStickSkin(StickType.Default);\r\n                this.initialPivotPoint = new Point(this.texture.width + 8, this.texture.height / 2);\r\n                this.pivot = this.initialPivotPoint;\r\n                this.defineShootTimeline();\r\n\r\n            }\r\n\r\n            public SetStickSkin(stickType: StickType) {\r\n\r\n                this.texture = PIXI.Texture.fromFrame(stickType.toString());\r\n            }\r\n\r\n            public getStickState(): StickState {\r\n                let stickState: StickState = {\r\n                    x: this.x,\r\n                    y: this.y,\r\n                    rotation: this.rotation,\r\n                    pivotX: this.pivot.x,\r\n                    visible: this.visible\r\n                };\r\n\r\n                return stickState;\r\n            }\r\n\r\n            public setState(stickState: StickState, duration:number): void {\r\n                this.x = stickState.x;\r\n                this.y = stickState.y;\r\n                this.visible = stickState.visible;\r\n                // this.rotation = stickState.rotation;\r\n                this.pivot.x = stickState.pivotX;\r\n\r\n                let time: number = (duration + 1 / 60) / 2;\r\n\r\n                TweenMax.to(this, time, {\r\n                    rotation: stickState.rotation,\r\n                    ease:Linear.easeNone,\r\n                });\r\n                // this.reset();\r\n\r\n            }\r\n\r\n            private hide():void\r\n            {\r\n                TweenMax.to(this, 0.1, {alpha:0});\r\n            }\r\n\r\n            public update(): void {\r\n                // if (!MouseHandler.Instance().left.down)\r\n                //     this.mouseReleased = true;\r\n\r\n                if (this.isActive) {\r\n                    // console.log(\"stick intra la is active!!\");\r\n\r\n                    // if (!MouseHandler.Instance().left.down) {\r\n                    //     console.log(\"stick NU intra la left button down!!! rotation: \" + this.rotationEnabled);\r\n                    // }\r\n                    // if (MouseHandler.Instance().left.down && this.mouseReleased) {\r\n                    if (MouseHandler.Instance().left.down) {\r\n\r\n                        console.log(\"stick intra la left button down!!!\");\r\n\r\n                        this.rotationEnabled = false;\r\n// if(this.mouseReleased)\r\n// {\r\n                        if (!this.clickPointRegistered) {\r\n                            // console.log(\"stick intra la click point registered!!!\");\r\n\r\n                            let localPoint = this.parent.toLocal(new Point(MouseHandler.Instance().position.x, MouseHandler.Instance().position.y));\r\n                            this.clickPointRegistered = true;\r\n\r\n                            this.clickPoint = new Vector2(localPoint.x, localPoint.y);\r\n\r\n                            let oppRot: Vector2 = new Vector2(Math.cos(90 * Math.PI / 180 + this.rotation),\r\n                                Math.sin(90 * Math.PI / 180 + this.rotation)).normalise();\r\n\r\n                            this.firstPointOfTangent = new Vector2(localPoint.x - oppRot.x * 1500, localPoint.y - oppRot.y * 1500);\r\n                            this.secondPointOfTangent = new Vector2(localPoint.x + oppRot.x * 1500, localPoint.y + oppRot.y * 1500);\r\n\r\n                            // let g: Graphics = new Graphics();\r\n                            // g.beginFill(0xff990);\r\n                            // g.lineStyle(2, 0x000000);\r\n                            // g.moveTo(this.firstPointOfTangent.x, this.firstPointOfTangent.y);\r\n                            // g.lineTo(this.secondPointOfTangent.x, this.secondPointOfTangent.y);\r\n                            // g.endFill();\r\n                            // this.parent.addChild(g);\r\n\r\n\r\n                        } else {\r\n                            // console.log(\"stick NU intra la click point registered!!!\");\r\n\r\n                            let stickPower: number = 0;\r\n\r\n                            let localPoint = this.parent.toLocal(new Point(MouseHandler.Instance().position.x, MouseHandler.Instance().position.y));\r\n                            let mouseDirection: number = (localPoint.x - this.firstPointOfTangent.x) * (this.secondPointOfTangent.y - this.firstPointOfTangent.y) - (localPoint.y - this.firstPointOfTangent.y) * (this.secondPointOfTangent.x - this.firstPointOfTangent.x);\r\n\r\n                            if (mouseDirection > 0)\r\n                                mouseDirection = -1;\r\n                            else\r\n                                mouseDirection = 1;\r\n\r\n                            if (mouseDirection > 0) {\r\n                                stickPower = this.distToSegment(localPoint, this.firstPointOfTangent, this.secondPointOfTangent);\r\n                            }\r\n                            else {\r\n                                stickPower = 0\r\n                            }\r\n\r\n                            stickPower /= 2;\r\n                            if (stickPower > 120)\r\n                                stickPower = 120;\r\n\r\n                            // console.log(\"stick powa: \" + stickPower);\r\n                            this.increasePower(stickPower);\r\n                        }\r\n                    }\r\n                    else if (this.power > 6) {\r\n                        // console.log(\"stick intra la power mai mare!!!\");\r\n\r\n                        this.release();\r\n                    }\r\n                    else if (this.power == 0) {\r\n                        // console.log(\"stick intra la power zero!!!\");\r\n\r\n                        this.rotationEnabled = true;\r\n\r\n                    }\r\n\r\n\r\n                    // } else if (this.power <= 0) {\r\n                    //     this.rotationEnabled = true;\r\n                    //     // this.x = this.initialPivotPoint.x;\r\n                    // }\r\n                    if (this.rotationEnabled && (!MouseHandler.Instance().left.down)) {\r\n                        // console.log(\"stick intra la rotation is enabled!!\");\r\n\r\n                        let localPoint = this.parent.toLocal(\r\n                            new Point(MouseHandler.Instance().position.x, MouseHandler.Instance().position.y));\r\n                        this.opposite = localPoint.y - this.position.y;\r\n                        this.adjacent = localPoint.x - this.position.x;\r\n                        this.rotation = Math.atan2(this.opposite, this.adjacent);\r\n\r\n                        this.clickPointRegistered = false;\r\n                        this.pivot.x = this.initialPivotPoint.x;\r\n                        // if(this.raycastFollower)\r\n                    }\r\n\r\n                }\r\n                /*  else {\r\n                      console.log(\"stick NU active!!\");\r\n\r\n                  }*/\r\n            }\r\n\r\n            protected increasePower(stickPower: number): void {\r\n                // if (this.pivot.x - this.initialPivotPoint.x < 100) {\r\n                // TweenMax.to(this.pivot, 0.1, {x: this.initialPivotPoint.x + stickPower});\r\n                this.pivot.x = this.initialPivotPoint.x + stickPower;\r\n                this.power = stickPower * this.stickPowerFactor;\r\n                // }\r\n            }\r\n\r\n            protected release(): void {\r\n                // console.log(\"la release\");\r\n                this.isActive = false;\r\n                this.clickPointRegistered = false;\r\n                this.shootTimeline.play(0);\r\n\r\n\r\n            }\r\n\r\n            // public setWallLimits(left: number, right: number, up: number, down: number): void {\r\n            //     this.leftLimit = left;\r\n            //     this.rightLimit = right;\r\n            //     this.upLimit = up;\r\n            //     this.downLimit = down;\r\n            // }\r\n\r\n            public reset(): void {\r\n                this.isActive = false;\r\n                this.rotationEnabled = false;\r\n                this.clickPointRegistered = false;\r\n                // if (MouseHandler.Instance().left.down)\r\n                //     this.mouseReleased = false;\r\n            }\r\n\r\n            public GoToStartPosition(): void {\r\n                this.x = this.startPosition.x;\r\n                this.y = this.startPosition.y;\r\n            }\r\n\r\n            public activate(position: Point | PointLike): void {\r\n                // console.log(\"stick la activate\");\r\n\r\n                this.position.x = position.x;\r\n                this.position.y = position.y;\r\n                this.isActive = true;\r\n                this.rotationEnabled = true;\r\n                this.visible = true;\r\n                // console.log(\"la activate -> stick rotation enabled: \" + this.rotationEnabled);\r\n\r\n            }\r\n\r\n            private defineShootTimeline(): void {\r\n                this.shootTimeline = new TimelineLite();\r\n                this.shootTimeline.pause();\r\n                this.shootTimeline.add(TweenMax.to(this.pivot, 0.05, {\r\n                    x: this.initialPivotPoint.x - 8,\r\n                    onComplete: this.shoot.bind(this)\r\n                }));\r\n                this.shootTimeline.add(TweenMax.to(this.pivot, 0.1, {\r\n                    x: this.initialPivotPoint.x\r\n                }));\r\n\r\n            }\r\n\r\n\r\n            private shoot(): void {\r\n                // this.power = 0;\r\n                // console.log(\"stick power: \" + this.power);\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.SHOOT_BALL);\r\n                SignalsManager.DispatchSignal(SignalsType.PLAY_SOUND, [{soundName: PockeySoundURLS.SHOOT_BALL}]);\r\n                this.visible = false;\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.HIDE_BALL_RAY_GRAPHICS);\r\n                // this.isActive = false;\r\n            }\r\n\r\n            private dist2(v: Vector2, w: Vector2) {\r\n                return (v.x - w.x) * (v.x - w.x) + (v.y - w.y) * (v.y - w.y);\r\n            }\r\n\r\n            private distToSegmentSquared(point: Vector2, firstLinePoint: Vector2, secondLinePoint: Vector2): number {\r\n                let l2 = this.dist2(firstLinePoint, secondLinePoint);\r\n                if (l2 == 0)\r\n                    return this.dist2(point, firstLinePoint);\r\n\r\n                var t = ((point.x - firstLinePoint.x) * (secondLinePoint.x - firstLinePoint.x) + (point.y - firstLinePoint.y) * (secondLinePoint.y - firstLinePoint.y)) / l2;\r\n                t = Math.max(0, Math.min(1, t));\r\n\r\n                return this.dist2(point, new Vector2(\r\n                    firstLinePoint.x + t * (secondLinePoint.x - firstLinePoint.x),\r\n                    firstLinePoint.y + t * (secondLinePoint.y - firstLinePoint.y)\r\n                ));\r\n            }\r\n\r\n            protected distToSegment(p, v, w) {\r\n                return Math.sqrt(this.distToSegmentSquared(p, v, w));\r\n            }\r\n        }\r\n    }\r\n}\r\n","///<reference path=\"stick.ts\"/>\r\n///<reference path=\"../../../Framework/Utils/touch-handler.ts\"/>\r\nnamespace Pockey {\r\n    import Stick = Pockey.GameModule.Stick;\r\n    import TouchHandler = Framework.Utils.TouchHandler;\r\n    import Point = PIXI.Point;\r\n    import SignalsManager = Framework.Signals.SignalsManager;\r\n    import PockeySignalTypes = Pockey.SignalsModule.PockeySignalTypes;\r\n    import PointLike = PIXI.PointLike;\r\n\r\n    export class StickMobile extends Stick {\r\n        // constructor\r\n        constructor() {\r\n            super();\r\n            // console.log(\"stick constructor\");\r\n\r\n            SignalsManager.AddSignalCallback(PockeySignalTypes.STICK_PIVOT_MOBILE_UPDATE, this.onStickPowerMobile.bind(this));\r\n            SignalsManager.AddSignalCallback(PockeySignalTypes.STICK_MOBILE_RELEASE, this.stickMobileRelease.bind(this));\r\n        }\r\n\r\n        public activate(position: Point | PointLike): void {\r\n            // console.log(\"stick la activate\");\r\n\r\n           super.activate(position);\r\n\r\n            SignalsManager.DispatchSignal(PockeySignalTypes.SHOW_STICK_POWER_MOBILE);\r\n\r\n            // console.log(\"la activate -> stick rotation enabled: \" + this.rotationEnabled);\r\n\r\n        }\r\n\r\n        private stickMobileRelease(params: any[]): void {\r\n            // let stickPower: number = params[0];\r\n\r\n            if (this.power > 6) {\r\n                // console.log(\"stick intra la power mai mare!!!\");\r\n\r\n                this.release();\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.HIDE_STICK_POWER_MOBILE);\r\n            }\r\n            else if (this.power == 0) {\r\n                // console.log(\"stick intra la power zero!!!\");\r\n\r\n                this.rotationEnabled = true;\r\n            }\r\n        }\r\n\r\n        private onStickPowerMobile(params: any[]): void {\r\n            let stickPower: number = params[0];\r\n            this.rotationEnabled = false;\r\n\r\n            this.increasePower(stickPower);\r\n        }\r\n\r\n        protected increasePower(stickPower: number): void {\r\n            // if (this.pivot.x - this.initialPivotPoint.x < 100) {\r\n            // TweenMax.to(this.pivot, 0.1, {x: this.initialPivotPoint.x + stickPower});\r\n            this.pivot.x = this.initialPivotPoint.x + stickPower;\r\n            console.log(\"pivotu pizdii: \" + this.initialPivotPoint.x, stickPower, this.pivot.x);\r\n            this.power = stickPower * this.stickPowerFactor;\r\n            // }\r\n        }\r\n\r\n        public update(): void {\r\n            // console.log(\"stick update\");\r\n\r\n            if (this.isActive) {\r\n                // console.log(\"stick intra la is active!!\");\r\n\r\n                // if (!MouseHandler.Instance().left.down) {\r\n                //     console.log(\"stick NU intra la left button down!!! rotation: \" + this.rotationEnabled);\r\n                // }\r\n                // console.log(\"TouchHandler.Instance().isTouchMoving: \" + TouchHandler.Instance().isTouchMoving);\r\n\r\n                if (this.rotationEnabled && TouchHandler.Instance().isTouchMoving) {\r\n                    console.log(\"intra la rotation enabled\");\r\n                    // console.log(\"stick intra la rotation is enabled!!\");\r\n\r\n                    let localPoint = this.parent.toLocal(\r\n                        new Point(TouchHandler.Instance().position.x, TouchHandler.Instance().position.y));\r\n                    this.opposite = localPoint.y - this.position.y;\r\n                    this.adjacent = localPoint.x - this.position.x;\r\n                    this.rotation = Math.atan2(this.opposite, this.adjacent);\r\n\r\n                    this.clickPointRegistered = false;\r\n                    this.pivot.x = this.initialPivotPoint.x;\r\n                    // if(this.raycastFollower)\r\n                }\r\n\r\n                /* if (MouseHandler.Instance().left.down) {\r\n                     // console.log(\"stick intra la left button down!!!\");\r\n\r\n                     this.rotationEnabled = false;\r\n\r\n                     if (!this.clickPointRegistered) {\r\n                         // console.log(\"stick intra la click point registered!!!\");\r\n\r\n                         let localPoint = this.parent.toLocal(new Point(MouseHandler.Instance().position.x, MouseHandler.Instance().position.y));\r\n                         this.clickPointRegistered = true;\r\n                         this.clickPoint = new Vector2(localPoint.x, localPoint.y);\r\n\r\n                         let oppRot: Vector2 = new Vector2(Math.cos(90 * Math.PI / 180 + this.rotation),\r\n                             Math.sin(90 * Math.PI / 180 + this.rotation)).normalise();\r\n\r\n                         this.firstPointOfTangent = new Vector2(localPoint.x - oppRot.x * 1500, localPoint.y - oppRot.y * 1500);\r\n                         this.secondPointOfTangent = new Vector2(localPoint.x + oppRot.x * 1500, localPoint.y + oppRot.y * 1500);\r\n\r\n                         // let g: Graphics = new Graphics();\r\n                         // g.beginFill(0xff990);\r\n                         // g.lineStyle(2, 0x000000);\r\n                         // g.moveTo(this.firstPointOfTangent.x, this.firstPointOfTangent.y);\r\n                         // g.lineTo(this.secondPointOfTangent.x, this.secondPointOfTangent.y);\r\n                         // g.endFill();\r\n                         // this.parent.addChild(g);\r\n\r\n\r\n                     } else {\r\n                         // console.log(\"stick NU intra la click point registered!!!\");\r\n\r\n                         let stickPower: number = 0;\r\n\r\n                         let localPoint = this.parent.toLocal(new Point(MouseHandler.Instance().position.x, MouseHandler.Instance().position.y));\r\n                         let mouseDirection: number = (localPoint.x - this.firstPointOfTangent.x) * (this.secondPointOfTangent.y - this.firstPointOfTangent.y) - (localPoint.y - this.firstPointOfTangent.y) * (this.secondPointOfTangent.x - this.firstPointOfTangent.x);\r\n\r\n                         if (mouseDirection > 0)\r\n                             mouseDirection = -1;\r\n                         else\r\n                             mouseDirection = 1;\r\n\r\n                         if (mouseDirection > 0) {\r\n                             stickPower = this.distToSegment(localPoint, this.firstPointOfTangent, this.secondPointOfTangent);\r\n                         }\r\n                         else {\r\n                             stickPower = 0\r\n                         }\r\n\r\n                         stickPower /= 2;\r\n                         if (stickPower > 120)\r\n                             stickPower = 120;\r\n\r\n                         // console.log(\"stick powa: \" + stickPower);\r\n                         this.increasePower(stickPower);\r\n                     }\r\n                 }\r\n                 else if (this.power > 6) {\r\n                     // console.log(\"stick intra la power mai mare!!!\");\r\n\r\n                     this.release();\r\n                 }\r\n                 else if (this.power == 0) {\r\n                     // console.log(\"stick intra la power zero!!!\");\r\n\r\n                     this.rotationEnabled = true;\r\n\r\n                 }\r\n\r\n\r\n                 // } else if (this.power <= 0) {\r\n                 //     this.rotationEnabled = true;\r\n                 //     // this.x = this.initialPivotPoint.x;\r\n                 // }\r\n                 if (this.rotationEnabled && TouchHandler.Instance().isTouchMoving) {\r\n                     // console.log(\"stick intra la rotation is enabled!!\");\r\n\r\n                     let localPoint = this.parent.toLocal(\r\n                         new Point(TouchHandler.Instance().position.x, MouseHandler.Instance().position.y));\r\n                     this.opposite = localPoint.y - this.position.y;\r\n                     this.adjacent = localPoint.x - this.position.x;\r\n                     this.rotation = Math.atan2(this.opposite, this.adjacent);\r\n\r\n                     this.clickPointRegistered = false;\r\n                     this.pivot.x = this.initialPivotPoint.x;\r\n                     // if(this.raycastFollower)\r\n                 }*/\r\n            }\r\n            /*  else {\r\n                  console.log(\"stick NU active!!\");\r\n\r\n              }*/\r\n\r\n        }\r\n    }\r\n}","namespace Pockey {\r\n    export module GameModule {\r\n\r\n        import Vector2 = Framework.Utils.Vector2;\r\n        import Settings = Framework.Settings;\r\n        import Sprite = PIXI.Sprite;\r\n        import SignalsManager = Framework.Signals.SignalsManager;\r\n        import PockeySignalTypes = Pockey.SignalsModule.PockeySignalTypes;\r\n\r\n        export class Puck extends AbstractBall {\r\n            public puckGoals: PuckGoal[];\r\n            public goalYPosition: number;\r\n            public goalHeight: number;\r\n\r\n            constructor() {\r\n                super();\r\n                this.ballType = BallType.Puck;\r\n                this.name = \"Puck\";\r\n\r\n                this.ballValue = 2;\r\n                this.delta += 0.994;\r\n                this.mass = 0.8;\r\n\r\n\r\n            }\r\n\r\n            protected worldPreSolveHandler(): void {\r\n\r\n                // if (this.speed() < 18)\r\n                //     this.p2Body.velocity = [this.p2Body.velocity[0] * PockeySettings.DELTA, this.p2Body.velocity[1] * PockeySettings.DELTA]\r\n            }\r\n\r\n\r\n            protected addP2Body(): void {\r\n                super.addP2Body();\r\n                this.p2Body.damping = 0.1;\r\n                this.p2Body.boundingRadius = this.radius;\r\n                this.p2Body.allowSleep = true;\r\n                this.p2Body.sleepSpeedLimit = 1; // Body will feel sleepy if speed<1 (speed is the norm of velocity)\r\n                this.p2Body.sleepTimeLimit = 0.07;\r\n\r\n\r\n            }\r\n\r\n            protected getCircleMaterial(): p2.Material {\r\n                return P2WorldManager.Instance().getMaterialByID(MaterialType.PUCK_MATERIAL);\r\n            }\r\n\r\n            protected addTexture(): void {\r\n                this.radius = 25;\r\n                this.ballTexture = new Sprite(PIXI.Texture.fromImage(Settings.desktopAssetsPath + \"Images/ballGraphics/puck2.png\"));\r\n                //@ts-ignore\r\n                this.ballTexture.pluginName = \"picture\";\r\n\r\n                this.ballTexture.scale.set(0.5);\r\n                this.ballTexture.anchor.set(0.5);\r\n\r\n                this.addChild(this.ballTexture);\r\n            }\r\n\r\n            public animatePocketCollision(pocketPosition: Vector2, newX: number = null) {\r\n                let animationSpeed: number = 1 / this.speed();\r\n\r\n                this.x = pocketPosition.x;\r\n                TweenMax.to(this, animationSpeed, {\r\n                    x: newX\r\n                });\r\n            }\r\n\r\n\r\n\r\n            public update(): void {\r\n\r\n                this.moving = this.p2Body.sleepState != p2.Body.SLEEPING;\r\n                if(!this.moving)\r\n                    return;\r\n// console.log(\"puck angle: \" + this.p2Body.angle);\r\n                //person.age >=16 ? 'Yes' : 'No';\r\n                if (this.moving && !this.canBeRemoved) {\r\n\r\n                    let isCloserToGoal: boolean = false;\r\n                    let p2BodyPos: Vector2 = new Vector2(this.p2Body.position[0], this.p2Body.position[1]);\r\n                    let goalScored: boolean = false;\r\n                    let goalType: BallType;\r\n\r\n                    if (p2BodyPos.y > this.goalYPosition && p2BodyPos.y < this.goalYPosition + this.goalHeight) {\r\n                        this.x = p2BodyPos.x;\r\n                        this.y = p2BodyPos.y;\r\n\r\n                        isCloserToGoal = true;\r\n                        let distanceToFinalX: number;\r\n                        let finalPoint: Vector2 = new Vector2();\r\n                        let p2BodyVelocityNormalized: Vector2;\r\n\r\n\r\n                        if (p2BodyPos.x < this.leftLimit) {\r\n                            distanceToFinalX = (this.leftLimit - this.radius) - p2BodyPos.x;\r\n                            p2BodyVelocityNormalized = p2BodyPos.substract(this.oldPos).normalise().multiply(distanceToFinalX);\r\n                            finalPoint.x = this.leftLimit - this.radius - 3;\r\n                            goalScored = true;\r\n                            goalType = this.puckGoals[0].type;\r\n\r\n                        }\r\n                        else if (p2BodyPos.x > this.rightLimit) {\r\n                            distanceToFinalX = p2BodyPos.x - (this.rightLimit + this.radius);\r\n                            p2BodyVelocityNormalized = p2BodyPos.substract(this.oldPos).normalise().multiply(distanceToFinalX);\r\n                            finalPoint.x = this.rightLimit + this.radius + 3;\r\n                            goalScored = true;\r\n                            goalType = this.puckGoals[1].type;\r\n                        }\r\n\r\n                        if (goalScored) {\r\n\r\n                            // return;\r\n                            this.canBeRemoved = true;\r\n\r\n                            P2WorldManager.Instance().world.removeBody(this.p2Body);\r\n\r\n                            SignalsManager.DispatchSignal(PockeySignalTypes.BALL_IN_POCKET, [this.ballType, goalType]);\r\n\r\n\r\n                            finalPoint.y = this.y - p2BodyVelocityNormalized.y;\r\n\r\n                            if (finalPoint.y < this.goalYPosition + this.radius) {\r\n                                finalPoint.y = this.goalYPosition + this.radius;\r\n                            }\r\n                            if (finalPoint.y > this.goalYPosition + this.goalHeight - this.radius) {\r\n                                finalPoint.y = this.goalYPosition + this.goalHeight - this.radius\r\n                            }\r\n\r\n                            let duration: number = 1 / (this.speed() / 60);\r\n                            duration *= 2;\r\n                            if (duration > 1.8)\r\n                                duration = 1.8;\r\n\r\n                            this.animationInProgress = true;\r\n                            let tl: TimelineMax = new TimelineMax();\r\n                            tl.add(TweenMax.to(this, duration, {\r\n                                x: finalPoint.x,\r\n                                y: finalPoint.y,\r\n                                onComplete: this.declareAnimationFinished.bind(this)\r\n                            }), 0);\r\n                            tl.add(TweenMax.to(this.ballShadow.scale, duration, {\r\n                                x: 0.8,\r\n                                y: 0.8,\r\n                                ease: Linear.easeNone\r\n                            }), 0);\r\n                            tl.add(TweenMax.to(this.ballShadow, duration, {\r\n                                x: finalPoint.x,\r\n                                y: finalPoint.y,\r\n                                ease: Linear.easeNone\r\n                            }), 0);\r\n                            tl.add(TweenMax.to(this.scale, duration, {\r\n                                x: 0.92,\r\n                                y: 0.92\r\n                            }), 0);\r\n                        }\r\n                    }\r\n\r\n                    if (this.canBeRemoved)\r\n                        return;\r\n\r\n                    this.x = p2BodyPos.x;\r\n                    this.y = p2BodyPos.y;\r\n\r\n                    if (!isCloserToGoal) {\r\n\r\n                        //todo if distance to pockets is closer than plm\r\n                        /*if (p2BodyPos.x + this.radius - this.radius / 2 > this.rightLimit) {\r\n                            this.x = this.rightLimit - this.radius + this.radius / 2;\r\n                        }\r\n                        else if (p2BodyPos.x - this.radius + this.radius / 2< this.leftLimit) {\r\n                            this.x = this.leftLimit + this.radius- this.radius / 2;\r\n                        }\r\n                        if (p2BodyPos.y + this.radius - this.radius / 2> this.downLimit) {\r\n                            this.y = this.downLimit - this.radius+ this.radius / 2;\r\n                        }\r\n                        else if (p2BodyPos.y - this.radius + this.radius / 2< this.upLimit) {\r\n                            this.y = this.upLimit + this.radius- this.radius / 2;\r\n                        }*/\r\n                    }\r\n\r\n                    this.ballShadow.x = this.x;\r\n                    this.ballShadow.y = this.y;\r\n\r\n                    this.oldPos.x = this.x;\r\n                    this.oldPos.y = this.y;\r\n\r\n                    this.rotation += this.p2Body.angle - this.p2Body.previousAngle;\r\n\r\n                    // if(this.speed() < 1)\r\n                    // {\r\n                    //     this.rotation = this.p2Body.angle / Math.PI;\r\n                    // }\r\n\r\n                }\r\n            }\r\n\r\n            protected declareAnimationFinished(): void {\r\n                this.animationInProgress = false;\r\n                // this.visible = false;\r\n                // if (this.parent)\r\n                //     this.parent.removeChild(this);\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n","namespace Pockey {\r\n    export module GameModule {\r\n\r\n\r\n        export class WhiteBall extends AbstractBall {\r\n\r\n\r\n            private ballWasShot: boolean = false;\r\n            private _isOnReposition: boolean = false;\r\n            private _isOnRearrange: boolean = false;\r\n\r\n            constructor() {\r\n                super();\r\n\r\n                this.ballType = BallType.White;\r\n                this.name = \"WhiteBall\";\r\n            }\r\n\r\n            protected worldPreSolveHandler(): void {\r\n                if (this.ballWasShot) {\r\n                    this.ballWasShot = false;\r\n                    this.p2Body.velocity = [this.velocity.x, this.velocity.y];\r\n                }\r\n                super.worldPreSolveHandler();\r\n\r\n\r\n                // if (this.speed() < 100)\r\n                //     this.p2Body.velocity = [this.p2Body.velocity[0] * PockeySettings.DELTA, this.p2Body.velocity[1] * PockeySettings.DELTA]\r\n            }\r\n\r\n\r\n            onShoot(rotation: number, power: number): void {\r\n\r\n                super.onShoot(rotation, power);\r\n                this.ballWasShot = true;\r\n            }\r\n\r\n            set isOnReposition(value: boolean) {\r\n                this._isOnReposition = value;\r\n                if (value == true)\r\n                {\r\n                    // console.log(\"intra la enabled false!\");\r\n                    this.sphere.setEnabled(false);\r\n                    this.ballShadow.alpha = 0;\r\n                }\r\n            }\r\n\r\n            get isOnReposition(): boolean {\r\n                // console.log(\"se cere: \" +  this._isOnReposition);\r\n                return this._isOnReposition;\r\n            }\r\n\r\n            set isOnRearrange(value: boolean) {\r\n                this._isOnRearrange = value;\r\n                if (value == true)\r\n                {\r\n                    // console.log(\"intra la enabled false!\");\r\n                    this.reset();\r\n                }\r\n            }\r\n\r\n            get isOnRearrange(): boolean {\r\n                // console.log(\"se cere: \" +  this._isOnReposition);\r\n                return this._isOnRearrange;\r\n            }\r\n\r\n            public update(): void {\r\n                super.update();\r\n\r\n                // console.log(\"white ball pos: \" + this.x, this.y);\r\n            }\r\n\r\n// public getBallData(): Pockey.GameModule.BallData {\r\n            //     // console.log(\"last pos sent: \" + this.lastPositions.length);\r\n            //     return super.getBallData();\r\n            // }\r\n            //\r\n            //\r\n            // public setBallData(ballData: Pockey.GameModule.BallData): void {\r\n            //     // console.log(\"last pos received: \" + this.lastPositions.length);\r\n            //     super.setBallData(ballData);\r\n            // }\r\n\r\n\r\n        }\r\n    }\r\n}\r\n","/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 10/1/2018\r\n */\r\n\r\n\r\nnamespace Pockey {\r\n    export module GameModule {\r\n        import Sprite = PIXI.Sprite;\r\n        import Container = PIXI.Container;\r\n\r\n        export class PuckGoal extends Container {\r\n\r\n\r\n            public type: BallType;\r\n\r\n            private goalRightPath: string = \"goalTop_right.png\";\r\n            private goalTopRightPath: string = \"goalTop_righttTopper.png\";\r\n\r\n            private goalLeftPath: string = \"goalTop_left.png\";\r\n            private goalTopLefttPath: string = \"goalTop_leftTopper.png\";\r\n\r\n            private goalGraphics: Sprite;\r\n            private goalGraphicsAnimator: Sprite;\r\n            private goalTopGraphics: Sprite;\r\n            private animationStarted: boolean = false;\r\n            private goalAnimationTween: TweenMax;\r\n            // private _caca:number\r\n            // private _tint:number;\r\n            constructor(side: string) {\r\n                super();\r\n\r\n                if (side == \"left\") {\r\n                    this.goalGraphics = new Sprite(PIXI.Texture.fromFrame(this.goalLeftPath));\r\n                    this.goalGraphicsAnimator = new Sprite(PIXI.Texture.fromFrame(this.goalLeftPath));\r\n                    this.goalTopGraphics = new Sprite(PIXI.Texture.fromFrame(this.goalTopLefttPath));\r\n                }\r\n                else {\r\n                    this.goalGraphics = new Sprite(PIXI.Texture.fromFrame(this.goalRightPath));\r\n                    this.goalGraphicsAnimator = new Sprite(PIXI.Texture.fromFrame(this.goalRightPath));\r\n                    this.goalTopGraphics = new Sprite(PIXI.Texture.fromFrame(this.goalTopRightPath));\r\n                }\r\n\r\n                this.addChild(this.goalGraphics);\r\n                this.goalGraphicsAnimator.visible = false;\r\n                this.addChild(this.goalGraphicsAnimator);\r\n                this.addChild(this.goalTopGraphics);\r\n            }\r\n\r\n            set tint(color: number) {\r\n                this.goalGraphics.tint = color;\r\n                // this._tint = value;\r\n            }\r\n\r\n            public animate(): void {\r\n                if (!this.animationStarted) {\r\n                    this.animationStarted = true;\r\n                    this.goalGraphicsAnimator.visible = true;\r\n                    this.goalGraphicsAnimator.alpha = 0;\r\n                    this.goalAnimationTween = TweenMax.to(this.goalGraphicsAnimator, 0.2, {\r\n                        alpha: 0.68,\r\n                        yoyo: true,\r\n                        repeat: -1\r\n                    });\r\n                }\r\n            }\r\n\r\n            public stopAnimation(): void {\r\n                if (this.animationStarted) {\r\n                    this.animationStarted = false;\r\n                    this.goalGraphicsAnimator.visible = false;\r\n                    if (this.goalAnimationTween && this.goalAnimationTween.isActive())\r\n                        this.goalAnimationTween.kill();\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n","/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 10/10/2018\r\n */\r\n\r\nnamespace Pockey {\r\n\r\n    export module StateMachineModule {\r\n\r\n        export class PockeyStateTexts {\r\n\r\n            // First-game State: shooting (optional, but might be too difficult)\r\n            public static beginGame: string = \"AIM WITH CURSOR, PRESS & HOLD LEFT MOUSE BUTTON AND DRAG TO SET POWER\";\r\n            public static beginGameMobile: string = \"TO AIM, TAP OR MOVE OVER THE POOLTABLE. SHOOT BY SELECTING THE POWER ON THE LEFT SIDE\";//AIM WITH CURSOR, PRESS & HOLD LEFT MOUSE BUTTON AND DRAG TO SET POWER\";\r\n\r\n            // First-game State: when its your turn to break - (we need to tweak the break pattern)\r\n            // public static yourTurnToShootText: string = \"YOUR TURN TO SHOOT!\";\r\n\r\n            // Tip State: when a player’s turn starts\r\n            public static yourTurnToShoot: string = \"YOUR TURN! SHOOT #opponent#{opponent}'S#opponent# BALLS INTO POCKETS\";\r\n\r\n            // Tip State: when you aim at your own ball\r\n            public static ownBallAiming: string = \"#warning#WARNING!#warning# HITTING YOUR OWN BALL FIRST IS A FOUL\";\r\n\r\n            // State: when you hit your own ball first\r\n            public static ownBallHit: string = \"#opponent#{opponent}#opponent# FOULED!\";\r\n\r\n            // Tip State: when you aim at the puck\r\n            // Result: goalbox of opponent has an arrow hovering of it + arrow indicator around puck\r\n            public static puckAiming: string = \"SHOOT THE PUCK INTO #opponent#{opponent}'S#opponent# GOAL!\";\r\n\r\n            // State: when opponent fouls and\r\n            public static opponentFault: string = \"#opponent#{opponent}#opponent# FOULED! PLACE THE BALL ANYWHERE ON TABLE\";\r\n\r\n            // State: when players scratches on cue ball\r\n            public static whiteBallFault: string = \"YOU FOULED! #opponent#{opponent}#opponent# GETS BALL-IN-HAND\";\r\n\r\n            // State: when player scores his own ball in\r\n            public static onOwnBallInPocket: string = \"YOU SCORED AN OWN BALL! #opponent#{opponent}’s#opponent# TURN!\";\r\n\r\n            // State: when you score puck in your goal\r\n            public static puckOwnGoal: string = \"PUCK WENT INTO YOUR OWN GOAL! #opponent#{opponent}#opponent# GETS BALL-IN-HAND\";\r\n\r\n            public static onTimeUp: string = \"YOUR TIME IS UP! #opponent#{opponent}#opponent# GETS BALL-IN-HAND\";\r\n            public static onOpponentsTimeUp: string = \"#opponent#{opponent}#opponent# TIME IS UP! PLACE THE BALL ANYWHERE ON TABLE\";\r\n\r\n            // State: when you score the puck into opponent goal\r\n            // Result:goal box flashes, some poppy sound is made and\r\n            public static onPuckGoal: string = \"YOU SCORED THE PUCK! -2 HEALTH TO #opponent#{opponent}#opponent#\";\r\n\r\n            // State: when you dont hit any balls\r\n            public static noBallScored: string = \"YOU DIDN’T SCORED! #opponent#{opponent}'S#opponent# TURN\";\r\n\r\n            // State: when you hit two or more balls in\r\n            public static multipleBallsIn: string = \"YOU MADE A TRICKSHOT! CONGRATS!\";\r\n\r\n            // State: when you hit the puck/other ball to make a different ball in\r\n            public static ballInPocketViaOtherBall: string = \"YOU MADE A TRICKSHOT! CONGRATS!\";\r\n\r\n            // Tip State: when an Pocket blocker icon appears\r\n            // POWER-UP AVAILABLE, SCORE A BALL IN THE POCKET ON FIRST SHOT\r\n\r\n            // State: when you shoot a ball into a Lock Icon pocket on your first shot of turn\r\n            // POWERUP! THIS POCKET WILL BE BLOCKED FOR YOUR OPPONENTS NEXT TURN\r\n            //\r\n            // State: when you score one of your balls in\r\n            public static opponentBallInPocket: string = \"#opponent#{opponent}#opponent# POCKETED A BALL AND CAN SHOOT AGAIN!\";\r\n            public static opponentsTurn: string = \"#opponent#{opponent}'s#opponent# turn\";\r\n        }\r\n    }\r\n}\r\n","///<reference path=\"../../../Framework/Settings.ts\"/>\r\n///<reference path=\"../../../Framework/Signals/signals-manager.ts\"/>\r\n///<reference path=\"../StateMachine/pockey-state-texts.ts\"/>\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 11/21/2018\r\n */\r\n\r\n\r\nnamespace Pockey {\r\n    export module GameModule {\r\n        import Sprite = PIXI.Sprite;\r\n        import Settings = Framework.Settings;\r\n        import SignalsManager = Framework.Signals.SignalsManager;\r\n        import PockeySignalTypes = Pockey.SignalsModule.PockeySignalTypes;\r\n        import PockeyStateTexts = Pockey.StateMachineModule.PockeyStateTexts;\r\n        import Vector2 = Framework.Utils.Vector2;\r\n        import Graphics = PIXI.Graphics;\r\n        import Point = PIXI.Point;\r\n        import DisplayObject = PIXI.DisplayObject;\r\n        import DisplayObjectContainer = PIXI.core.DisplayObjectContainer;\r\n\r\n        export class Goalie extends PIXI.Container {\r\n\r\n            private goalieBottomLayer: Sprite;\r\n            public goalieMiddleLayer: Sprite;\r\n            private goalieTopLayer: Sprite;\r\n            private animationTimeline: TimelineMax;\r\n\r\n\r\n            public isGoing: string = \"down\"; //\"up\" or \"down\"\r\n\r\n            public type: string;\r\n            public moving: boolean = false;\r\n            // private gr: Graphics;\r\n\r\n            private goaliePolygonCoord: number[][] = [\r\n                [-25 - 2, 13 + 2],\r\n                [-24 - 2, -5 - 2],\r\n                [-17 - 5, -16 + 2],\r\n                [-22 - 4, -20 + 2],\r\n                [-17 - 2, -30 - 2],\r\n                [-10 - 2, -29 - 2],\r\n                [-6 - 2, -35 - 2],\r\n                [28, -37],\r\n                [28, 37],\r\n                [-5 - 2, 35 + 2],\r\n                [-18 - 2, 35 + 2],\r\n                [-26 - 2, 29 + 2]];\r\n\r\n            private goalieShadowPolygonCoord: number[][] = [\r\n                [-42, 6],\r\n                [-36, -32],\r\n                [-17, -42],\r\n                [-4, -52],\r\n                [11, -46],\r\n                [31, -24],\r\n                [42, 16],\r\n                [34, 26],\r\n                [22, 48],\r\n                [3, 50],\r\n                [-15, 52],\r\n                [-34, 47],\r\n                [-40, 23]\r\n            ];\r\n\r\n            public goalieBody: p2.Body;\r\n            public goalieBodyShadow: p2.Body;\r\n            private side: string;\r\n\r\n\r\n            constructor(side: string) {\r\n                super();\r\n\r\n                this.side = side;\r\n                this.name = side + \"Goalie\";\r\n\r\n                this.goalieBody = new p2.Body({mass: 0});\r\n                P2WorldManager.Instance().world.addBody(this.goalieBody);\r\n                this.goalieBody.fromPolygon(this.goaliePolygonCoord);\r\n                _.forEach(this.goalieBody.shapes, (shape: p2.Shape) => {\r\n                    shape.material = new p2.Material(MaterialType.GOALIE_MATERIAL);\r\n                });\r\n\r\n                this.goalieBodyShadow = new p2.Body({mass: 0});\r\n                P2WorldManager.Instance().world.addBody(this.goalieBodyShadow);\r\n                this.goalieBodyShadow.fromPolygon(this.goalieShadowPolygonCoord);\r\n                _.forEach(this.goalieBodyShadow.shapes, (shape: p2.Shape) => {\r\n                    shape.material = new p2.Material(MaterialType.SHADOW_MATERIAL);\r\n                });\r\n\r\n\r\n                this.goalieBottomLayer = new Sprite(PIXI.Texture.fromImage(Settings.desktopAssetsPath + \"Images/goalie_bottom.png\"));\r\n                this.goalieMiddleLayer = new Sprite(PIXI.Texture.fromImage(Settings.desktopAssetsPath + \"Images/goalie_color.png\"));\r\n                this.goalieTopLayer = new Sprite(PIXI.Texture.fromImage(Settings.desktopAssetsPath + \"Images/goalie_top.png\"));\r\n                this.addChild(this.goalieBottomLayer);\r\n                this.addChild(this.goalieMiddleLayer);\r\n                this.addChild(this.goalieTopLayer);\r\n\r\n                this.pivot.set(this.width / 2, this.height / 2);\r\n            }\r\n\r\n            public setBodyPosition(): void {\r\n                this.goalieBody.position[0] = this.x;\r\n                this.goalieBody.position[1] = this.y;\r\n\r\n                this.goalieBodyShadow.position[0] = this.x;\r\n                this.goalieBodyShadow.position[1] = this.y;\r\n            }\r\n\r\n            public setPosition(position: Vector2): void {\r\n                this.x = position.x;\r\n                this.y = position.y;\r\n\r\n                this.setBodyPosition();\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n}\r\n","/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 8/26/2018\r\n */\r\n\r\n\r\nnamespace Pockey {\r\n    import Vector2 = Framework.Utils.Vector2;\r\n    import Circle = PIXI.Circle;\r\n    import Graphics = PIXI.Graphics;\r\n    import DisplayObject = PIXI.DisplayObject;\r\n\r\n    export class Pocket extends Circle {\r\n        public finalPoint: Vector2;\r\n        public position: Vector2;\r\n        public touchPoints: Vector2[];\r\n        public graphics: Graphics[];\r\n\r\n        constructor(x: number, y: number, radius: number, finalPoint: Vector2) {\r\n            super(x, y, radius);\r\n            this.position = new Vector2(x, y);\r\n            this.finalPoint = finalPoint;\r\n            this.graphics = [];\r\n            this.touchPoints = [];\r\n\r\n            let point: Vector2 = new Vector2();\r\n            let g: Graphics = new Graphics();\r\n            let angle: number;\r\n\r\n            //1\r\n            angle = 90 * Math.PI / 180;\r\n            point = new Vector2();\r\n\r\n            point.x = this.position.x + Math.cos(angle) * (this.radius - PockeySettings.BALL_RADIUS - 3);\r\n            point.y = this.position.y + Math.sin(angle) * (this.radius - PockeySettings.BALL_RADIUS - 3);\r\n            this.touchPoints.push(point);\r\n            /*g = new Graphics();\r\n            g.beginFill(0xff9900);\r\n            g.drawCircle(point.x, point.y, 3);\r\n            g.endFill();\r\n            this.graphics.push(g);*/\r\n\r\n            //2\r\n            angle = 45 * Math.PI / 180;\r\n            point = new Vector2();\r\n\r\n            point.x = this.position.x + Math.cos(angle) * (this.radius - PockeySettings.BALL_RADIUS - 3);\r\n            point.y = this.position.y + Math.sin(angle) * (this.radius - PockeySettings.BALL_RADIUS - 3);\r\n            this.touchPoints.push(point);\r\n\r\n            /* g = new Graphics();\r\n             g.beginFill(0xff9900);\r\n             g.drawCircle(point.x, point.y, 3);\r\n             g.endFill();\r\n             this.graphics.push(g);*/\r\n\r\n            //3\r\n            angle = 0 * Math.PI / 180;\r\n            point = new Vector2();\r\n\r\n            point.x = this.position.x + Math.cos(angle) * (this.radius - PockeySettings.BALL_RADIUS - 3);\r\n            point.y = this.position.y + Math.sin(angle) * (this.radius - PockeySettings.BALL_RADIUS - 3);\r\n            this.touchPoints.push(point);\r\n\r\n            /*g = new Graphics();\r\n            g.beginFill(0xff9900);\r\n            g.drawCircle(point.x, point.y, 3);\r\n            g.endFill();\r\n            this.graphics.push(g);*/\r\n\r\n            //4\r\n            angle = -45 * Math.PI / 180;\r\n            point = new Vector2();\r\n\r\n            point.x = this.position.x + Math.cos(angle) * (this.radius - PockeySettings.BALL_RADIUS - 3);\r\n            point.y = this.position.y + Math.sin(angle) * (this.radius - PockeySettings.BALL_RADIUS - 3);\r\n            this.touchPoints.push(point);\r\n            /* g = new Graphics();\r\n             g.beginFill(0xff9900);\r\n             g.drawCircle(point.x, point.y, 3);\r\n             g.endFill();\r\n             this.graphics.push(g);*/\r\n\r\n            //5\r\n            angle = -90 * Math.PI / 180;\r\n            point = new Vector2();\r\n\r\n            point.x = this.position.x + Math.cos(angle) * (this.radius - PockeySettings.BALL_RADIUS - 3);\r\n            point.y = this.position.y + Math.sin(angle) * (this.radius - PockeySettings.BALL_RADIUS - 3);\r\n            this.touchPoints.push(point);\r\n            /*g = new Graphics();\r\n            g.beginFill(0xff9900);\r\n            g.drawCircle(point.x, point.y, 3);\r\n            g.endFill();\r\n            this.graphics.push(g);*/\r\n\r\n            //6\r\n            angle = -135 * Math.PI / 180;\r\n            point = new Vector2();\r\n\r\n            point.x = this.position.x + Math.cos(angle) * (this.radius - PockeySettings.BALL_RADIUS - 3);\r\n            point.y = this.position.y + Math.sin(angle) * (this.radius - PockeySettings.BALL_RADIUS - 3);\r\n            this.touchPoints.push(point);\r\n\r\n            /* g = new Graphics();\r\n             g.beginFill(0xff9900);\r\n             g.drawCircle(point.x, point.y, 3);\r\n             g.endFill();\r\n             this.graphics.push(g);*/\r\n\r\n            //7\r\n\r\n            angle = 180 * Math.PI / 180;\r\n            point = new Vector2();\r\n\r\n            point.x = this.position.x + Math.cos(angle) * (this.radius - PockeySettings.BALL_RADIUS - 3);\r\n            point.y = this.position.y + Math.sin(angle) * (this.radius - PockeySettings.BALL_RADIUS - 3);\r\n            this.touchPoints.push(point);\r\n\r\n            /*g = new Graphics();\r\n            g.beginFill(0xff9900);\r\n            g.drawCircle(point.x, point.y, 3);\r\n            g.endFill();\r\n            this.graphics.push(g);*/\r\n\r\n            //8\r\n\r\n            angle = 135 * Math.PI / 180;\r\n            point = new Vector2();\r\n\r\n            point.x = this.position.x + Math.cos(angle) * (this.radius - PockeySettings.BALL_RADIUS - 3);\r\n            point.y = this.position.y + Math.sin(angle) * (this.radius - PockeySettings.BALL_RADIUS - 3);\r\n            this.touchPoints.push(point);\r\n\r\n            /*g = new Graphics();\r\n            g.beginFill(0xff9900);\r\n            g.drawCircle(point.x, point.y, 3);\r\n            g.endFill();\r\n            this.graphics.push(g);*/\r\n\r\n            // _.forEach([0, 1], () => {\r\n            // point = new Vector2();\r\n\r\n            // point.x = this.position.x + Math.cos(angle) * (this.radius - PockeySettings.BALL_RADIUS - 2);\r\n            // point.y = this.position.y + Math.sin(angle) * (this.radius - PockeySettings.BALL_RADIUS - 2);\r\n            // this.touchPoints.push(point);\r\n            // g = new Graphics();\r\n            // g.beginFill(0xff9900);\r\n            // g.drawCircle(point.x, point.y, 3);\r\n            // g.endFill();\r\n            // this.graphics.push(g);\r\n\r\n\r\n            // angle = -90 * Math.PI / 180;\r\n            // point = new Vector2();\r\n            //\r\n            // point.x = this.position.x + Math.cos(angle) * (this.radius - PockeySettings.BALL_RADIUS - 2);\r\n            // point.y = this.position.y + Math.sin(angle) * (this.radius - PockeySettings.BALL_RADIUS - 2);\r\n            // this.touchPoints.push(point);\r\n            // g = new Graphics();\r\n            // g.beginFill(0xff9900);\r\n            // g.drawCircle(point.x, point.y, 3);\r\n            // g.endFill();\r\n            // this.graphics.push(g);\r\n\r\n\r\n            // angle = 180 * Math.PI / 180;\r\n            // point = new Vector2();\r\n            //\r\n            // point.x = this.position.x + Math.cos(angle) * (this.radius - PockeySettings.BALL_RADIUS - 2);\r\n            // point.y = this.position.y + Math.sin(angle) * (this.radius - PockeySettings.BALL_RADIUS - 2);\r\n            // this.touchPoints.push(point);\r\n            //\r\n            // g = new Graphics();\r\n            // g.beginFill(0xff9900);\r\n            // g.drawCircle(point.x, point.y, 3);\r\n            // g.endFill();\r\n            // this.graphics.push(g);\r\n\r\n\r\n            // angle = 135 * Math.PI / 180;\r\n            // point = new Vector2();\r\n            // point.x = this.position.x + Math.cos(angle) * (this.radius - PockeySettings.BALL_RADIUS - 2);\r\n            // point.y = this.position.y + Math.sin(angle) * (this.radius - PockeySettings.BALL_RADIUS - 2);\r\n            // this.touchPoints.push(point);\r\n            // g = new Graphics();\r\n            // g.beginFill(0xff9900);\r\n            // g.drawCircle(point.x, point.y, 3);\r\n            // g.endFill();\r\n            // this.graphics.push(g);\r\n\r\n\r\n            // });\r\n        }\r\n\r\n        public addPoints(parent: Container): void {\r\n            _.forEach(this.graphics, (g: Graphics) => {\r\n                parent.addChild(g);\r\n                // point.x = this.position.x + Math.cos(angle) * (this.radius + PockeySettings.BALL_RADIUS);\r\n                // point.y = this.position.y + Math.sin(angle) * (this.radius + PockeySettings.BALL_RADIUS);\r\n                // let g: Graphics = new Graphics();\r\n                // g.beginFill(0xff9900);\r\n                // g.drawCircle(point.x, point.y, 3);\r\n                // g.endFill();\r\n                // this.graphics.push(g);\r\n            });\r\n        }\r\n    }\r\n}\r\n","///<reference path=\"../../../Framework/Utils/Rect.ts\"/>\r\n///<reference path=\"decal.ts\"/>\r\n///<reference path=\"stick.ts\"/>\r\n///<reference path=\"stick-mobile.ts\"/>\r\n///<reference path=\"balls/puck.ts\"/>\r\n///<reference path=\"balls/white-ball.ts\"/>\r\n///<reference path=\"puck-goal.ts\"/>\r\n///<reference path=\"goalie.ts\"/>\r\n///<reference path=\"Pocket.ts\"/>\r\n\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 7/16/2018\r\n */\r\nimport Container = PIXI.Container;\r\n\r\nnamespace Pockey {\r\n    export module GameModule {\r\n        import Sprite = PIXI.Sprite;\r\n        import Graphics = PIXI.Graphics;\r\n        import Point = PIXI.Point;\r\n        import Vector2 = Framework.Utils.Vector2;\r\n        import Line = Framework.Utils.Line;\r\n        import Rect = Framework.Utils.Rect;\r\n        import Rectangle = PIXI.Rectangle;\r\n        import Settings = Framework.Settings;\r\n        import Circle = PIXI.Circle;\r\n\r\n        export class PoolTable extends Container {\r\n\r\n            private poolTableBackground: Sprite;\r\n            private poolTableBumper: Sprite;\r\n            private poolTableOverFrame: Sprite;\r\n            private decalIcon: Decal;\r\n\r\n            private ballsDistance: number = 108;\r\n\r\n            public leftGoal: PuckGoal;\r\n            public rightGoal: PuckGoal;\r\n\r\n            public leftGoalie: Goalie;\r\n            public rightGoalie: Goalie;\r\n            public leftBallsArray: AbstractBall[];\r\n            public rightBallsArray: AbstractBall[];\r\n\r\n            public balls: AbstractBall[];\r\n\r\n            private playGround: Rectangle;\r\n            public leftLimit: number;\r\n            public rightLimit: number;\r\n            public upLimit: number;\r\n            public downLimit: number;\r\n\r\n            public puck: Puck;\r\n            public whiteBall: WhiteBall;\r\n            public poolStick: Stick;\r\n\r\n            public BallPositionCircleRadius: number;\r\n            public ballAnimationHolder: Container;\r\n\r\n            public ballPocket1: Sprite;\r\n            public ballPocket2: Sprite;\r\n            public ballPocket3: Sprite;\r\n            public ballPocket4: Sprite;\r\n\r\n            public limits: Line[];\r\n            public pockets: Pocket[];\r\n\r\n            public shadowsHolder: Container;\r\n            public ballsHolder: Container;\r\n\r\n            public leftGoalkeeperCircle: Circle;\r\n            public rightGoalkeeperCircle: Circle;\r\n            public goalkeepersCircles: Circle[];\r\n\r\n            constructor() {\r\n                super();\r\n                this.name = \"poolTable\";\r\n                this.createElements();\r\n            }\r\n\r\n            private createElements(): void {\r\n                this.balls = [];\r\n\r\n                //poolTableBackground\r\n                this.poolTableBackground = new Sprite(PIXI.Texture.fromFrame(Settings.desktopAssetsPath + \"Images/table_felt.png\"));\r\n\r\n\r\n                this.poolTableBackground.name = \"poolTableBackground\";\r\n                this.poolTableBackground.x = -this.poolTableBackground.width / 2;//472;\r\n                this.poolTableBackground.y = -this.poolTableBackground.height / 2;//284;\r\n                this.addChild(this.poolTableBackground);\r\n                ////end poolTableBackground\r\n\r\n                this.shadowsHolder = new Container();\r\n                this.addChild(this.shadowsHolder);\r\n\r\n                PockeySettings.MIDDLE_TABLE_POS = new Vector2(0, 0);\r\n\r\n                PockeySettings.MIDDLE_TABLE_LEFT_POS = new Vector2(PockeySettings.MIDDLE_TABLE_POS.x - 244, PockeySettings.MIDDLE_TABLE_POS.y);\r\n                PockeySettings.MIDDLE_TABLE_RIGHT_POS = new Vector2(PockeySettings.MIDDLE_TABLE_POS.x + 400, PockeySettings.MIDDLE_TABLE_POS.y);\r\n\r\n                //poolTableOverFrame\r\n                this.poolTableOverFrame = new Sprite(PIXI.Texture.fromFrame(Settings.desktopAssetsPath + \"Images/table_border_01.png\"));\r\n                this.poolTableOverFrame.name = \"poolTableOverFrame\";\r\n                this.poolTableOverFrame.x = PockeySettings.MIDDLE_TABLE_POS.x - this.poolTableOverFrame.width / 2;\r\n                this.poolTableOverFrame.y = PockeySettings.MIDDLE_TABLE_POS.y - this.poolTableOverFrame.height / 2;\r\n                this.addChild(this.poolTableOverFrame);\r\n\r\n                //end poolTableOverFrame\r\n\r\n                this.ballAnimationHolder = new Container();\r\n                this.addChild(this.ballAnimationHolder);\r\n\r\n                //poolTableBumper\r\n                this.poolTableBumper = new Sprite(PIXI.Texture.fromFrame(Settings.desktopAssetsPath + \"Images/table_bumper.png\"));\r\n                this.poolTableBumper.name = \"poolTableBumper\";\r\n                this.poolTableBumper.x = -this.poolTableBumper.width / 2;//485;\r\n                this.poolTableBumper.y = -this.poolTableBumper.height / 2;//300;\r\n                this.addChild(this.poolTableBumper);\r\n\r\n                ////end poolTableBumper\r\n\r\n\r\n                //play ground\r\n                this.playGround = new Rectangle(-970 / 2, -484 / 2, 970, 484);\r\n                this.setTableLimits();\r\n                /////end play ground\r\n\r\n                //Pockets\r\n                this.addPocketsAndBlockers();\r\n                //end pockets\r\n\r\n                // decal icon\r\n                this.decalIcon = new Decal();\r\n                this.decalIcon.name = \"decalIcon\";\r\n                this.decalIcon.x = PockeySettings.MIDDLE_TABLE_POS.x;\r\n                this.decalIcon.y = PockeySettings.MIDDLE_TABLE_POS.y;\r\n                this.addChild(this.decalIcon);\r\n                //end decal icon\r\n\r\n                //ballsHolder\r\n                this.ballsHolder = new Container();\r\n                this.ballsHolder.name = \"ballsHolder\";\r\n                this.addChild(this.ballsHolder);\r\n                //end ballsHolder\r\n\r\n                //puck\r\n                this.puck = new Puck();\r\n                this.puck.ballAnimationHolder = this.ballAnimationHolder;\r\n                this.puck.createBallShadow();\r\n                this.puck.tintBall(PockeySettings.PUCK_COLOR);\r\n                this.puck.x = PockeySettings.MIDDLE_TABLE_POS.x;\r\n                this.puck.y = PockeySettings.MIDDLE_TABLE_POS.y;\r\n                this.puck.ballPosition = new Vector2(PockeySettings.MIDDLE_TABLE_POS.x, PockeySettings.MIDDLE_TABLE_POS.y);\r\n                this.puck.setWallLimits(this.leftLimit, this.rightLimit, this.upLimit, this.downLimit);\r\n                this.shadowsHolder.addChild(this.puck.ballShadow);\r\n                this.ballsHolder.addChild(this.puck);\r\n                this.balls.push(this.puck);\r\n                //end puck\r\n\r\n                //rightGoal\r\n                this.rightGoal = new PuckGoal(\"right\");\r\n                this.rightGoal.name = \"rightGoal\";\r\n                this.rightGoal.x = PockeySettings.MIDDLE_TABLE_POS.x + 487;\r\n                this.rightGoal.y = PockeySettings.MIDDLE_TABLE_POS.y - 116;\r\n                this.addChild(this.rightGoal);\r\n                //end rightGoal\r\n\r\n                //leftGoal\r\n                this.leftGoal = new PuckGoal(\"left\");\r\n\r\n                this.leftGoal.name = \"leftGoal\";\r\n                this.leftGoal.x = PockeySettings.MIDDLE_TABLE_POS.x - 483 - this.leftGoal.width;\r\n                this.leftGoal.y = PockeySettings.MIDDLE_TABLE_POS.y - 116;\r\n\r\n                this.addChild(this.leftGoal);\r\n                //end leftGoal\r\n\r\n                this.puck.puckGoals = [this.leftGoal, this.rightGoal];\r\n                this.puck.goalYPosition = this.leftGoal.y;\r\n                this.puck.goalHeight = this.leftGoal.height;\r\n\r\n\r\n                //goalies\r\n\r\n                this.leftGoalie = new Goalie(\"left\");\r\n                this.leftGoalie.rotation = Math.PI;\r\n                this.leftGoalie.setPosition(new Vector2(-468, 0));\r\n                this.addChild(this.leftGoalie);\r\n\r\n                this.leftGoalkeeperCircle = new Circle(-510, 0, 100);\r\n                this.goalkeepersCircles = [];\r\n                this.goalkeepersCircles.push(this.leftGoalkeeperCircle);\r\n\r\n                this.rightGoalie = new Goalie(\"right\");\r\n                this.rightGoalie.setPosition(new Vector2(468, 0));\r\n                this.addChild(this.rightGoalie);\r\n\r\n                this.rightGoalkeeperCircle = new Circle(510, 0, 100);\r\n                this.goalkeepersCircles.push(this.rightGoalkeeperCircle);\r\n\r\n                //end goalies\r\n\r\n\r\n                let graphics: Graphics = new Graphics();\r\n                graphics.name = \"graphics\";\r\n\r\n                //white ball\r\n                this.whiteBall = new WhiteBall();\r\n                this.whiteBall.ballAnimationHolder = this.ballAnimationHolder;\r\n\r\n                this.whiteBall.createBallShadow();\r\n                this.whiteBall.ballPosition = new Vector2(PockeySettings.MIDDLE_TABLE_LEFT_POS.x, PockeySettings.MIDDLE_TABLE_POS.y);\r\n                this.whiteBall.setWallLimits(this.leftLimit, this.rightLimit, this.upLimit, this.downLimit);\r\n                this.whiteBall.setPockets(this.pockets);\r\n                this.balls.push(this.whiteBall);\r\n                this.shadowsHolder.addChild(this.whiteBall.ballShadow);\r\n\r\n                //end white ball\r\n\r\n                //rightBalls\r\n                let ball: AbstractBall;\r\n                this.rightBallsArray = [];\r\n                this.leftBallsArray = [];\r\n                let angle: number;\r\n\r\n                _.forEach(_.range(PockeySettings.BALLS_NUMBER_FOR_EACH_PLAYER), (id: number) => {\r\n                    ball = new AbstractBall(\"right\", id.toString());\r\n                    ball.ballAnimationHolder = this.ballAnimationHolder;\r\n                    ball.createBallShadow();\r\n                    ball.setWallLimits(this.leftLimit, this.rightLimit, this.upLimit, this.downLimit);\r\n                    ball.setPockets(this.pockets);\r\n                    this.balls.push(ball);\r\n                    this.rightBallsArray.push(ball);\r\n                    angle = (id / (PockeySettings.BALLS_NUMBER_FOR_EACH_PLAYER / 2)) * Math.PI;\r\n\r\n                    ball.ballPosition = new Vector2(PockeySettings.MIDDLE_TABLE_POS.x + (this.ballsDistance * Math.cos(angle)),\r\n                        PockeySettings.MIDDLE_TABLE_POS.y + (this.ballsDistance * Math.sin(angle)));\r\n                    this.shadowsHolder.addChild(ball.ballShadow);\r\n                });\r\n                //end right balls\r\n\r\n                //left balls\r\n\r\n                _.forEach(_.range(PockeySettings.BALLS_NUMBER_FOR_EACH_PLAYER), (id: number) => {\r\n                    ball = new AbstractBall(\"left\", id.toString());\r\n                    ball.ballAnimationHolder = this.ballAnimationHolder;\r\n                    ball.createBallShadow();\r\n\r\n                    ball.setWallLimits(this.leftLimit, this.rightLimit, this.upLimit, this.downLimit);\r\n                    ball.setPockets(this.pockets);\r\n\r\n                    this.balls.push(ball);\r\n                    this.leftBallsArray.push(ball);\r\n                    angle = (id / (PockeySettings.BALLS_NUMBER_FOR_EACH_PLAYER / 2)) * Math.PI + Math.PI / PockeySettings.BALLS_NUMBER_FOR_EACH_PLAYER;\r\n\r\n                    ball.ballPosition = new Vector2(PockeySettings.MIDDLE_TABLE_POS.x + (this.ballsDistance * Math.cos(angle)),\r\n                        PockeySettings.MIDDLE_TABLE_POS.y + (this.ballsDistance * Math.sin(angle)));\r\n                    this.shadowsHolder.addChild(ball.ballShadow);\r\n\r\n                });\r\n                //end left balls\r\n\r\n                //poolStick\r\n                if (Settings.isMobile) {\r\n                    this.poolStick = new StickMobile();\r\n                    this.poolStick.x = -145;\r\n                    this.poolStick.y = 110;\r\n                }\r\n                else {\r\n                    this.poolStick = new Stick();\r\n                    this.poolStick.x = 844;\r\n                    this.poolStick.y = 650;\r\n                }\r\n\r\n                this.poolStick.initialPosition = new Point(this.poolStick.x, this.poolStick.y);\r\n                this.poolStick.startPosition = new Point(this.whiteBall.position.x, this.whiteBall.position.y);\r\n\r\n                this.poolStick.visible = false;\r\n                this.addChild(this.poolStick);\r\n                //end pool stick\r\n\r\n                this.createUpperCollisionPolygon();\r\n                this.createUpperCollisionShadowPolygon();\r\n                this.createBottomCollisionPolygon();\r\n                this.createBottomCollisionShadowPolygon();\r\n\r\n\r\n            }\r\n\r\n            private setTableLimits() {\r\n                this.leftLimit = this.playGround.x;\r\n                this.rightLimit = this.playGround.x + this.playGround.width;\r\n                this.upLimit = this.playGround.y;\r\n                this.downLimit = this.playGround.y + this.playGround.height;\r\n            }\r\n\r\n            private addPocketsAndBlockers() {\r\n                let blocker1: Rect = this.createBlocker(new Rectangle(-494, 0, 20, 380), 0, MaterialType.PUCK_ONLY_MATERIAL, 0xff9900, \"rect2a\");\r\n                let blocker2: Rect = this.createBlocker(new Rectangle(497, 0, 20, 380), 0, MaterialType.PUCK_ONLY_MATERIAL, 0xff9900, \"rect2b\");\r\n                let blocker3: Rect = this.createBlocker(new Rectangle(-492, -250, 20, 58), 0.7853981634, MaterialType.BALL_ONLY_MATERIAL, 0xffff00, \"rect4a\");\r\n                let blocker4: Rect = this.createBlocker(new Rectangle(492, 250, 20, 58), 0.7853981634, MaterialType.BALL_ONLY_MATERIAL, 0xffff00, \"rect4b\");\r\n                let blocker5: Rect = this.createBlocker(new Rectangle(492, -250, 20, 58), -0.7853981634, MaterialType.BALL_ONLY_MATERIAL, 0xffff00, \"rect5a\");\r\n                let blocker6: Rect = this.createBlocker(new Rectangle(-492, 250, 20, 58), -0.7853981634, MaterialType.BALL_ONLY_MATERIAL, 0xffff00, \"rect5b\");\r\n                let blocker7: Rect = this.createBlocker(new Rectangle(0, -270, 100, 20), 0, MaterialType.BALL_ONLY_MATERIAL, 0xffff00, \"rect7a\");\r\n                let blocker8: Rect = this.createBlocker(new Rectangle(0, 270, 100, 20), 0, MaterialType.BALL_ONLY_MATERIAL, 0xffff00, \"rect7b\");\r\n\r\n\r\n                this.pockets = [];\r\n                let pocket1: Pocket = new Pocket(-497, -254, 26, new Vector2(-438, -200));\r\n                this.pockets.push(pocket1);\r\n                pocket1.addPoints(this);\r\n\r\n                let pocket2: Pocket = new Pocket(0, -264, 26, new Vector2(0, -200));\r\n                this.pockets.push(pocket2);\r\n                pocket2.addPoints(this);\r\n\r\n                let pocket3: Pocket = new Pocket(496, -255, 26, new Vector2(438, -200));\r\n                this.pockets.push(pocket3);\r\n                pocket3.addPoints(this);\r\n\r\n                let pocket4: Pocket = new Pocket(497, 254, 26, new Vector2(438, 200));\r\n                this.pockets.push(pocket4);\r\n                pocket4.addPoints(this);\r\n\r\n                let pocket5: Pocket = new Pocket(0, 263, 26, new Vector2(0, 200));\r\n                this.pockets.push(pocket5);\r\n                pocket5.addPoints(this);\r\n\r\n                let pocket6: Pocket = new Pocket(-497, 253, 26, new Vector2(-438, 200));\r\n                this.pockets.push(pocket6);\r\n                pocket6.addPoints(this);\r\n\r\n            }\r\n\r\n            private createUpperCollisionPolygon(): void {\r\n                let vertices: number[][] = PockeySettings.MAIN_COLLISION_POLYGON.slice(0);\r\n                let upperCollisionPolygon: p2.Body = new p2.Body({mass: 0, angularForce: 0, angularVelocity: 0});\r\n                P2WorldManager.Instance().world.addBody(upperCollisionPolygon);\r\n                upperCollisionPolygon.fromPolygon(vertices);\r\n                _.forEach(upperCollisionPolygon.shapes, (shape: p2.Shape) => {\r\n                    shape.material = new p2.Material(MaterialType.LINE_MATERIAL);\r\n                });\r\n                // let salam = new Sprite();\r\n                /*_.forEach(PockeySettings.MAIN_COLLISION_POLYGON, (lineCoord: number[], id: number) => {\r\n                    // x1 = lineCoord[0];\r\n                    // y1 = lineCoord[1];\r\n                    // x2 = lineCoord[2];\r\n                    // y2 = lineCoord[3];\r\n                    if (id > 0) {\r\n                        let prevPointCounter = id - 1;\r\n                        let v1 = new Vector2(lineCoord[0], lineCoord[1]);\r\n                        let v2 = new Vector2(PockeySettings.MAIN_COLLISION_POLYGON[prevPointCounter][0], PockeySettings.MAIN_COLLISION_POLYGON[prevPointCounter][1]);\r\n                        this.createLine(v1, v2, MaterialType.LINE_MATERIAL);\r\n                    }\r\n                    // nextPointCounter = id + 1;\r\n                    // if (id + 1 > PockeySettings.MAIN_COLLISION_POLYGON.length - 1) {\r\n                    //\r\n                    // }\r\n                });*/\r\n            }\r\n\r\n            private createUpperCollisionShadowPolygon(): void {\r\n                let vertices: number[][] = PockeySettings.MAIN_COLLISION_SHADOW.slice(0);\r\n                let upperCollisionShadowPolygon: p2.Body = new p2.Body({mass: 0});\r\n                P2WorldManager.Instance().world.addBody(upperCollisionShadowPolygon);\r\n                upperCollisionShadowPolygon.fromPolygon(vertices);\r\n                _.forEach(upperCollisionShadowPolygon.shapes, (shape: p2.Shape) => {\r\n                    shape.material = new p2.Material(MaterialType.SHADOW_MATERIAL);\r\n                });\r\n                upperCollisionShadowPolygon.position [0] -= 1.5;\r\n                upperCollisionShadowPolygon.position [1] += 1.5;\r\n\r\n                /*_.forEach(PockeySettings.MAIN_COLLISION_SHADOW, (lineCoord: number[], id: number) => {\r\n                    // x1 = lineCoord[0];\r\n                    // y1 = lineCoord[1];\r\n                    // x2 = lineCoord[2];\r\n                    // y2 = lineCoord[3];\r\n                    if (id > 0) {\r\n                        let prevPointCounter = id - 1;\r\n                        let v1 = new Vector2(lineCoord[0], lineCoord[1]);\r\n                        let v2 = new Vector2(PockeySettings.MAIN_COLLISION_SHADOW[prevPointCounter][0], PockeySettings.MAIN_COLLISION_SHADOW[prevPointCounter][1]);\r\n                        this.createLine(v1, v2, MaterialType.LINE_MATERIAL);\r\n                    }\r\n                    // nextPointCounter = id + 1;\r\n                    // if (id + 1 > PockeySettings.MAIN_COLLISION_POLYGON.length - 1) {\r\n                    //\r\n                    // }\r\n                });*/\r\n            }\r\n\r\n            private createBottomCollisionPolygon(): void {\r\n                let vertices: number[][] = PockeySettings.MAIN_COLLISION_POLYGON.slice(0);\r\n                let bottomCollisionPolygon: p2.Body = new p2.Body({mass: 0});\r\n                P2WorldManager.Instance().world.addBody(bottomCollisionPolygon);\r\n                bottomCollisionPolygon.fromPolygon(vertices);\r\n                _.forEach(bottomCollisionPolygon.shapes, (shape: p2.Shape) => {\r\n                    shape.material = new p2.Material(MaterialType.LINE_MATERIAL);\r\n                });\r\n                bottomCollisionPolygon.angle = Math.PI;\r\n                bottomCollisionPolygon.position [1] += 513;\r\n                bottomCollisionPolygon.position [0] -= 11;\r\n\r\n\r\n                /*_.forEach(PockeySettings.MAIN_COLLISION_POLYGON, (lineCoord: number[], id: number) => {\r\n                    // x1 = lineCoord[0];\r\n                    // y1 = lineCoord[1];\r\n                    // x2 = lineCoord[2];\r\n                    // y2 = lineCoord[3];\r\n                    if (id > 0) {\r\n                        let prevPointCounter = id - 1;\r\n                        let v1 = new Vector2(lineCoord[0], lineCoord[1]);\r\n                        let v2 = new Vector2(PockeySettings.MAIN_COLLISION_POLYGON[prevPointCounter][0], PockeySettings.MAIN_COLLISION_POLYGON[prevPointCounter][1]);\r\n                        this.createLine(v1, v2, MaterialType.LINE_MATERIAL);\r\n                    }\r\n                    // nextPointCounter = id + 1;\r\n                    // if (id + 1 > PockeySettings.MAIN_COLLISION_POLYGON.length - 1) {\r\n                    //\r\n                    // }\r\n                });*/\r\n\r\n            }\r\n\r\n\r\n            private createBottomCollisionShadowPolygon(): void {\r\n                let vertices: number[][] = PockeySettings.MAIN_COLLISION_SHADOW.slice(0);\r\n                let bottomCollisionShadowPolygon: p2.Body = new p2.Body({mass: 0});\r\n                P2WorldManager.Instance().world.addBody(bottomCollisionShadowPolygon);\r\n                bottomCollisionShadowPolygon.fromPolygon(vertices);\r\n                _.forEach(bottomCollisionShadowPolygon.shapes, (shape: p2.Shape) => {\r\n                    shape.material = new p2.Material(MaterialType.SHADOW_MATERIAL);\r\n                });\r\n                bottomCollisionShadowPolygon.angle = Math.PI;\r\n                bottomCollisionShadowPolygon.position [1] += 399;\r\n                bottomCollisionShadowPolygon.position [0] -= 2;\r\n            }\r\n\r\n            private createLine(v1: Vector2, v2: Vector2, materialType: MaterialType, body: p2.Body = null): void {\r\n                let graphics: Graphics = new Graphics();\r\n                graphics.name = \"line\";\r\n                graphics.lineStyle(2, 0xffff00);\r\n                graphics.moveTo(v1.x, v1.y);\r\n                graphics.lineTo(v2.x, v2.y);\r\n                this.addChild(graphics);\r\n            }\r\n\r\n            public reset(): void {\r\n                // console.log(\"intra la reset in pooltable\");\r\n\r\n                this.balls = [];\r\n\r\n                this.whiteBall.reset();\r\n                this.whiteBall.ballPosition = this.whiteBall.initialPosition;\r\n                this.balls.push(this.whiteBall);\r\n\r\n                this.puck.reset();\r\n                this.puck.ballPosition = this.puck.initialPosition;//.x;\r\n                this.balls.push(this.puck);\r\n\r\n                _.forEach(this.leftBallsArray, (ball: AbstractBall) => {\r\n                    ball.reset();\r\n                    ball.ballPosition = ball.initialPosition;//.x;\r\n                    this.balls.push(ball);\r\n                });\r\n                _.forEach(this.rightBallsArray, (ball: AbstractBall) => {\r\n                    ball.reset();\r\n                    ball.ballPosition = ball.initialPosition;\r\n                    this.balls.push(ball);\r\n                });\r\n\r\n                // console.log(\"SE RESETEAZA POZITIILE!!!!!!!!!\");\r\n            }\r\n\r\n            private createBlocker(rectangle: Rectangle, rotationAngle: number, materialType: MaterialType, color = 0xffff00, id: string): Rect {\r\n\r\n                let rect = new Rect(rectangle, rotationAngle, materialType);\r\n\r\n                return rect;\r\n            }\r\n        }\r\n    }\r\n}","/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 1/28/2019\r\n */\r\n\r\nnamespace Pockey {\r\n    export module GameModule {\r\n        export interface GoalieState {\r\n            direction?: number,\r\n            position?: number,\r\n            speed?: number\r\n        }\r\n\r\n        export class GoalkeepersHolder {\r\n            private goalies: Goalie[];\r\n            private yLimit: number = 50;\r\n            public movingDirection: number = 1;//1 - for down, -1 for top\r\n            public movingSpeed: number = 2;\r\n            public moving: boolean = false;\r\n            public y: number = 0;\r\n\r\n            constructor(leftGoalie: Goalie, rightGoalie: Goalie) {\r\n                this.goalies = [];\r\n                this.goalies.push(leftGoalie);\r\n                this.goalies.push(rightGoalie);\r\n\r\n                /*P2WorldManager.Instance().world.on(\"postStep\", (evt) => {\r\n                    // this.update();\r\n                }, this);*/\r\n            }\r\n\r\n            public update(): void {\r\n                if (this.moving) {\r\n                    this.y += this.movingDirection * this.movingSpeed;\r\n\r\n                    this.updatePosition();\r\n\r\n                    if (this.y >= this.yLimit || this.y <= -this.yLimit) {\r\n                        this.movingDirection *= -1;\r\n                    }\r\n                }\r\n            }\r\n\r\n            private updatePosition(): void {\r\n                _.forEach(this.goalies, (goalie: Goalie) => {\r\n                    goalie.y = this.y;\r\n                    goalie.goalieBody.position[1] = this.y;\r\n                    goalie.goalieBodyShadow.position[1] = this.y;\r\n                });\r\n            }\r\n\r\n            public startMoving(): void {\r\n                this.moving = true;\r\n            }\r\n\r\n            public getState(): GoalieState {\r\n                let goalieState: GoalieState = {};\r\n                goalieState.direction = this.movingDirection;\r\n                goalieState.speed = this.movingSpeed;\r\n                goalieState.position = Math.round(this.y * 10000);\r\n                // goalieState.\r\n\r\n                return goalieState;\r\n            }\r\n\r\n            public setState(state: GoalieState, duration: number): void {\r\n                this.moving = false;\r\n\r\n                // let time: number = (duration + 1 / 60) / 2;\r\n                this.movingDirection = state.direction;\r\n                this.y = state.position / 10000;\r\n                this.updatePosition();\r\n                /*TweenMax.to(this, time, {\r\n                    y: state.position / 10000,\r\n                    ease:Linear.easeNone,\r\n                    onUpdate: this.updatePosition.bind(this)\r\n                });*/\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n","///<reference path=\"../../../../lib/types/lodash/index.d.ts\"/>\r\n///<reference path=\"../StateMachine/pockey-state-machine.ts\"/>\r\n///<reference path=\"../../../Framework/Utils/Vector2.ts\"/>\r\n///<reference path=\"../../../Framework/Utils/pixi-dashed-line.ts\"/>\r\n///<reference path=\"../../../Framework/Utils/mouse-handler.ts\"/>\r\n///<reference path=\"pool-table.ts\"/>\r\n///<reference path=\"../../../../lib/types/greensock/greensock.d.ts\"/>\r\n///<reference path=\"../StateMachine/pockey-state-texts.ts\"/>\r\n///<reference path=\"../../../../node_modules/babylonjs/babylon.d.ts\"/>\r\n///<reference path=\"goalkeepers-holder.ts\"/>\r\n\r\n\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 7/17/2018\r\n */\r\n\r\n\r\nnamespace Pockey {\r\n    export module GameModule {\r\n\r\n        import SignalsManager = Framework.Signals.SignalsManager;\r\n        import PockeySignalTypes = Pockey.SignalsModule.PockeySignalTypes;\r\n        import Vector2 = Framework.Utils.Vector2;\r\n        import Point = PIXI.Point;\r\n        import Graphics = PIXI.Graphics;\r\n        import PockeyStateMachine = Pockey.StateMachineModule.PockeyStateMachine;\r\n        import PockeyStates = Pockey.StateMachineModule.PockeyStates;\r\n        import MouseHandler = Framework.Utils.MouseHandler;\r\n        import PockeyConnectionSignals = Pockey.SignalsModule.PockeyConnectionSignals;\r\n        import Settings = Framework.Settings;\r\n        import PockeyStateTexts = Pockey.StateMachineModule.PockeyStateTexts;\r\n        import AbstractEntryPoint = Framework.AbstractEntryPoint;\r\n        import Vector3 = BABYLON.Vector3;\r\n        import Color4 = BABYLON.Color4;\r\n        import Circle = PIXI.Circle;\r\n\r\n        export interface StickState {\r\n            x?: number,\r\n            y?: number,\r\n            rotation?: number,\r\n            pivotX?: number,\r\n            visible?: boolean\r\n        }\r\n\r\n\r\n        export interface GraphicsState {\r\n\r\n            visible?: boolean,\r\n            onReposition?: boolean,\r\n            graphicsColor?: Color4,\r\n\r\n            whiteBallPositionOnReposition?: number[],//done\r\n            whiteBallPositionOnRayCast?: number[],//done\r\n            circleFollowerPosition?: number[],//done\r\n            lineBetweenCirclesCoordinates?: number[][],//done\r\n\r\n            otherBallDirectionPoints?: number[][],\r\n            otherBallArrowPositionAndRotation?: number[][],\r\n\r\n            whiteBallDirectionPoints?: number[][],\r\n            whiteBallDashedPoints?: number[][],\r\n            whiteBallArrowPositionAndRotation?: number[],\r\n            /*\r\n\r\n                        // whiteBallReflectionDirectionArrowVisibile?:boolean,\r\n                        whiteBallReflectionDirectionArrowPosition?: Vector2,\r\n                        whiteBallReflectionDirectionArrowRotation?: number,\r\n\r\n                        // whiteBallReflectionDirectionArrowVisibile?:boolean,\r\n                        otherBallReflectionDirectionArrowPosition?: Vector2,\r\n                        otherBallReflectionDirectionArrowRotation?: number,*/\r\n\r\n\r\n        }\r\n\r\n        export interface TimeState {\r\n            id?: number,\r\n            stickState?: StickState,\r\n            ballsStates?: BallState[],\r\n            whiteBallState?: BallState,\r\n            puckState?: BallState,\r\n            graphicsState?: GraphicsState,\r\n            // gameState?: GameState,\r\n            goalieState?: GoalieState,\r\n            time?: number\r\n        }\r\n\r\n        export interface PoolTableData {\r\n            timeStates?: TimeState[],\r\n            playerName?: string,\r\n            playerSocketID?: any,\r\n            playerScore?: number,\r\n            playerColor?: number,\r\n            opponentScore?: number,\r\n            opponentColor?: number,\r\n            poolstickPivotX?: number,\r\n            poolstickRotation?: number,\r\n            poolstickPositionX?: number,\r\n            poolstickPositionY?: number,\r\n            opponentTimerText?: string,\r\n            opponentTimerAnimate?: boolean,\r\n            opponentState?: PockeyStates,\r\n            opponentTimeFinished?: boolean,\r\n            // leftBalls?: BallData[],\r\n            // rightBalls?: BallData[],\r\n            // whiteBallData?: BallData,\r\n            // puckData?: BallData,\r\n            whiteBallPenalty?: boolean,\r\n            ballsHit?: number,\r\n            // balls?: BallData[],\r\n\r\n            followerVisible?: boolean,\r\n            followerX?: number,\r\n            followerY?: number,\r\n\r\n            ballPositionCircleVisible?: boolean,\r\n            ballPositionCircleX?: number,\r\n            ballPositionCircleY?: number,\r\n\r\n            ballPositionCircleOnRaycastVisible?: boolean,\r\n            ballPositionCircleOnRaycastX?: number,\r\n            ballPositionCircleOnRaycastY?: number,\r\n\r\n            lineBetweenCirclesVisible?: boolean,\r\n            lineBetweenCirclesPoints?: number[],\r\n            graphColor?: number,\r\n            leftGoalieY?: number,\r\n            rightGoalieY?: number,\r\n        }\r\n\r\n        export interface Limits {\r\n            left: number,\r\n            right: number,\r\n            up: number,\r\n            down: number\r\n        }\r\n\r\n        export class PoolTableManager {\r\n\r\n            // protected graph: Graphics;\r\n            protected startRayCastPoint: number[] = [0, 0];\r\n            protected endRayCastPoint: number[] = [0, 0];\r\n            protected raycastResult: p2.RaycastResult = new p2.RaycastResult();\r\n            protected rayClosest: p2.Ray = new p2.Ray({\r\n                mode: p2.Ray.CLOSEST,\r\n                skipBackfaces: true\r\n            });\r\n\r\n            protected shortestContactDistance: number;\r\n            protected newPos: Vector2;\r\n            protected repositionWhiteBallEnabled: boolean = false;\r\n            protected lastGoodRepositionPoint: Vector2;\r\n            protected contactEnabled: boolean = false;\r\n\r\n            private hitPoint: p2.vec2 = p2.vec2.create();\r\n            private ticker: PIXI.ticker.Ticker;\r\n            private arrowsDeviationLength: number = 0;\r\n            private whiteBallDirectionMesh: any;\r\n            private whiteBallPostCollisionDirectionMesh: any;\r\n            private whiteBallDashedMesh: any;\r\n            private otherBallPostCollisionDirectionMesh: any;\r\n            private framesCounter: number = 0;\r\n            private sendPoolDataFrameStep: number = 6;\r\n\r\n            protected ballPositionCircleMesh: any;\r\n            protected ballPositionCircleOnRaycastMesh: any;\r\n            protected raycastFollowerMesh: any;\r\n            protected totalSizeOfJson: number = 0;\r\n            protected totalSizeOfJsonStringified: number = 0;\r\n            protected opponentTimeUp: boolean = false;\r\n            protected repositionStarted: boolean = false;\r\n            protected isFirstShoot: boolean = true;\r\n            protected uiTextOnWatch: string = \"\";\r\n            protected lineBetweenCirclesPoints: number[][];\r\n            protected otherBallDirectionPoints: number[][];\r\n            protected whiteBallDirectionPoints: number[][];\r\n            protected whiteBallDashedPoints: number[][];\r\n            protected graphColor: Color4;\r\n            protected goaliesHolder: GoalkeepersHolder;\r\n            protected firstMessageReceivedOnWatch: boolean = false;\r\n            protected lastTime: number = 0;\r\n            protected sendTimes: number = 0;\r\n\r\n            public whiteBallReflectionArrowMesh: any;\r\n            public otherBallReflectionArrowMesh: any;\r\n            public poolTable: PoolTable;\r\n\r\n            ////////////////////\r\n            protected opponentTimeStates: TimeState[];\r\n            // protected updatesReceivedOnWatch: number = 0;\r\n            protected enableUpdateOnWatch: boolean = false;\r\n\r\n            protected _fpsThresholdInMs: number = 1000 / 60; // 60 fps in ms ~16.66666ms\r\n            protected _accumulator: number = 0;\r\n            ////////////////////\r\n\r\n            private t: number = 0.0;\r\n            private dt = 0.01;\r\n\r\n            // private _currentTime:number = hires_time_in_seconds();\r\n            private accumulator: number = 0.0;\r\n            private statesCreated: number = 0;\r\n            private statesReceived: number = 0;\r\n            private graphicsHidden: boolean = false;\r\n            // State previous;\r\n            // State current;\r\n\r\n            //@ts-ignore\r\n            // protected smoothie:Smoothie;\r\n\r\n            constructor() {\r\n                // console.log(\"%c Pool T Manager: intra la constructor \", \"background: red; color: white; font-weight:bold; \");\r\n                this.opponentTimeStates = [];\r\n\r\n                this.registerSignalsHandlers();\r\n                this.createMeshes();\r\n\r\n                this.poolTable = new PoolTable();\r\n                this.poolTable.visible = false;\r\n\r\n                /* //@ts-ignore\r\n                 this.smoothie = new Smoothie({\r\n                     engine: PIXI,\r\n                     renderer: AbstractEntryPoint.renderer,\r\n                     root: AbstractEntryPoint.stage,\r\n                     fps: 60,\r\n                     interpolate:true,\r\n                     update: this.update.bind(this)\r\n                 });*/\r\n                // this.poolTable.x = 650;\r\n                // this.poolTable.y = 380;\r\n\r\n                this.ticker = PIXI.ticker.shared;\r\n\r\n                if (this.poolTable.poolStick)\r\n                    this.ticker.add(this.poolTable.poolStick.update, this.poolTable.poolStick);\r\n\r\n                this.goaliesHolder = new GoalkeepersHolder(this.poolTable.leftGoalie, this.poolTable.rightGoalie);\r\n                // if (this.poolTable.leftGoalie)\r\n                this.ticker.add(this.goaliesHolder.update, this.goaliesHolder);\r\n\r\n                // if (this.poolTable.rightGoalie)\r\n                //     this.ticker.add(this.poolTable.rightGoalie.update, this.poolTable.rightGoalie);\r\n\r\n                _.forEach(this.poolTable.balls, (ball: AbstractBall) => {\r\n                    this.ticker.add(ball.update, ball);\r\n                    ball.addShadowBody();\r\n                });\r\n\r\n                // this.smoothie.start();\r\n                this.ticker.add(this.update, this);\r\n\r\n                P2WorldManager.Instance().world.on(\"beginContact\", (evt) => {\r\n                    if (this.contactEnabled) {\r\n                        if (!_.isNull(evt.shapeA.radius) && !_.isUndefined(evt.shapeA.radius) &&\r\n                            !_.isNull(evt.shapeB.radius) && !_.isUndefined(evt.shapeB.radius)) {\r\n                            // console.log(\"penalty!!!!!\");\r\n                            this.contactEnabled = false;\r\n                            let isOwnBall: boolean = false;\r\n                            if (evt.bodyA == this.poolTable.whiteBall.p2Body) {\r\n                                isOwnBall = this.checkIfOwnBall(evt.bodyB);\r\n\r\n                                /* if (this.poolTable.whiteBall.x != this.expectedCollisionPoint.x || this.poolTable.whiteBall.y != this.expectedCollisionPoint.y) {\r\n                                     this.poolTable.whiteBall.x = this.expectedCollisionPoint.x;\r\n                                     this.poolTable.whiteBall.y = this.expectedCollisionPoint.y;\r\n                                     console.log(\"lock\");\r\n                                 }\r\n                                 // if(this.poolTable.whiteBall.x !)\r\n                                 console.log(\"mumu1 ALBA LA CONTACT!!!!: \" + this.poolTable.whiteBall.x, this.poolTable.whiteBall.y);\r\n                                 console.log(\"mumu1 S-A TRAS!!!!: \" + this.expectedCollisionPoint.x, this.expectedCollisionPoint.y);*/\r\n                            }\r\n                            else if (evt.bodyB == this.poolTable.whiteBall.p2Body) {\r\n                                isOwnBall = this.checkIfOwnBall(evt.bodyA);\r\n\r\n                                /*if (this.poolTable.whiteBall.x != this.expectedCollisionPoint.x || this.poolTable.whiteBall.y != this.expectedCollisionPoint.y) {\r\n                                    this.poolTable.whiteBall.x = this.expectedCollisionPoint.x;\r\n                                    this.poolTable.whiteBall.y = this.expectedCollisionPoint.y;\r\n                                }\r\n\r\n                                console.log(\"mumu2 ALBA LA CONTACT!!!!: \" + this.poolTable.whiteBall.x, this.poolTable.whiteBall.y);\r\n                                console.log(\"mumu2 S-A TRAS!!!!: \" + this.expectedCollisionPoint.x, this.expectedCollisionPoint.y);*/\r\n                            }\r\n\r\n                            if (isOwnBall) {\r\n                                SignalsManager.DispatchSignal(PockeySignalTypes.FIRST_BALL_FAULT);\r\n                                SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_UI_TEXT, [PockeyStateTexts.whiteBallFault]);\r\n                            }\r\n                        }\r\n                    }\r\n                }, this);\r\n\r\n                this.lineBetweenCirclesPoints = [];\r\n                this.otherBallDirectionPoints = [];\r\n                this.whiteBallDirectionPoints = [];\r\n                this.whiteBallDashedPoints = [];\r\n                this.graphColor = new Color4(1, 1, 1, 1);\r\n                this.hideBallRayGraphics();\r\n            }\r\n\r\n            private createMeshes(): void {\r\n                this.ballPositionCircleMesh = this.create2Dpoly({radius: PockeySettings.BALL_RADIUS - 2}, AbstractEntryPoint.scene);\r\n                this.ballPositionCircleMesh.enableEdgesRendering();\r\n                this.ballPositionCircleMesh.edgesWidth = 10;\r\n                this.ballPositionCircleMesh.edgesColor = new BABYLON.Color4(1, 1, 1, 1);\r\n                this.ballPositionCircleMesh.position.z = -PockeySettings.BALL_RADIUS * 2;\r\n\r\n                this.ballPositionCircleOnRaycastMesh = this.create2Dpoly({radius: PockeySettings.BALL_RADIUS + 6}, AbstractEntryPoint.scene);\r\n                this.ballPositionCircleOnRaycastMesh.enableEdgesRendering();\r\n                this.ballPositionCircleOnRaycastMesh.edgesWidth = 10;\r\n                this.ballPositionCircleOnRaycastMesh.position.z = -PockeySettings.BALL_RADIUS * 2;\r\n\r\n                this.raycastFollowerMesh = this.create2Dpoly({radius: PockeySettings.BALL_RADIUS}, AbstractEntryPoint.scene);\r\n                this.raycastFollowerMesh.enableEdgesRendering();\r\n                this.raycastFollowerMesh.edgesWidth = 10;\r\n                this.raycastFollowerMesh.position.z = -PockeySettings.BALL_RADIUS * 2;\r\n\r\n                let arrowsPoints: Vector3[] = [\r\n                    new BABYLON.Vector3(0, -10, 0),\r\n                    new BABYLON.Vector3(0, 0, 0),\r\n                    new BABYLON.Vector3(-1.7, 0, 0),\r\n                    new BABYLON.Vector3(10.5, 0, 0)];\r\n\r\n                this.whiteBallReflectionArrowMesh = BABYLON.Mesh.CreateLines(\"whiteBallReflectionArrowMesh\", arrowsPoints, AbstractEntryPoint.scene);\r\n                this.whiteBallReflectionArrowMesh.setPivotPoint(new BABYLON.Vector3(0, 0, 0));\r\n                this.whiteBallReflectionArrowMesh.enableEdgesRendering();\r\n                this.whiteBallReflectionArrowMesh.edgesWidth = 9;\r\n                this.whiteBallReflectionArrowMesh.edgesColor = new BABYLON.Color4(1, 1, 1, 1);\r\n                this.whiteBallReflectionArrowMesh.position.z = -PockeySettings.BALL_RADIUS * 2;\r\n\r\n                this.otherBallReflectionArrowMesh = BABYLON.Mesh.CreateLines(\"otherBallReflectionArrowMesh\", arrowsPoints, AbstractEntryPoint.scene);\r\n                this.otherBallReflectionArrowMesh.setPivotPoint(new BABYLON.Vector3(0, 0, 0));\r\n                this.otherBallReflectionArrowMesh.enableEdgesRendering();\r\n                this.otherBallReflectionArrowMesh.edgesWidth = 9;\r\n                this.otherBallReflectionArrowMesh.edgesColor = new BABYLON.Color4(1, 1, 1, 1);\r\n                this.otherBallReflectionArrowMesh.position.z = -PockeySettings.BALL_RADIUS * 2;\r\n\r\n                this.whiteBallDirectionMesh = BABYLON.MeshBuilder.CreateLines(\"whiteBallDirectionMesh\", {\r\n                    points: [Vector3.Zero(), Vector3.Zero()],\r\n                    updatable: true\r\n                }, AbstractEntryPoint.scene);\r\n                this.whiteBallDirectionMesh.z = -PockeySettings.BALL_RADIUS * 2;\r\n\r\n\r\n                this.otherBallPostCollisionDirectionMesh = BABYLON.MeshBuilder.CreateLines(\"otherBallPostCollisionDirectionMesh\", {\r\n                    points: [Vector3.Zero(), Vector3.Zero()],\r\n                    updatable: true\r\n                }, AbstractEntryPoint.scene);\r\n                this.otherBallPostCollisionDirectionMesh.z = -PockeySettings.BALL_RADIUS * 2;\r\n\r\n                this.whiteBallPostCollisionDirectionMesh = BABYLON.MeshBuilder.CreateLines(\"whiteBallPostCollisionDirectionMesh\", {\r\n                    points: [Vector3.Zero(), Vector3.Zero()],\r\n                    updatable: true\r\n                }, AbstractEntryPoint.scene);\r\n                this.whiteBallPostCollisionDirectionMesh.z = -PockeySettings.BALL_RADIUS * 2;\r\n\r\n                // this.whiteBallDashedMesh = BABYLON.Mesh.CreateDashedLines(\"whiteBallDashedMesh\", this.whiteBallDashedPoints, 3, 3, 4, AbstractEntryPoint.scene, true);\r\n                // this.whiteBallDashedMesh.enableEdgesRendering();\r\n                // this.whiteBallDashedMesh.edgesWidth = 10;\r\n                // this.whiteBallDashedMesh.edgesColor = hexDefaultColor;\r\n\r\n\r\n                let myPoints = [\r\n                    new BABYLON.Vector3(0, 100, 10),\r\n                    new BABYLON.Vector3(100, 0, 10)\r\n                ];\r\n                // this.whiteBallDashedMesh = BABYLON.MeshBuilder.CreateDashedLines(\"whiteBallDashedMesh\", {points: myPoints}, AbstractEntryPoint.scene);\r\n                // this.whiteBallDashedMesh = BABYLON.Mesh.CreateDashedLines(\"whiteBallDashedMesh\", myPoints, 3, 3, 4, AbstractEntryPoint.scene, true);dash/gap/dashnb\r\n                this.whiteBallDashedMesh = BABYLON.MeshBuilder.CreateDashedLines(\"whiteBallDashedMesh\", {\r\n                    points: myPoints,\r\n                    dashSize: 3,\r\n                    gapSize: 3,\r\n                    dashNb: 4,\r\n                    updatable: true\r\n                }, AbstractEntryPoint.scene);\r\n\r\n                this.whiteBallDashedMesh.position.z = -PockeySettings.BALL_RADIUS * 2;\r\n                //Create dashedlines with updatable parameter set to true for later changes\r\n                // var lines = BABYLON.MeshBuilder.CreateDashedLines(\"lines\", {points: myPoints, updatable: true}, scene);\r\n\r\n            }\r\n\r\n            private registerSignalsHandlers(): void {\r\n\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.SHOW_POOLTABLE, this.onShowPoolTable.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.RESET_POOLTABLE, this.onResetPoolTable.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.RESET_STICK_POWER, this.onResetStickPower.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.HIDE_BALL_RAY_GRAPHICS, this.hideBallRayGraphics.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.REACTIVATE_STICK, this.reactivateStick.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.SHOOT_BALL, this.onShoot.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.APPLY_POOLTABLE_STATE, this.applyTimeState.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.CHANGE_OPPONENT_COLOR, this.onChangeOpponentColor.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.CHANGE_PLAYER_COLOR, this.onChangePlayerColor.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.SET_SIDES_TYPE, this.onSetPuckGoalsSides.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.UPDATE_UI_TEXT_ON_WATCH, this.onUpdateUITextOnWatch.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.CREATE_POOLTABLE_STATE, this.onCreatePoolTableTimeState.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.CHANGE_WHITE_BALL_STATUS, this.changeWhiteBallStatus.bind(this));\r\n\r\n                /* SignalsManager.AddSignalCallback(PockeySignalTypes.ANIMATE_PUCK_GOAL, this.onAnimatePuckGoal.bind(this));\r\n                 SignalsManager.AddSignalCallback(PockeySignalTypes.ANIMATE_PUCK_GOAL_STOP, this.onStopAnimatePuckGoal.bind(this));*/\r\n\r\n                // SignalsManager.AddSignalCallback(PockeySignalTypes.BALL_IN_POCKET, this.ballInPocketHandler.bind(this));\r\n                // SignalsManager.AddSignalCallback(PockeySignalTypes.REPOSITION_WHITE_BALL, this.onRepositionWhiteBall.bind(this));\r\n                // SignalsManager.AddSignalCallback(SignalsType.FIRST_ROUND, this.onStarted.bind(this));\r\n                // SignalsManager.AddSignalCallback(PockeySignalTypes.REPOSITION_STICK, this.repositionStick.bind(this));\r\n            }\r\n\r\n            protected onCreatePoolTableTimeState(params: any): void {\r\n                let timeState: TimeState = {};\r\n\r\n                timeState.stickState = this.poolTable.poolStick.getStickState();\r\n                timeState.whiteBallState = this.poolTable.whiteBall.getState();\r\n\r\n                timeState.ballsStates = [];\r\n\r\n                _.forEach(this.poolTable.balls, (ball: AbstractBall) => {\r\n                    timeState.ballsStates.push(ball.getState());\r\n                });\r\n                timeState.goalieState = this.goaliesHolder.getState();\r\n                timeState.graphicsState = this.createGraphicsState();\r\n\r\n\r\n                (params[0] as Function)(timeState);\r\n            }\r\n\r\n            protected createGraphicsState(): GraphicsState {\r\n                let state: GraphicsState = {};\r\n                state.onReposition = false;\r\n\r\n                state.visible = !this.graphicsHidden;\r\n\r\n                if (!state.visible) {\r\n                    return state;\r\n                }\r\n\r\n                if (PockeyStateMachine.Instance().fsm.currentState == PockeyStates.onRepositionWhiteBall) {\r\n                    state.onReposition = true;\r\n                    state.whiteBallPositionOnReposition = [this.ballPositionCircleMesh.position.x, this.ballPositionCircleMesh.position.y];\r\n                    return state;\r\n                }\r\n\r\n                state.graphicsColor = this.graphColor;\r\n\r\n                state.whiteBallPositionOnRayCast = [this.ballPositionCircleOnRaycastMesh.position.x, this.ballPositionCircleOnRaycastMesh.position.y];\r\n                state.circleFollowerPosition = [this.raycastFollowerMesh.position.x, this.raycastFollowerMesh.position.y];\r\n                state.lineBetweenCirclesCoordinates = this.lineBetweenCirclesPoints;\r\n                // this.lineBetweenCirclesPoints = [];\r\n                if (this.otherBallDirectionPoints.length == 0) {\r\n                    state.otherBallDirectionPoints = [];\r\n                }\r\n                else {\r\n                    state.otherBallDirectionPoints = this.otherBallDirectionPoints;\r\n                    state.otherBallArrowPositionAndRotation = [this.otherBallReflectionArrowMesh.position.x, this.otherBallReflectionArrowMesh.position.y, this.otherBallReflectionArrowMesh.rotation.z];\r\n                    state.whiteBallArrowPositionAndRotation = [this.whiteBallReflectionArrowMesh.position.x, this.whiteBallReflectionArrowMesh.position.y, this.whiteBallReflectionArrowMesh.rotation.z];\r\n                }\r\n\r\n                if (this.whiteBallDirectionPoints.length == 0) {\r\n                    state.whiteBallDirectionPoints = [];\r\n                    // console.log(\"points length: \" + this.whiteBallDirectionPoints.length);\r\n                }\r\n                else {\r\n                    state.whiteBallDirectionPoints = this.whiteBallDirectionPoints;\r\n                    // console.log(\"points length: \" + this.whiteBallDirectionPoints.length);\r\n\r\n                    state.whiteBallDashedPoints = this.whiteBallDashedPoints;\r\n                    state.whiteBallArrowPositionAndRotation = [this.whiteBallReflectionArrowMesh.position.x, this.whiteBallReflectionArrowMesh.position.y, this.whiteBallReflectionArrowMesh.rotation.z];\r\n                }\r\n\r\n                return state;\r\n            }\r\n\r\n            protected onAnimatePuckGoal(): void {\r\n                if (this.poolTable.leftGoal.type == GameManager.Instance().currentPlayer.type) {\r\n                    this.poolTable.rightGoal.animate();\r\n                }\r\n                else {\r\n                    this.poolTable.leftGoal.animate();\r\n                }\r\n            }\r\n\r\n            protected onResetStickPower(): void {\r\n                this.poolTable.poolStick.power = 0;\r\n                this.poolTable.poolStick.reset();\r\n            }\r\n\r\n            protected onStopAnimatePuckGoal(): void {\r\n\r\n                this.poolTable.leftGoal.stopAnimation();\r\n                this.poolTable.rightGoal.stopAnimation();\r\n            }\r\n\r\n            protected onUpdateUITextOnWatch(params: any[]): void {\r\n                this.uiTextOnWatch = params[\"0\"];\r\n            }\r\n\r\n            protected onSetPuckGoalsSides(params: any[]): void {\r\n                this.poolTable.leftGoal.type = params[0];\r\n                this.poolTable.leftGoalie.type = params[0];\r\n                // console.log(\"leftGoal.type: \" + this.poolTable.leftGoal.type);\r\n                this.poolTable.rightGoal.type = params[1];\r\n                this.poolTable.rightGoalie.type = params[1];\r\n                // console.log(\"rightGoal.type: \" + this.poolTable.rightGoal.type);\r\n\r\n                _.forEach(this.poolTable.leftBallsArray, (ball: AbstractBall) => {\r\n                    // if (ball.side == \"left\") {\r\n                    ball.ballType = params[0];\r\n                    // }\r\n                    // else if (ball.side == \"right\") {\r\n                    //     ball.ballType = params[1];\r\n                    // }\r\n                });\r\n\r\n                _.forEach(this.poolTable.rightBallsArray, (ball: AbstractBall) => {\r\n                    // if (ball.side == \"left\") {\r\n                    ball.ballType = params[1];\r\n                    // }\r\n                    // else if (ball.side == \"right\") {\r\n                    //     ball.ballType = params[1];\r\n                    // }\r\n                });\r\n            }\r\n\r\n            protected onChangeOpponentColor(color: number): void {\r\n                if (this.poolTable.leftGoal.type == BallType.Opponent) {\r\n                    this.poolTable.leftGoal.tint = color;\r\n                }\r\n                else {\r\n                    this.poolTable.rightGoal.tint = color;\r\n                }\r\n\r\n                if (this.poolTable.leftGoalie.type == BallType.Opponent) {\r\n                    this.poolTable.leftGoalie.goalieMiddleLayer.tint = color;\r\n                }\r\n                else {\r\n                    this.poolTable.rightGoalie.goalieMiddleLayer.tint = color;\r\n                }\r\n\r\n                _.forEach(this.poolTable.balls, (ball: AbstractBall) => {\r\n                    if (ball.ballType == BallType.Opponent) {\r\n                        ball.tintBall(color);\r\n                    }\r\n                });\r\n                // this.poolTable.rightGoalTop.tint = color;\r\n            }\r\n\r\n            protected onChangePlayerColor(color: string): void {\r\n                if (this.poolTable.leftGoal.type == BallType.Player) {\r\n                    this.poolTable.leftGoal.tint = +color;\r\n                }\r\n                else {\r\n                    this.poolTable.rightGoal.tint = +color;\r\n                }\r\n\r\n                if (this.poolTable.leftGoalie.type == BallType.Player) {\r\n                    this.poolTable.leftGoalie.goalieMiddleLayer.tint = +color;\r\n                }\r\n                else {\r\n                    this.poolTable.rightGoalie.goalieMiddleLayer.tint = +color;\r\n                }\r\n                _.forEach(this.poolTable.balls, (ball: AbstractBall) => {\r\n                    if (ball.ballType == BallType.Player) {\r\n                        ball.tintBall(+color);\r\n                    }\r\n                });\r\n                // this.poolTable.rightGoalTop.tint = color;\r\n            }\r\n\r\n            protected onShowPoolTable(): void {\r\n                this.poolTable.visible = true;\r\n            }\r\n\r\n            protected onResetPoolTable(): void {\r\n                console.log(\"intra la p\");\r\n                // this.poolTable.visible = true;\r\n                this.isFirstShoot = true;\r\n                this.poolTable.reset();\r\n            }\r\n\r\n            protected onShoot(): void {\r\n                // console.log(\"%c Pool T Manager: intra la onShoot \", \"background: red; color: white; font-weight:bold; \");\r\n\r\n                this.onStopAnimatePuckGoal();\r\n\r\n                this.contactEnabled = true;\r\n                // this.ballWasShot = true;\r\n                // this.ticker.add(this.update, this);\r\n                let rotation = this.poolTable.poolStick.rotation;\r\n                // let power = this.poolTable.poolStick.power;\r\n\r\n                _.forEach(this.poolTable.balls, (ball: AbstractBall) => {\r\n                    if (!ball.canBeRemoved || ball.ballType == BallType.White) {\r\n                        P2WorldManager.Instance().world.removeBody(ball.p2BodyShadow);\r\n                        ball.p2Body.wakeUp();\r\n                    }\r\n\r\n                });\r\n                this.poolTable.whiteBall.onShoot(rotation, this.poolTable.poolStick.power);\r\n                this.poolTable.whiteBall.isOnRearrange = false;\r\n                this.poolTable.poolStick.power = 0;\r\n\r\n                this.isFirstShoot = false;\r\n\r\n                /*this.poolTable.poolStick.hide();\r\n                this.hideBallRayGraphics();*/\r\n                // this.shootingEnded = true;\r\n                // if (this.shootingEnded) {\r\n                // console.log(\"aici la 3\");\r\n\r\n                // this.shootingEnded = false;\r\n                // this.ballWasShot = true;\r\n                // return;\r\n                // this.repositionStick();\r\n                // }\r\n\r\n\r\n                // console.log(\"mumu !!!!: \" + this.expectedCollisionPoint.x, this.expectedCollisionPoint.y);\r\n            }\r\n\r\n            protected onRepositionWhiteBall(): void {\r\n\r\n                if (!this.poolTable.whiteBall.isOnReposition) {\r\n                    // this.poolTable.whiteBall.hid\r\n                    console.log(\"intra aicisha\");\r\n                    this.poolTable.whiteBall.isOnReposition = true;\r\n                }\r\n                else {\r\n                    console.log(\"intra aicisha pe dracu\");\r\n                }\r\n\r\n                this.graphicsHidden = false;\r\n                if (!this.goaliesHolder.moving)\r\n                    this.goaliesHolder.moving = true;\r\n                // console.log(\"%c Pool T Manager: intra la onRepositionWhiteBall\", \"background: red; color: white; font-weight:bold; \");\r\n\r\n                /*       console.log(\"ball repos started\");\r\n\r\n                       this.poolTable.whiteBallReflectionArrow.visible = false;\r\n                       this.poolTable.otherBallReflectionArrow.visible = false;\r\n                       this.poolTable.ballPositionCircleOnRaycast.visible = false;\r\n                       this.poolTable.ballPositionCircle.visible = false;\r\n                       // let localPoint = this.poolTable.toLocal(new Point(MouseHandler.Instance().position.x, MouseHandler.Instance().position.y));\r\n                       // this.poolTable.ballPositionCircle.x = localPoint.x;\r\n                       // this.poolTable.ballPositionCircle.y = localPoint.y;\r\n                       this.lastGoodRepositionPoint = new Vector2();\r\n                       this.repositionWhiteBallEnabled = true;*/\r\n                if (this.ballPositionCircleMesh) {\r\n                    this.ballPositionCircleMesh.setEnabled(true);\r\n                }\r\n\r\n                if (this.opponentTimeUp) {\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_UI_TEXT, [PockeyStateTexts.onOpponentsTimeUp]);\r\n                }\r\n                else\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_UI_TEXT, [PockeyStateTexts.opponentFault]);\r\n\r\n                let localPoint = this.poolTable.toLocal(new Point(MouseHandler.Instance().position.x, MouseHandler.Instance().position.y));\r\n\r\n                if (_.isNull(this.lastGoodRepositionPoint) || _.isUndefined(this.lastGoodRepositionPoint)) {\r\n                    this.lastGoodRepositionPoint = new Vector2();\r\n                }\r\n\r\n                // if (this.graph) {\r\n                //     if (this.graph.parent)\r\n                //         this.graph.parent.removeChild(this.graph);\r\n                //     this.graph.clear();\r\n                //     this.graph = null;\r\n                // }\r\n\r\n                // if (localPoint.x < this.poolTable.rightLimit &&\r\n                //     localPoint.x > this.poolTable.leftLimit &&\r\n                //     localPoint.y < this.poolTable.downLimit &&\r\n                //     localPoint.y > this.poolTable.upLimit) {\r\n                //todo vezi ca mouse-ul sa fie in limita tablei de joc\r\n                //vezi ca daca-i white ball penalty si e la margine, poti sa pui acolo follower-ul. nu-i ok boss\r\n\r\n                /////////////////////////aicisha!!!!!!!!!!!!\r\n\r\n                /*let ballPositionCirclePosition: Vector2 = new Vector2(localPoint.x, localPoint.y);\r\n                if (ballPositionCirclePosition.x + PockeySettings.BALL_RADIUS > this.poolTable.rightLimit)\r\n                    ballPositionCirclePosition.x = this.poolTable.rightLimit - PockeySettings.BALL_RADIUS;\r\n                if (ballPositionCirclePosition.x - PockeySettings.BALL_RADIUS < this.poolTable.leftLimit)\r\n                    ballPositionCirclePosition.x = this.poolTable.leftLimit + PockeySettings.BALL_RADIUS;\r\n\r\n                if (ballPositionCirclePosition.y + PockeySettings.BALL_RADIUS > this.poolTable.downLimit)\r\n                    ballPositionCirclePosition.y = this.poolTable.downLimit - PockeySettings.BALL_RADIUS;\r\n                if (ballPositionCirclePosition.y - PockeySettings.BALL_RADIUS < this.poolTable.upLimit)\r\n                    ballPositionCirclePosition.y = this.poolTable.upLimit + PockeySettings.BALL_RADIUS;\r\n\r\n                this.lastGoodRepositionPoint.x = ballPositionCirclePosition.x;\r\n                this.lastGoodRepositionPoint.y = ballPositionCirclePosition.y;\r\n\r\n                let ballPosition: Vector2;// = new Vector2(this.poolTable.ballPositionCircle.x,this.poolTable.ballPositionCircle.y)\r\n\r\n                _.forEach(this.poolTable.goalkeepersCircles, (circle: Circle) => {\r\n                    ballPosition = new Vector2(circle.x, circle.y);\r\n                    if (ballPositionCirclePosition.distanceTo(ballPosition) < circle.radius + PockeySettings.BALL_RADIUS) {\r\n                        let opposite: number = ballPositionCirclePosition.y - ballPosition.y;\r\n                        let adjacent: number = ballPositionCirclePosition.x - ballPosition.x;\r\n                        let rotAngle: number = Math.atan2(opposite, adjacent);\r\n\r\n                        ballPositionCirclePosition.x = ballPosition.x + (PockeySettings.BALL_RADIUS + circle.radius) * Math.cos(rotAngle);\r\n                        ballPositionCirclePosition.y = ballPosition.y + (PockeySettings.BALL_RADIUS + circle.radius) * Math.sin(rotAngle);\r\n                        this.lastGoodRepositionPoint.x = ballPositionCirclePosition.x;\r\n                        this.lastGoodRepositionPoint.y = ballPositionCirclePosition.y;\r\n                    }\r\n\r\n                    // this.ballPositionCircleMesh.position.x = ballPositionCirclePosition.x;\r\n                    // this.ballPositionCircleMesh.position.y = -ballPositionCirclePosition.y - PockeySettings.BABYLON_Y_OFFSET;\r\n\r\n                });\r\n\r\n                _.forEach(this.poolTable.balls, (ball: AbstractBall) => {\r\n                    ballPosition = new Vector2(ball.x, ball.y);\r\n                    if (ballPositionCirclePosition.distanceTo(ballPosition) < ball.radius + PockeySettings.BALL_RADIUS) {\r\n                        let opposite: number = ballPositionCirclePosition.y - ballPosition.y;\r\n                        let adjacent: number = ballPositionCirclePosition.x - ballPosition.x;\r\n                        let rotAngle: number = Math.atan2(opposite, adjacent);\r\n\r\n                        ballPositionCirclePosition.x = ballPosition.x + (PockeySettings.BALL_RADIUS + ball.radius) * Math.cos(rotAngle);\r\n                        ballPositionCirclePosition.y = ballPosition.y + (PockeySettings.BALL_RADIUS + ball.radius) * Math.sin(rotAngle);\r\n                        let isInteresectingWithOthers: boolean = false;\r\n                        _.forEach(this.poolTable.balls, (ball2: AbstractBall) => {\r\n                            if (ball2 != ball) {\r\n                                let ball2Position: Vector2 = new Vector2(ball2.x, ball2.y);\r\n                                if (ball2Position.distanceTo(ballPositionCirclePosition) < PockeySettings.BALL_RADIUS + ball2.radius) {\r\n                                    isInteresectingWithOthers = true;\r\n                                    return;\r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        _.forEach(this.poolTable.goalkeepersCircles, (ball2: Circle) => {\r\n                            let ball2Position: Vector2 = new Vector2(ball2.x, ball2.y);\r\n                            if (ball2Position.distanceTo(ballPositionCirclePosition) < PockeySettings.BALL_RADIUS + ball2.radius) {\r\n                                isInteresectingWithOthers = true;\r\n                                return;\r\n                            }\r\n                        });\r\n\r\n                        if (isInteresectingWithOthers) {\r\n                            ballPositionCirclePosition.x = this.lastGoodRepositionPoint.x;\r\n                            ballPositionCirclePosition.y = this.lastGoodRepositionPoint.y;\r\n                        }\r\n                        else {\r\n                            this.lastGoodRepositionPoint.x = ballPositionCirclePosition.x;\r\n                            this.lastGoodRepositionPoint.y = ballPositionCirclePosition.y;\r\n                        }\r\n                    }\r\n\r\n                    // this.poolTable.ballPositionCircle.x = ballPositionCirclePosition.x;\r\n                    // this.poolTable.ballPositionCircle.y = ballPositionCirclePosition.y;\r\n\r\n                    /!* TweenMax.to(this.poolTable.ballPositionCircle, 0.1, {\r\n                         x: ballPositionCirclePosition.x,\r\n                         y: ballPositionCirclePosition.y\r\n                     });*!/\r\n                    // this.poolTable.ballPositionCircle.visible = true;\r\n\r\n                });\r\n                this.ballPositionCircleMesh.position.x = ballPositionCirclePosition.x;\r\n                this.ballPositionCircleMesh.position.y = -ballPositionCirclePosition.y - PockeySettings.BABYLON_Y_OFFSET;*/\r\n\r\n                /////////////////////////aicisha!!!!!!!!!!!!\r\n\r\n                let ballPositionCirclePosition: Vector2 = new Vector2(localPoint.x, localPoint.y);\r\n                let isInteresectingWithOthers: boolean = false;\r\n\r\n                if (ballPositionCirclePosition.x + PockeySettings.BALL_RADIUS > this.poolTable.rightLimit)\r\n                    ballPositionCirclePosition.x = this.poolTable.rightLimit - PockeySettings.BALL_RADIUS;\r\n                if (ballPositionCirclePosition.x - PockeySettings.BALL_RADIUS < this.poolTable.leftLimit)\r\n                    ballPositionCirclePosition.x = this.poolTable.leftLimit + PockeySettings.BALL_RADIUS;\r\n\r\n                if (ballPositionCirclePosition.y + PockeySettings.BALL_RADIUS > this.poolTable.downLimit)\r\n                    ballPositionCirclePosition.y = this.poolTable.downLimit - PockeySettings.BALL_RADIUS;\r\n                if (ballPositionCirclePosition.y - PockeySettings.BALL_RADIUS < this.poolTable.upLimit)\r\n                    ballPositionCirclePosition.y = this.poolTable.upLimit + PockeySettings.BALL_RADIUS;\r\n\r\n\r\n                let ballPosition: Vector2;// = new Vector2(this.poolTable.ballPositionCircle.x,this.poolTable.ballPositionCircle.y)\r\n\r\n                _.forEach(this.poolTable.goalkeepersCircles, (ball: Circle) => {\r\n                    ballPosition = new Vector2(ball.x, ball.y);\r\n                    if (ballPositionCirclePosition.distanceTo(ballPosition) < ball.radius + PockeySettings.BALL_RADIUS) {\r\n                        let opposite: number = ballPositionCirclePosition.y - ballPosition.y;\r\n                        let adjacent: number = ballPositionCirclePosition.x - ballPosition.x;\r\n                        let rotAngle: number = Math.atan2(opposite, adjacent);\r\n\r\n                        ballPositionCirclePosition.x = ballPosition.x + (PockeySettings.BALL_RADIUS + ball.radius) * Math.cos(rotAngle);\r\n                        ballPositionCirclePosition.y = ballPosition.y + (PockeySettings.BALL_RADIUS + ball.radius) * Math.sin(rotAngle);\r\n                        // _.forEach(this.poolTable.balls, (ball2: AbstractBall) => {\r\n                        //     // if (ball2 != ball) {\r\n                        //         let ball2Position: Vector2 = new Vector2(ball2.x, ball2.y);\r\n                        //         if (ball2Position.distanceTo(ballPositionCirclePosition) < PockeySettings.BALL_RADIUS + ball2.radius) {\r\n                        //             isInteresectingWithOthers = true;\r\n                        //             return;\r\n                        //         }\r\n                        //     // }\r\n                        // });\r\n                    }\r\n\r\n                    // aici verifici daca noul mouse e aproape de vreo minge sau cercul la portari sau perete daca e, nu-l muti si gata, cred\r\n                    // this.poolTable.ballPositionCircle.x = ballPositionCirclePosition.x;\r\n                    // this.poolTable.ballPositionCircle.y = ballPositionCirclePosition.y;\r\n                    /* TweenMax.to(this.poolTable.ballPositionCircle, 0.1, {\r\n                         x: ballPositionCirclePosition.x,\r\n                         y: ballPositionCirclePosition.y\r\n                     });*/\r\n                    // this.poolTable.ballPositionCircle.visible = true;\r\n                });\r\n\r\n                _.forEach(this.poolTable.balls, (ball: AbstractBall) => {\r\n                    ballPosition = new Vector2(ball.x, ball.y);\r\n                    if (ballPositionCirclePosition.distanceTo(ballPosition) < ball.radius + PockeySettings.BALL_RADIUS && !ball.canBeRemoved && ball != this.poolTable.whiteBall) {\r\n                        let opposite: number = ballPositionCirclePosition.y - ballPosition.y;\r\n                        let adjacent: number = ballPositionCirclePosition.x - ballPosition.x;\r\n                        let rotAngle: number = Math.atan2(opposite, adjacent);\r\n\r\n                        ballPositionCirclePosition.x = ballPosition.x + (PockeySettings.BALL_RADIUS + ball.radius) * Math.cos(rotAngle);\r\n                        ballPositionCirclePosition.y = ballPosition.y + (PockeySettings.BALL_RADIUS + ball.radius) * Math.sin(rotAngle);\r\n                        _.forEach(this.poolTable.balls, (ball2: AbstractBall) => {\r\n                            if (ball2 != ball) {\r\n                                let ball2Position: Vector2 = new Vector2(ball2.x, ball2.y);\r\n                                if (ball2Position.distanceTo(ballPositionCirclePosition) < PockeySettings.BALL_RADIUS + ball2.radius) {\r\n                                    isInteresectingWithOthers = true;\r\n                                    return;\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    // aici verifici daca noul mouse e aproape de vreo minge sau cercul la portari sau perete daca e, nu-l muti si gata, cred\r\n                    // this.poolTable.ballPositionCircle.x = ballPositionCirclePosition.x;\r\n                    // this.poolTable.ballPositionCircle.y = ballPositionCirclePosition.y;\r\n                    /* TweenMax.to(this.poolTable.ballPositionCircle, 0.1, {\r\n                         x: ballPositionCirclePosition.x,\r\n                         y: ballPositionCirclePosition.y\r\n                     });*/\r\n                    // this.poolTable.ballPositionCircle.visible = true;\r\n                });\r\n\r\n\r\n                /* _.forEach(this.poolTable.goalkeepersCircles, (circle: Circle) => {\r\n                     let circlePosition:Vector2 = new Vector2(circle.x, circle.y);\r\n                     if (circlePosition.distanceTo(ballPositionCirclePosition) < PockeySettings.BALL_RADIUS + circle.radius) {\r\n                         isInteresectingWithOthers = true;\r\n                         return;\r\n                     }\r\n                 });*/\r\n                _.forEach(this.poolTable.goalkeepersCircles, (ball: Circle) => {\r\n                    ballPosition = new Vector2(ball.x, ball.y);\r\n                    if (ballPositionCirclePosition.distanceTo(ballPosition) < ball.radius + PockeySettings.BALL_RADIUS) {\r\n                        isInteresectingWithOthers = true;\r\n                        return;\r\n                    }\r\n                });\r\n\r\n                if (ballPositionCirclePosition.x + PockeySettings.BALL_RADIUS > this.poolTable.rightLimit)\r\n                    isInteresectingWithOthers = true;\r\n                if (ballPositionCirclePosition.x - PockeySettings.BALL_RADIUS < this.poolTable.leftLimit)\r\n                    isInteresectingWithOthers = true;\r\n\r\n                if (ballPositionCirclePosition.y + PockeySettings.BALL_RADIUS > this.poolTable.downLimit)\r\n                    isInteresectingWithOthers = true;\r\n\r\n                if (ballPositionCirclePosition.y - PockeySettings.BALL_RADIUS < this.poolTable.upLimit)\r\n                    isInteresectingWithOthers = true;\r\n\r\n                if (isInteresectingWithOthers) {\r\n                    ballPositionCirclePosition.x = this.lastGoodRepositionPoint.x;\r\n                    ballPositionCirclePosition.y = this.lastGoodRepositionPoint.y;\r\n                }\r\n                else {\r\n                    this.lastGoodRepositionPoint.x = ballPositionCirclePosition.x;\r\n                    this.lastGoodRepositionPoint.y = ballPositionCirclePosition.y;\r\n\r\n                }\r\n\r\n                this.ballPositionCircleMesh.position.x = ballPositionCirclePosition.x;\r\n                this.ballPositionCircleMesh.position.y = -ballPositionCirclePosition.y - PockeySettings.BABYLON_Y_OFFSET;\r\n\r\n                TweenMax.to(this.ballPositionCircleMesh.position, 0.1, {\r\n                    x: ballPositionCirclePosition.x,\r\n                    y: -ballPositionCirclePosition.y - PockeySettings.BABYLON_Y_OFFSET\r\n                });\r\n\r\n                if (MouseHandler.Instance().left.down) {\r\n                    this.repositionStarted = true;\r\n                }\r\n                if (this.repositionStarted && !MouseHandler.Instance().left.down) {\r\n                    this.repositionStarted = false;\r\n\r\n                    // SignalsManager.DispatchSignal(PockeySignalTypes.WHITE_BALL_REPOSITIONED);\r\n                    this.repositionWhiteBallEnabled = false;\r\n                    // this.poolTable.ballPositionCircle.visible = false;\r\n                    // this.poolTable.whiteBall.canBeRemoved = false;\r\n                    // this.poolTable.whiteBall.x = ballPositionCirclePosition.x;\r\n                    // P2WorldManager.Instance().world.addBody(this.poolTable.whiteBall.p2Body);\r\n                    // this.poolTable.whiteBall.p2Body.velocity[0] = 0;\r\n                    // this.poolTable.whiteBall.p2Body.velocity[1] = 0;\r\n                    // this.poolTable.whiteBall.addShadowBody();\r\n\r\n                    // this.poolTable.whiteBall.alpha = 1;\r\n                    this.poolTable.whiteBall.isOnReposition = false;\r\n                    this.poolTable.whiteBall.reset();\r\n                    this.poolTable.whiteBall.ballPosition = ballPositionCirclePosition;\r\n                    // if(this.poolTable.balls.cont)\r\n                    this.poolTable.balls.push(this.poolTable.whiteBall);\r\n                    // this.poolTable.shadowsHolder.addChild(this.poolTable.whiteBall);\r\n                    // this.poolTable.whiteBall.alpha = 1;//(this.poolTable.whiteBall);\r\n                    // this.repositionStick();\r\n                    // SignalsManager.DispatchSignal(PockeySignalTypes.WHITE_BALL_REPOSITIONED);\r\n\r\n\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.WHITE_BALL_REPOSITIONED);\r\n\r\n                    if (!this.poolTable.poolStick.isActive) {\r\n                        _.forEach(this.poolTable.balls, (ball: AbstractBall) => {\r\n                            ball.addShadowBody();\r\n                        });\r\n                        // this.poolTable.raycastFollower.visible = true;\r\n                        // this.poolTable.ballPositionCircleOnRaycast.visible = true;\r\n\r\n                        this.poolTable.poolStick.activate(new Point(this.poolTable.whiteBall.x, this.poolTable.whiteBall.y));\r\n                        // console.log(\"PockeyStateMachine.Instance().fsm.currentState: \" + PockeyStateMachine.Instance().fsm.currentState);\r\n                    }\r\n                    // this.poolTable.whiteBall.y = ballPositionCirclePosition.y;\r\n                    // this.ticker.add(this.poolTable.whiteBall.update);\r\n\r\n                }\r\n\r\n\r\n            }\r\n\r\n            protected handleCollisions(): void {\r\n                /*_.remove(this.poolTable.balls, (ball: AbstractBall) => {\r\n\r\n                    if (ball.canBeRemoved && !ball.animationInProgress) {\r\n                        this.ticker.remove(ball.update);\r\n                        ball.removedFromArray = true;\r\n                        // if (ball.ballType == BallType.White && !ball.animationInProgress) {\r\n                        //     // this.whiteBallInThePocket = true;\r\n                        //         SignalsManager.DispatchSignal(PockeySignalTypes.WHITE_BALL_IN_POCKET);\r\n                        //\r\n                        // }\r\n                        // else if(ball.ballType != BallType.White && ball.ballType != BallType.Puck && !ball.animationInProgress)\r\n                        // {\r\n                        // }\r\n\r\n                        // if(this.checkIfOwnBall(ball.p2Body))\r\n                        // {\r\n                        //     SignalsManager.DispatchSignal(PockeySignalTypes.WHITE_BALL_IN_POCKET);\r\n                        //\r\n                        //     // SignalsManager.DispatchSignal(PockeySignalTypes.BALL_IN_POCKET, [ball.ballType]);\r\n                        //     // this.opponentBallInThePocket = true;\r\n                        // }\r\n                        // if (ball.ballType != BallType.White && !ball.animationInProgress) {\r\n                        //     this.whiteBallInThePocket = true;\r\n                        // }\r\n                        // ball.reanimoved = true;\r\n\r\n                    }\r\n\r\n                    return ball.canBeRemoved && !ball.animationInProgress;\r\n\r\n                });*/\r\n            }\r\n\r\n            // private enableBallRayGraphics(): void {\r\n            //     this.ballPositionCircleMesh.setEnabled(true);\r\n            //     this.ballPositionCircleMesh.material.unfreeze();\r\n            //\r\n            //     this.ballPositionCircleOnRaycastMesh.setEnabled(true);\r\n            //     this.ballPositionCircleOnRaycastMesh.material.unfreeze();\r\n            //\r\n            //     this.raycastFollowerMesh.setEnabled(true);\r\n            //     this.raycastFollowerMesh.material.unfreeze();\r\n            //\r\n            //     this.whiteBallReflectionArrowMesh.setEnabled(true);\r\n            //     this.whiteBallReflectionArrowMesh.material.unfreeze();\r\n            //\r\n            //     this.otherBallReflectionArrowMesh.setEnabled(true);\r\n            //     this.otherBallReflectionArrowMesh.material.unfreeze();\r\n            //\r\n            //     // this.whiteBallDirectionMesh.dispose();\r\n            //\r\n            //     this.graphicsHidden = false;\r\n            // }\r\n\r\n            private hideBallRayGraphics(): void {\r\n                this.ballPositionCircleMesh.setEnabled(false);\r\n                // this.ballPositionCircleMesh.material.freeze();\r\n\r\n                this.ballPositionCircleOnRaycastMesh.setEnabled(false);\r\n                // this.ballPositionCircleOnRaycastMesh.material.freeze();\r\n\r\n                this.raycastFollowerMesh.setEnabled(false);\r\n                console.log(\"raycastFollowerMesh la hideball gr\");\r\n                // this.raycastFollowerMesh.material.freeze();\r\n\r\n                this.whiteBallReflectionArrowMesh.setEnabled(false);\r\n                // this.whiteBallReflectionArrowMesh.material.freeze();\r\n\r\n                this.otherBallReflectionArrowMesh.setEnabled(false);\r\n                // this.otherBallReflectionArrowMesh.material.freeze();\r\n\r\n                if (this.whiteBallDirectionMesh)\r\n                    this.whiteBallDirectionMesh.setEnabled(false);//();\r\n                if (this.otherBallPostCollisionDirectionMesh)\r\n                    this.otherBallPostCollisionDirectionMesh.setEnabled(false);\r\n                if (this.whiteBallPostCollisionDirectionMesh)\r\n                    this.whiteBallPostCollisionDirectionMesh.setEnabled(false);\r\n                if (this.whiteBallDashedMesh)\r\n                    this.whiteBallDashedMesh.setEnabled(false);//();\r\n\r\n                this.graphicsHidden = true;\r\n            }\r\n\r\n            /* protected onWatchInProgress(): boolean {\r\n                 let onWatch: boolean = false;\r\n\r\n                 _.forEach(this.poolTable.balls, (ball: AbstractBall) => {\r\n                     if (ball.onWatchTimeline.isActive()) {\r\n                         onWatch = true;\r\n                         return;\r\n                     }\r\n                 });\r\n\r\n                 return onWatch;\r\n             }*/\r\n\r\n            protected update(): void {\r\n\r\n                // if (this.poolTable.leftGoalie.moving) {\r\n                //     this.poolTable.rightGoalie.y = this.poolTable.leftGoalie.y;\r\n                //     this.poolTable.rightGoalie.setBodyPosition();//. = this.poolTable.leftGoalie.y;\r\n                // }\r\n\r\n//                 if (this.enableUpdateOnWatch && this.opponentTimeStates.length > 1) {\r\n// //                     console.log(\"opp states before applying: \" + this.opponentTimeStates.length);\r\n// //                     TweenMax.delayedCall(this.opponentTimeStates[0].time, this.applyTimeState.bind(this));\r\n//                     this.applyTimeState();\r\n//                     /* let _currentTime:number = window.performance.now ? (performance.now() + performance.timing.navigationStart) : Date.now();\r\n//\r\n//                      this.interpolateStates(_currentTime);*/\r\n// //                     console.log(\"opp states after applying: \" + this.opponentTimeStates.length);\r\n//\r\n//                 }\r\n//                 else if (this.enableUpdateOnWatch && this.opponentTimeStates.length == 0) {\r\n//                     this.enableUpdateOnWatch = false;\r\n//                     SignalsManager.DispatchSignal(\"\")\r\n//                     // this.updatesReceivedOnWatch = 0;\r\n//                 }\r\n\r\n                if (PockeyStateMachine.Instance().fsm.currentState == PockeyStates.onRepositionWhiteBall) {\r\n                    // if (this.onWatchInProgress()) {\r\n                    //     return;\r\n                    // }\r\n                    // console.log(\"intra la repo ball\");\r\n\r\n                    // this.framesCounter = 0;\r\n                    // if (!this.goaliesHolder.moving)\r\n                    //     this.goaliesHolder.moving = true;\r\n\r\n                    // if (!this.poolTable.rightGoalie.moving)\r\n                    //     this.poolTable.rightGoalie.startMoving();\r\n\r\n                    this.onRepositionWhiteBall();\r\n\r\n                    return;\r\n                }\r\n\r\n                else if (PockeyStateMachine.Instance().fsm.currentState == PockeyStates.onShoot) {\r\n                    // console.log(\"intra la onshoot\");\r\n                    // if (this.onWatchInProgress()) {\r\n                    //     return;\r\n                    // }\r\n\r\n                    if (!this.ballsAreMoving()) {\r\n                        SignalsManager.DispatchSignal(PockeySignalTypes.PREPARE_NEXT_TURN);\r\n                    }\r\n                    else {\r\n                        this.handleCollisions();\r\n\r\n                        // this.sendElementsDataToManager();\r\n                    }\r\n                }\r\n\r\n                if (PockeyStateMachine.Instance().fsm.currentState == PockeyStates.onRearrangeStick) {\r\n                    this.graphicsHidden = false;\r\n                    /*if (this.onWatchInProgress()) {\r\n                        return;\r\n                    }*/\r\n                    // this.framesCounter = 0;\r\n//                     console.log(\"intra la rearrange\");\r\n                    if (!this.goaliesHolder.moving)\r\n                        this.goaliesHolder.moving = true;\r\n\r\n\r\n                    // P2WorldManager.Instance().world.addBody(this.poolTable.whiteBall.p2Body);\r\n                    // this.poolTable.whiteBall.p2Body.velocity[0] = 0;\r\n                    // this.poolTable.whiteBall.p2Body.velocity[1] = 0;\r\n                    // this.poolTable.whiteBall.addShadowBody();\r\n\r\n                    // this.poolTable.whiteBall.alpha = 1;\r\n                    if (!this.poolTable.whiteBall.isOnRearrange) {\r\n                        this.poolTable.whiteBall.isOnRearrange = true;\r\n                    }\r\n                    this.poolTable.whiteBall.ballPosition = new Vector2(this.poolTable.whiteBall.x, this.poolTable.whiteBall.y);\r\n\r\n                    if (this.poolTable.poolStick.rotationEnabled) {\r\n\r\n\r\n                        // if (!this.poolTable.rightGoalie.moving)\r\n                        //     this.poolTable.rightGoalie.startMoving();\r\n\r\n\r\n                        /*if (this.graph) {\r\n                            if (this.graph.parent)\r\n                                this.graph.parent.removeChild(this.graph);\r\n                            this.graph.clear();\r\n                            this.graph = null;\r\n\r\n                        }\r\n                        this.graph = new Graphics();*/\r\n                        if (this.whiteBallDirectionMesh) {\r\n                            this.whiteBallDirectionMesh.setEnabled(false);//();\r\n                        }\r\n                        if (this.whiteBallPostCollisionDirectionMesh) {\r\n                            this.whiteBallPostCollisionDirectionMesh.setEnabled(false);//();\r\n                        }\r\n                        if (this.otherBallPostCollisionDirectionMesh) {\r\n                            this.otherBallPostCollisionDirectionMesh.setEnabled(false);\r\n                        }\r\n                        if (this.whiteBallDashedMesh) {\r\n                            this.whiteBallDashedMesh.setEnabled(false);//();\r\n                        }\r\n                        if (this.ballPositionCircleMesh) {\r\n                            this.ballPositionCircleMesh.setEnabled(false);\r\n                            // this.ballPositionCircleMesh.material.freeze();\r\n                        }\r\n                        if (this.raycastFollowerMesh) {\r\n\r\n                            console.log(\"raycastFollowerMesh la on rearrange\");\r\n\r\n                            this.raycastFollowerMesh.setEnabled(true);\r\n\r\n                            // this.raycastFollowerMesh.material.unfreeze();\r\n                        }\r\n                        if (this.ballPositionCircleOnRaycastMesh) {\r\n                            this.ballPositionCircleOnRaycastMesh.setEnabled(true);\r\n                            console.log(\"se enable-uie ce plm\");\r\n\r\n                            // this.ballPositionCircleOnRaycastMesh.material.unfreeze();\r\n                        }\r\n\r\n                        // if (this.whiteBallReflectionArrowMesh.material.isFrozen) {\r\n                        //     // this.ballPositionCircleOnRaycastMesh.material.unfreeze();\r\n                        // }\r\n                        this.whiteBallReflectionArrowMesh.setEnabled(false);\r\n\r\n                        // if (this.otherBallReflectionArrowMesh.material.isFrozen) {\r\n                        //     this.otherBallReflectionArrowMesh.material.unfreeze();\r\n                        // }\r\n                        this.otherBallReflectionArrowMesh.setEnabled(false);\r\n\r\n                        let localPoint = this.poolTable.toLocal(new Point(MouseHandler.Instance().position.x, MouseHandler.Instance().position.y));\r\n\r\n                        let opposite: number = localPoint.y - this.poolTable.whiteBall.y;\r\n                        let adjacent: number = localPoint.x - this.poolTable.whiteBall.x;\r\n                        let rot: number = Math.atan2(opposite, adjacent);\r\n\r\n                        let dir: Vector2 = new Vector2(Math.cos(rot), Math.sin(rot)).multiply(1100);\r\n\r\n                        this.newPos = new Vector2(this.poolTable.whiteBall.x + dir.x, this.poolTable.whiteBall.y + dir.y);\r\n                        this.shortestContactDistance = this.newPos.distanceTo(this.poolTable.whiteBall.position);\r\n                        //===================\r\n                        this.startRayCastPoint[0] = this.poolTable.whiteBall.x;\r\n                        this.startRayCastPoint[1] = this.poolTable.whiteBall.y;\r\n                        this.endRayCastPoint[0] = this.newPos.x;\r\n                        this.endRayCastPoint[1] = this.newPos.y;\r\n                        // P2WorldManager.Instance().world.removeBody(this.poolTable.whiteBall.p2Body);\r\n\r\n                        p2.vec2.copy(this.rayClosest.from, this.startRayCastPoint);\r\n                        p2.vec2.copy(this.rayClosest.to, this.endRayCastPoint);\r\n                        // this.rayClosest.\r\n                        this.rayClosest.update();\r\n                        this.raycastResult.reset();\r\n                        P2WorldManager.Instance().world.raycast(this.raycastResult, this.rayClosest);\r\n                        this.drawRayResult(this.raycastResult, this.rayClosest);\r\n                    }\r\n\r\n                    // this.sendElementsDataToManager();\r\n                    // }\r\n                }\r\n                /*// this.graph.lineStyle(2, 0xffffff);\r\n                // this.graph.moveTo(localPoint.x, localPoint.y);\r\n                if (this.repositionWhiteBallEnabled) {\r\n                    if (this.graph) {\r\n                        if (this.graph.parent)\r\n                            this.graph.parent.removeChild(this.graph);\r\n                        this.graph.clear();\r\n                        this.graph = null;\r\n                    }\r\n\r\n                    // if (localPoint.x < this.poolTable.rightLimit &&\r\n                    //     localPoint.x > this.poolTable.leftLimit &&\r\n                    //     localPoint.y < this.poolTable.downLimit &&\r\n                    //     localPoint.y > this.poolTable.upLimit) {\r\n\r\n                    let ballPositionCirclePosition: Vector2 = new Vector2(localPoint.x, localPoint.y);\r\n                    if (ballPositionCirclePosition.x + PockeySettings.BALL_RADIUS > this.poolTable.rightLimit)\r\n                        ballPositionCirclePosition.x = this.poolTable.rightLimit - PockeySettings.BALL_RADIUS;\r\n                    if (ballPositionCirclePosition.x - PockeySettings.BALL_RADIUS < this.poolTable.leftLimit)\r\n                        ballPositionCirclePosition.x = this.poolTable.leftLimit + PockeySettings.BALL_RADIUS;\r\n\r\n                    if (ballPositionCirclePosition.y + PockeySettings.BALL_RADIUS > this.poolTable.downLimit)\r\n                        ballPositionCirclePosition.y = this.poolTable.downLimit - PockeySettings.BALL_RADIUS;\r\n                    if (ballPositionCirclePosition.y - PockeySettings.BALL_RADIUS < this.poolTable.upLimit)\r\n                        ballPositionCirclePosition.y = this.poolTable.upLimit + PockeySettings.BALL_RADIUS;\r\n\r\n                    let ballPosition: Vector2;// = new Vector2(this.poolTable.ballPositionCircle.x,this.poolTable.ballPositionCircle.y)\r\n\r\n                    _.forEach(this.poolTable.balls, (ball: AbstractBall) => {\r\n                        ballPosition = new Vector2(ball.x, ball.y);\r\n                        if (ballPositionCirclePosition.distanceTo(ballPosition) < ball.radius + PockeySettings.BALL_RADIUS) {\r\n                            let opposite: number = ballPositionCirclePosition.y - ballPosition.y;\r\n                            let adjacent: number = ballPositionCirclePosition.x - ballPosition.x;\r\n                            let rotAngle: number = Math.atan2(opposite, adjacent);\r\n\r\n                            ballPositionCirclePosition.x = ballPosition.x + (PockeySettings.BALL_RADIUS + ball.radius) * Math.cos(rotAngle);\r\n                            ballPositionCirclePosition.y = ballPosition.y + (PockeySettings.BALL_RADIUS + ball.radius) * Math.sin(rotAngle);\r\n                            let isInteresectingWithOthers: boolean = false;\r\n                            _.forEach(this.poolTable.balls, (ball2: AbstractBall) => {\r\n                                if (ball2 != ball) {\r\n                                    let ball2Position: Vector2 = new Vector2(ball2.x, ball2.y);\r\n                                    if (ball2Position.distanceTo(ballPositionCirclePosition) < PockeySettings.BALL_RADIUS + ball2.radius) {\r\n                                        isInteresectingWithOthers = true;\r\n                                        return;\r\n                                    }\r\n                                }\r\n                            });\r\n\r\n                            if (isInteresectingWithOthers) {\r\n                                ballPositionCirclePosition.x = this.lastGoodRepositionPoint.x;\r\n                                ballPositionCirclePosition.y = this.lastGoodRepositionPoint.y;\r\n                            }\r\n                            else {\r\n                                this.lastGoodRepositionPoint.x = ballPositionCirclePosition.x;\r\n                                this.lastGoodRepositionPoint.y = ballPositionCirclePosition.y;\r\n                            }\r\n                        }\r\n\r\n                        TweenMax.to(this.poolTable.ballPositionCircle, 0.1, {\r\n                            x: ballPositionCirclePosition.x,\r\n                            y: ballPositionCirclePosition.y\r\n                        });\r\n                        this.poolTable.ballPositionCircle.visible = true;\r\n\r\n\r\n                    });\r\n\r\n                    if (MouseHandler.Instance().left.pressed) {\r\n                        // SignalsManager.DispatchSignal(PockeySignalTypes.WHITE_BALL_REPOSITIONED);\r\n                        this.repositionWhiteBallEnabled = false;\r\n                        this.poolTable.ballPositionCircle.visible = false;\r\n                        // this.poolTable.whiteBall.canBeRemoved = false;\r\n                        // this.poolTable.whiteBall.x = ballPositionCirclePosition.x;\r\n                        // P2WorldManager.Instance().world.addBody(this.poolTable.whiteBall.p2Body);\r\n                        // this.poolTable.whiteBall.p2Body.velocity[0] = 0;\r\n                        // this.poolTable.whiteBall.p2Body.velocity[1] = 0;\r\n                        // this.poolTable.whiteBall.addShadowBody();\r\n\r\n                        // this.poolTable.whiteBall.alpha = 1;\r\n                        this.poolTable.whiteBall.reset();\r\n                        this.poolTable.whiteBall.ballPosition = ballPositionCirclePosition;\r\n                        this.poolTable.balls.push(this.poolTable.whiteBall);\r\n                        this.poolTable.addChild(this.poolTable.whiteBall);\r\n                        this.repositionStick();\r\n                        // SignalsManager.DispatchSignal(PockeySignalTypes.WHITE_BALL_REPOSITIONED);\r\n\r\n                        // this.poolTable.whiteBall.y = ballPositionCirclePosition.y;\r\n                        // this.ticker.add(this.poolTable.whiteBall.update);\r\n\r\n                    }\r\n\r\n                    return;\r\n                }\r\n                // else {\r\n                if (this.ballsAreMoving()) {\r\n                    // console.log(\"aici la 1\");\r\n                    this.handleCollisions();\r\n                }\r\n                else {\r\n                    if (this.whiteBallInThePocket) {\r\n                        // console.log(\"aici la 2\");\r\n\r\n                        SignalsManager.DispatchSignal(PockeySignalTypes.WHITE_BALL_IN_POCKET);\r\n                        this.whiteBallInThePocket = false;\r\n\r\n                        return;\r\n                    }\r\n\r\n\r\n                    if (this.poolTable.poolStick.rotationEnabled) {\r\n                        // console.log(\"aici la 4\");\r\n\r\n                        if (this.graph) {\r\n                            if (this.graph.parent)\r\n                                this.graph.parent.removeChild(this.graph);\r\n                            this.graph.clear();\r\n                            this.graph = null;\r\n\r\n                        }\r\n                        this.graph = new Graphics();\r\n\r\n                        let localPoint = this.poolTable.toLocal(new Point(MouseHandler.Instance().position.x, MouseHandler.Instance().position.y));\r\n\r\n                        let opposite: number = localPoint.y - this.poolTable.whiteBall.y;\r\n                        let adjacent: number = localPoint.x - this.poolTable.whiteBall.x;\r\n                        let rot: number = Math.atan2(opposite, adjacent);\r\n\r\n                        let dir: Vector2 = new Vector2(Math.cos(rot), Math.sin(rot)).multiply(1100);\r\n\r\n                        this.newPos = new Vector2(this.poolTable.whiteBall.x + dir.x, this.poolTable.whiteBall.y + dir.y);\r\n                        this.shortestContactDistance = this.newPos.distanceTo(this.poolTable.whiteBall.position);\r\n                        //===================\r\n                        this.startRayCastPoint[0] = this.poolTable.whiteBall.x;\r\n                        this.startRayCastPoint[1] = this.poolTable.whiteBall.y;\r\n                        this.endRayCastPoint[0] = this.newPos.x;\r\n                        this.endRayCastPoint[1] = this.newPos.y;\r\n                        // P2WorldManager.Instance().world.removeBody(this.poolTable.whiteBall.p2Body);\r\n\r\n                        p2.vec2.copy(this.rayClosest.from, this.startRayCastPoint);\r\n                        p2.vec2.copy(this.rayClosest.to, this.endRayCastPoint);\r\n                        // this.rayClosest.\r\n                        this.rayClosest.update();\r\n                        this.raycastResult.reset();\r\n                        P2WorldManager.Instance().world.raycast(this.raycastResult, this.rayClosest);\r\n                        this.drawRayResult(this.raycastResult, this.rayClosest);\r\n\r\n                    }\r\n\r\n                    if (this.ballWasShot && this.playerTurnStarted) {\r\n                        this.ballWasShot = false;\r\n                        this.playerTurnStarted = false;\r\n                        // if (this.playerTurnStarted)\r\n                        // {\r\n                        //     this.playerTurnStarted = false;\r\n                        SignalsManager.DispatchSignal(PockeySignalTypes.NEXT_TURN);\r\n                        //\r\n                        // }\r\n                    }\r\n                }*/\r\n\r\n                // console.log(\"==============\");\r\n            }\r\n\r\n            // Entity Interpolation In General\r\n            // The principle is pretty simple. Server sends updates containing positions of all entities (other players). Client waits a few updates before moving the entity while interpolating between the individual updates.\r\n            //\r\n            // As an example, if server sends updates every 100 ms, client can wait until it receives 3rd update (i.e. 200 ms since the first) and then starts moving the entity, while interpolating between the states. Code for interpolation is very simple:\r\n\r\n\r\n            protected applyTimeState(params: any): void {\r\n\r\n                let timeState: TimeState = params[0];\r\n                let duration: number = params[1];\r\n\r\n                this.poolTable.poolStick.setState(timeState.stickState, duration);\r\n                // this.poolTable.whiteBall.setState(this.opponentTimeStates[0].whiteBallState);\r\n                _.forEach(this.poolTable.balls, (ball: AbstractBall) => {\r\n                    _.forEach(timeState.ballsStates, (ballState: BallState) => {\r\n                        if (ball.name == ballState.name) {\r\n                            ball.setState(ballState, duration);\r\n                        }\r\n                    });\r\n                });\r\n                this.goaliesHolder.setState(timeState.goalieState, duration);\r\n                // console.log(\"t/me state id: \" + this.opponentTimeStates[0].id)\r\n\r\n                this.applyGraphicsState(timeState.graphicsState);\r\n\r\n            }\r\n\r\n            private changeWhiteBallStatus(): void {\r\n                if (this.poolTable.whiteBall.isOnRearrange)\r\n                    this.poolTable.whiteBall.isOnRearrange = false;\r\n                if (this.poolTable.whiteBall.isOnReposition)\r\n                    this.poolTable.whiteBall.isOnReposition = false;\r\n            }\r\n\r\n            private applyGraphicsState(state: GraphicsState): void {\r\n                // if (!state.visible && !state.onReposition) {\r\n                //     console.log(\"stop\");\r\n                // }\r\n                if (!state.visible) {\r\n                    this.hideBallRayGraphics();\r\n                    return;\r\n                }\r\n                else {\r\n                    if (state.onReposition) {\r\n                        // if (this.ballPositionCircleMesh.material.isFrozen)\r\n                        //     this.ballPositionCircleMesh.material.unfreeze();\r\n\r\n                        this.ballPositionCircleMesh.position.x = state.whiteBallPositionOnReposition[0];\r\n                        this.ballPositionCircleMesh.position.y = state.whiteBallPositionOnReposition[1];\r\n                        this.ballPositionCircleMesh.setEnabled(true);\r\n                    }\r\n                    else {\r\n                        if (this.ballPositionCircleMesh) {\r\n                            this.ballPositionCircleMesh.setEnabled(false);\r\n                            // this.ballPositionCircleMesh.material.freeze();\r\n                        }\r\n                        // if (this.ballPositionCircleOnRaycastMesh.material.isFrozen)\r\n                        //     this.ballPositionCircleOnRaycastMesh.material.unfreeze();\r\n                        this.ballPositionCircleOnRaycastMesh.position.x = state.whiteBallPositionOnRayCast[0];//?: Vector2,\r\n                        this.ballPositionCircleOnRaycastMesh.position.y = state.whiteBallPositionOnRayCast[1];//?: Vector2,\r\n                        this.ballPositionCircleOnRaycastMesh.edgesColor = state.graphicsColor;\r\n                        this.ballPositionCircleOnRaycastMesh.setEnabled(true);\r\n\r\n                        // if (this.raycastFollowerMesh.material.isFrozen)\r\n                        //     this.raycastFollowerMesh.material.unfreeze();\r\n                        this.raycastFollowerMesh.position.x = state.circleFollowerPosition[0];\r\n                        this.raycastFollowerMesh.position.y = state.circleFollowerPosition[1];\r\n                        this.raycastFollowerMesh.edgesColor = state.graphicsColor;\r\n                        if (this.raycastFollowerMesh)\r\n                            this.raycastFollowerMesh.setEnabled(true);\r\n\r\n                        // let path: Vector3[] = sta[new Vector3(state.lineBetweenCirclesCoordinates[0].x, state.lineBetweenCirclesCoordinates[0].y, 0), new Vector3(state.lineBetweenCirclesCoordinates[1].x, state.lineBetweenCirclesCoordinates[1].y, 0)];\r\n\r\n                        // if (this.whiteBallDirectionMesh)\r\n                        //     this.whiteBallDirectionMesh.setEnabled(false);//();\r\n                        if (state.lineBetweenCirclesCoordinates.length > 1) {\r\n                            // this.whiteBallDirectionMesh = BABYLON.Mesh.CreateLines(\"whiteBallDirectionMesh\", [new Vector3(state.lineBetweenCirclesCoordinates[0][0], state.lineBetweenCirclesCoordinates[0][1], 0), new Vector3(state.lineBetweenCirclesCoordinates[1][0], state.lineBetweenCirclesCoordinates[1][1], 0)], this.whiteBallDirectionMesh);\r\n                            this.whiteBallDirectionMesh = BABYLON.MeshBuilder.CreateLines(\"whiteBallDirectionMesh\", {\r\n                                points: [new Vector3(state.lineBetweenCirclesCoordinates[0][0], state.lineBetweenCirclesCoordinates[0][1], 0), new Vector3(state.lineBetweenCirclesCoordinates[1][0], state.lineBetweenCirclesCoordinates[1][1], 0)],\r\n\r\n                                instance: this.whiteBallDirectionMesh\r\n                            });\r\n                            this.whiteBallDirectionMesh.enableEdgesRendering();\r\n                            this.whiteBallDirectionMesh.edgesWidth = 10;\r\n                            this.whiteBallDirectionMesh.edgesColor = state.graphicsColor;\r\n                            this.whiteBallDirectionMesh.setEnabled(true);\r\n                        }\r\n\r\n                        if (this.otherBallPostCollisionDirectionMesh)\r\n                            this.otherBallPostCollisionDirectionMesh.setEnabled(false);\r\n                        if (state.otherBallDirectionPoints.length > 1) {\r\n                            // this.otherBallPostCollisionDirectionMesh = BABYLON.Mesh.CreateLines(\"otherBallPostCollisionDirectionMesh\", [new Vector3(state.otherBallDirectionPoints[0][0], state.otherBallDirectionPoints[0][1], 0), new Vector3(state.otherBallDirectionPoints[1][0], state.otherBallDirectionPoints[1][1], 0)], AbstractEntryPoint.scene, true);\r\n\r\n                            this.otherBallPostCollisionDirectionMesh = BABYLON.MeshBuilder.CreateLines(\"otherBallPostCollisionDirectionMesh\", {\r\n                                points: [new Vector3(state.otherBallDirectionPoints[0][0], state.otherBallDirectionPoints[0][1], 0), new Vector3(state.otherBallDirectionPoints[1][0], state.otherBallDirectionPoints[1][1], 0)],\r\n                                instance: this.otherBallPostCollisionDirectionMesh\r\n                            });\r\n                            // if (this.otherBallPostCollisionDirectionMesh.material.isFrozen)\r\n                            //     this.otherBallPostCollisionDirectionMesh.material.unfreeze();\r\n                            this.otherBallPostCollisionDirectionMesh.position.z = -PockeySettings.BALL_RADIUS * 2;\r\n                            this.otherBallPostCollisionDirectionMesh.enableEdgesRendering();\r\n                            this.otherBallPostCollisionDirectionMesh.edgesWidth = 10;\r\n                            this.otherBallPostCollisionDirectionMesh.edgesColor = state.graphicsColor;\r\n                            this.otherBallPostCollisionDirectionMesh.setEnabled(true);\r\n\r\n                            this.otherBallReflectionArrowMesh.position.x = state.otherBallArrowPositionAndRotation[0];\r\n                            this.otherBallReflectionArrowMesh.position.y = state.otherBallArrowPositionAndRotation[1];\r\n                            this.otherBallReflectionArrowMesh.rotation.z = state.otherBallArrowPositionAndRotation[2];\r\n                            this.otherBallReflectionArrowMesh.setEnabled(true);\r\n                            // if (this.otherBallReflectionArrowMesh.material.isFrozen)\r\n                            //     this.otherBallReflectionArrowMesh.material.unfreeze();\r\n                            // state.otherBallReflectionArrowMesh = [this.otherBallReflectionArrowMesh.position.x, this.otherBallReflectionArrowMesh.position.y, this.otherBallReflectionArrowMesh.rotation.z];\r\n\r\n                        }\r\n                        else {\r\n                            this.otherBallReflectionArrowMesh.setEnabled(false);\r\n                        }\r\n\r\n                        if (this.whiteBallPostCollisionDirectionMesh)\r\n                            this.whiteBallPostCollisionDirectionMesh.setEnabled(false);\r\n\r\n                        if (this.whiteBallDashedMesh)\r\n                            this.whiteBallDashedMesh.setEnabled(false);//();\r\n\r\n                        if (state.whiteBallDirectionPoints.length > 1) {\r\n                            // this.whiteBallPostCollisionDirectionMesh = BABYLON.Mesh.CreateLines(\"whiteBallPostCollisionDirectionMesh\", [new Vector3(state.whiteBallDirectionPoints[0][0], state.whiteBallDirectionPoints[0][1], 0), new Vector3(state.whiteBallDirectionPoints[1][0], state.whiteBallDirectionPoints[1][1], 0)], AbstractEntryPoint.scene, true);\r\n                            this.whiteBallPostCollisionDirectionMesh = BABYLON.MeshBuilder.CreateLines(\"whiteBallPostCollisionDirectionMesh\", {\r\n                                points: [new Vector3(state.whiteBallDirectionPoints[0][0], state.whiteBallDirectionPoints[0][1], 0), new Vector3(state.whiteBallDirectionPoints[1][0], state.whiteBallDirectionPoints[1][1], 0)],\r\n                                instance: this.whiteBallPostCollisionDirectionMesh\r\n                            });\r\n                            // if (this.whiteBallPostCollisionDirectionMesh.material.isFrozen)\r\n                            //     this.whiteBallPostCollisionDirectionMesh.material.unfreeze();\r\n                            this.whiteBallPostCollisionDirectionMesh.position.z = -PockeySettings.BALL_RADIUS * 2;\r\n                            this.whiteBallPostCollisionDirectionMesh.enableEdgesRendering();\r\n                            this.whiteBallPostCollisionDirectionMesh.edgesWidth = 10;\r\n                            this.whiteBallPostCollisionDirectionMesh.edgesColor = state.graphicsColor;\r\n                            this.whiteBallPostCollisionDirectionMesh.setEnabled(true);\r\n\r\n                            // this.whiteBallDashedMesh = BABYLON.Mesh.CreateLines(\"whiteBallDashedMesh\", state.whiteBallDashedPoints, AbstractEntryPoint.scene, true);\r\n                            // console.log(\"dashed: \");\r\n                            // console.log(state.whiteBallDashedPoints);\r\n                            // console.log(\"------------\");\r\n\r\n                            // this.whiteBallDashedMesh = BABYLON.Mesh.CreateDashedLines(\"caca\", this.whiteBallDashedPoints, 3, 3, 4, AbstractEntryPoint.scene, true);\r\n\r\n\r\n                            this.whiteBallDashedMesh = BABYLON.MeshBuilder.CreateDashedLines(\"whiteBallDashedMesh\", {\r\n                                points: [new Vector3(state.whiteBallDashedPoints[0][0], state.whiteBallDashedPoints[0][1], 0), new Vector3(state.whiteBallDashedPoints[1][0], state.whiteBallDashedPoints[1][1], 0)],\r\n\r\n                                instance: this.whiteBallDashedMesh\r\n                            });\r\n\r\n                            // this.whiteBallDashedMesh = BABYLON.Mesh.CreateDashedLines(null, [new Vector3(200, 100, 0), new Vector3(100, 50, 20)], null, null, null, null, null, this.whiteBallDashedMesh);\r\n\r\n                            this.whiteBallDashedMesh.enableEdgesRendering();\r\n                            this.whiteBallDashedMesh.edgesWidth = 10;\r\n                            this.whiteBallDashedMesh.position.z = -PockeySettings.BALL_RADIUS * 2;\r\n                            this.whiteBallDashedMesh.edgesColor = state.graphicsColor;\r\n                            this.whiteBallDashedMesh.setEnabled(true);\r\n\r\n                            // this.whiteBallDashedMesh = BABYLON.Mesh.CreateDashedLines(\"mu\", state.whiteBallDashedPoints, 3, 3, 4, AbstractEntryPoint.scene, true);\r\n                            // this.whiteBallDashedMesh.position.z = -PockeySettings.BALL_RADIUS * 2;\r\n\r\n                            this.whiteBallDashedMesh.setEnabled(true);\r\n\r\n                            // this.whiteBallDashedMesh = BABYLON.Mesh.CreateDashedLines(\"whiteBallDashedMesh\", [new Vector3(state.whiteBallDashedPoints[0].x, state.whiteBallDashedPoints[0].y, 0), new Vector3(state.whiteBallDashedPoints[1].x, state.whiteBallDashedPoints[1].y, 0)], 3, 3, 4, AbstractEntryPoint.scene, true);\r\n                            //\r\n                            // this.whiteBallDashedMesh.enableEdgesRendering();\r\n                            // this.whiteBallDashedMesh.edgesWidth = 10;\r\n                            // this.whiteBallDashedMesh.position.z = -PockeySettings.BALL_RADIUS * 2;\r\n                            // this.whiteBallDashedMesh.edgesColor = state.graphicsColor;\r\n                            // this.whiteBallDashedMesh.setEnabled(true);\r\n\r\n                            // console.log(\"arrow data: \" + state);\r\n                            // console.log(\"arrow data - state: \" + state.whiteBallArrowPositionAndRotation);\r\n                            this.whiteBallReflectionArrowMesh.position.x = state.whiteBallArrowPositionAndRotation[0];\r\n                            this.whiteBallReflectionArrowMesh.position.y = state.whiteBallArrowPositionAndRotation[1];\r\n                            this.whiteBallReflectionArrowMesh.rotation.z = state.whiteBallArrowPositionAndRotation[2];\r\n\r\n                            this.whiteBallReflectionArrowMesh.setEnabled(true);\r\n                            // if (this.whiteBallReflectionArrowMesh.material.isFrozen)\r\n                            //     this.whiteBallReflectionArrowMesh.material.unfreeze();\r\n                            // state.otherBallReflectionArrowMesh = [this.otherBallReflectionArrowMesh.position.x, this.otherBallReflectionArrowMesh.position.y, this.otherBallReflectionArrowMesh.rotation.z];\r\n                        }\r\n                        else {\r\n                            this.whiteBallReflectionArrowMesh.setEnabled(false);\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n\r\n                }\r\n            }\r\n\r\n            /* protected sendElementsDataToManager(): void {\r\n                 if (!Settings.singlePlayer) {\r\n                     this.createTimeState();\r\n\r\n                     if (this.myTimeStates.length < this.sendPoolDataFrameStep) {\r\n                         return;\r\n                     }\r\n                     // else if (this.framesCounter == this.sendPoolDataFrameStep) {\r\n                     //     this.framesCounter = 0;\r\n                     // }\r\n\r\n                     // this.framesCounter++;\r\n\r\n                     let poolTableData: PoolTableData = {\r\n                         timeStates: this.myTimeStates\r\n                         // poolstickPivotX: this.poolTable.poolStick.pivot.x,\r\n                         // poolstickRotation: this.poolTable.poolStick.rotation,\r\n                         // poolstickPositionX: this.poolTable.poolStick.position.x,\r\n                         // poolstickPositionY: this.poolTable.poolStick.position.y,\r\n                         // leftBalls: leftBallsData,\r\n                         // rightBalls: rightBallsData,\r\n                         // whiteBallData: this.poolTable.whiteBall.getBallData(),\r\n                         // puckData: this.poolTable.puck.getBallData(),\r\n                         // balls: ballsData,\r\n\r\n                         // ballPositionCircleVisible: this.poolTable.ballPositionCircle.visible,\r\n                         // ballPositionCircleX: this.poolTable.ballPositionCircle.x,\r\n                         // ballPositionCircleY: this.poolTable.ballPositionCircle.y,\r\n\r\n                         // ballPositionCircleOnRaycastVisible: this.poolTable.ballPositionCircleOnRaycast.visible,\r\n                         // ballPositionCircleOnRaycastX: this.poolTable.ballPositionCircleOnRaycast.x,\r\n                         // ballPositionCircleOnRaycastY: this.poolTable.ballPositionCircleOnRaycast.y,\r\n\r\n                         // followerVisible: this.poolTable.raycastFollower.visible,\r\n                         // followerX: this.poolTable.raycastFollower.x,\r\n                         // followerY: this.poolTable.raycastFollower.y,\r\n\r\n                         /!*lineBetweenCirclesVisible: this.lineBetweenCirclesVisible,\r\n                         lineBetweenCirclesPoints: this.lineBetweenCirclesPoints,\r\n                         graphColor: this.graphColor,\r\n                         leftGoalieY: this.poolTable.leftGoalie.y,\r\n                         rightGoalieY: this.poolTable.rightGoalie.y,*!/\r\n                     };\r\n\r\n\r\n                     SignalsManager.DispatchSignal(PockeySignalTypes.SEND_ELEMENTS_DATA_TO_MANAGER, [poolTableData]);\r\n                     this.myTimeStates = [];\r\n\r\n\r\n                 }\r\n\r\n             }*/\r\n\r\n            /*private onWatch(params: any[]): void {\r\n\r\n                // if (PockeyStateMachine.Instance().fsm.currentState == PockeyStates.onWatch) {\r\n\r\n                    let msg: string = params[0];\r\n                    let poolTableData: PoolTableData = JSON.parse(msg);\r\n\r\n\r\n                    _.forEach(poolTableData.timeStates, (timeState: TimeState) => {\r\n                        this.statesReceived++;\r\n                        // console.log(\"states received: \" + this.statesReceived)\r\n                        this.opponentTimeStates.push(timeState);\r\n                    });\r\n//                     console.log(\"opp states on receive: \" + this.opponentTimeStates.length);\r\n//                     console.log(\"===================\");\r\n                    // console.log(\"opponentStates length: \" + this.opponentTimeStates.length);\r\n                    /!*aicisha\r\n                    vine\r\n                    logica*!/\r\n                    ////////////////////////\r\n                    // this.updatesReceivedOnWatch++;\r\n                    if (this.opponentTimeStates.length >= 2) {\r\n                        this.enableUpdateOnWatch = true;\r\n                        // this.smoothie.start();\r\n                    }\r\n                    /////////////////\r\n\r\n                    if (this.framesCounter != 0)\r\n                        this.framesCounter = 0;\r\n\r\n                    this.onStopAnimatePuckGoal();\r\n\r\n\r\n                    /!* if (!this.firstMessageReceivedOnWatch) {\r\n                         this.firstMessageReceivedOnWatch = true;\r\n                         if (!this.goaliesHolder.moving)\r\n                             this.goaliesHolder.moving = true;\r\n                     }*!/\r\n                    // if (this.poolTable.leftGoalie.moving)\r\n                    //     this.poolTable.leftGoalie.resetTweens();\r\n\r\n                    // if (this.poolTable.rightGoalie.moving)\r\n                    //     this.poolTable.rightGoalie.resetTweens();\r\n\r\n                    // TweenMax.to(this.poolTable.leftGoalie, 0.1, {y:poolTableData.leftGoalieY});\r\n                    // TweenMax.to(this.poolTable.rightGoalie, 0.1, {y:poolTableData.rightGoalieY});\r\n                    // this.poolTable.leftGoalie.y = poolTableData.leftGoalieY;\r\n                    // this.poolTable.rightGoalie.y = poolTableData.rightGoalieY;\r\n\r\n                    /!* if (poolTableData.opponentState == PockeyStates.onShoot) {\r\n                         SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_UI_TEXT, [PockeyStateTexts.opponentsTurn]);\r\n                     }\r\n                     else {\r\n                         // console.log(\"poolTableData.opponentTimeFinished: \" + poolTableData.opponentTimeFinished);\r\n                         if (poolTableData.opponentTimeFinished == true) {\r\n                             this.opponentTimeUp = true;\r\n                             SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_UI_TEXT, [PockeyStateTexts.onOpponentsTimeUp]);\r\n                         }\r\n                         else {\r\n                             SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_UI_TEXT, [this.uiTextOnWatch]);\r\n                             this.opponentTimeUp = false;\r\n                         }\r\n\r\n                     }*!/\r\n\r\n                    // console.log(\"pool table column: \" + poolTableData);\r\n                    // this.poolTable.poolStick.x = poolTableData.poolstickPositionX;\r\n                    // this.poolTable.poolStick.y = poolTableData.poolstickPositionY;\r\n                    // this.poolTable.poolStick.rotation = poolTableData.poolstickRotation;\r\n                    // this.poolTable.poolStick.reset();\r\n                    // this.poolTable.poolStick.pivot.x = poolTableData.poolstickPivotX;\r\n\r\n                    let ballsData: BallData[] = poolTableData.balls;\r\n\r\n                    /!*let includesWhiteBall: boolean = false;\r\n                    let whiteBallData: BallData;\r\n\r\n                    _.remove(this.poolTable.balls, (ball: AbstractBall) => {\r\n                        let canBeKept: boolean = false;\r\n\r\n                        _.forEach(ballsData, (ballData: BallData) => {\r\n                            if (ballData.name == ball.name) {\r\n                                canBeKept = true;\r\n                                ball.setBallData(ballData);\r\n                            }\r\n                            if (ballData.name == this.poolTable.whiteBall.name) {\r\n                                whiteBallData = ballData;\r\n                                includesWhiteBall = true;\r\n                            }\r\n                        });\r\n\r\n                        if (!canBeKept) {\r\n                            P2WorldManager.Instance().world.removeBody(ball.p2Body);\r\n                            P2WorldManager.Instance().world.removeBody(ball.p2BodyShadow);\r\n                            ball.removed = true;\r\n                        }\r\n\r\n                        return ball.removed;\r\n                    });\r\n\r\n                    if (includesWhiteBall && !_.includes(this.poolTable.balls, this.poolTable.whiteBall)) {\r\n                        this.poolTable.whiteBall.setBallData(whiteBallData);\r\n                        this.poolTable.whiteBall.reset();\r\n                        // this.poolTable.addBallToBallsHolder(this.poolTable.whiteBall);\r\n                        this.poolTable.balls.push(this.poolTable.whiteBall);\r\n                    }\r\n\r\n                    this.graphColor = poolTableData.graphColor;*!/\r\n                    // console.log(\"lungimea array-ului la watch: \" + this.poolTable.balls.length);\r\n                    // this.poolTable.raycastFollower.visible = poolTableData.followerVisible;\r\n                    //\r\n                    // if (this.poolTable.raycastFollower.visible) {\r\n                    //     if (this.poolTable.raycastFollower.getChildByName(\"graphics\")) {\r\n                    //         (this.poolTable.raycastFollower.getChildByName(\"graphics\") as Graphics).tint = this.graphColor;\r\n                    //     }\r\n                    //\r\n                    //     this.poolTable.raycastFollower.x = poolTableData.followerX;\r\n                    //     this.poolTable.raycastFollower.y = poolTableData.followerY;\r\n                    // }\r\n\r\n                    // this.poolTable.ballPositionCircle.visible = poolTableData.ballPositionCircleVisible;\r\n                    //\r\n                    // if (this.poolTable.ballPositionCircle.visible) {\r\n                    //\r\n                    //     this.poolTable.ballPositionCircle.x = poolTableData.ballPositionCircleX;\r\n                    //     this.poolTable.ballPositionCircle.y = poolTableData.ballPositionCircleY;\r\n                    // }\r\n\r\n                    // this.poolTable.ballPositionCircleOnRaycast.visible = poolTableData.ballPositionCircleOnRaycastVisible;\r\n\r\n                    // if (this.poolTable.ballPositionCircleOnRaycast.visible) {\r\n                    //     if (this.poolTable.ballPositionCircleOnRaycast.getChildByName(\"graphics\")) {\r\n                    //         (this.poolTable.ballPositionCircleOnRaycast.getChildByName(\"graphics\") as Graphics).tint = this.graphColor;\r\n                    //     }\r\n                    //\r\n                    //     this.poolTable.ballPositionCircleOnRaycast.x = poolTableData.ballPositionCircleOnRaycastX;\r\n                    //     this.poolTable.ballPositionCircleOnRaycast.y = poolTableData.ballPositionCircleOnRaycastY;\r\n                    //\r\n                    //\r\n                    // }\r\n\r\n\r\n                    /!* if (this.graph) {\r\n                         if (this.graph.parent)\r\n                             this.graph.parent.removeChild(this.graph);\r\n                         this.graph.clear();\r\n                         this.graph = null;\r\n                     }*!/\r\n\r\n                    // this.lineBetweenCirclesVisible = poolTableData.lineBetweenCirclesVisible;\r\n                    /!*if (this.lineBetweenCirclesVisible) {\r\n                        this.graph = new Graphics();\r\n\r\n                        this.graph.lineStyle(4, this.graphColor);\r\n\r\n                        this.graph.moveTo(poolTableData.lineBetweenCirclesPoints[0], poolTableData.lineBetweenCirclesPoints[1]);\r\n                        this.graph.lineTo(poolTableData.lineBetweenCirclesPoints[2], poolTableData.lineBetweenCirclesPoints[3]);\r\n                        // this.poolTable.addChild(this.graph);\r\n                    }*!/\r\n                // }\r\n\r\n            }*/\r\n\r\n            private ballsArrayContainsBall(ballName: string): boolean {\r\n                let contains: boolean = false;\r\n\r\n                _.forEach(this.poolTable.balls, (ball: AbstractBall) => {\r\n                    if (ballName == ball.name) {\r\n                        contains = true;\r\n                        return;\r\n                    }\r\n                });\r\n\r\n                return contains;\r\n            }\r\n\r\n            private removeBallFromArray(ballName: string): void {\r\n\r\n                _.remove(this.poolTable.balls, (ball: AbstractBall) => {\r\n                    if (ballName == ball.name) {\r\n                        P2WorldManager.Instance().world.removeBody(ball.p2Body);\r\n                        P2WorldManager.Instance().world.removeBody(ball.p2BodyShadow);\r\n                    }\r\n                    return ballName == ball.name;\r\n                });\r\n\r\n\r\n            }\r\n\r\n            protected drawRayResult(result, ray) {\r\n                // console.log(\"aici la 5\");\r\n\r\n                result.getHitPoint(this.hitPoint, ray);\r\n                // Draw hit point\r\n                if (result.hasHit()) {\r\n                    let defaultColor: number = 0xffffff;\r\n                    let hexDefaultColor: Color4 = new Color4(1, 1, 1, 1);\r\n                    this.graphColor = hexDefaultColor;\r\n\r\n                    this.otherBallDirectionPoints = [];\r\n                    this.whiteBallDirectionPoints = [];\r\n                    this.whiteBallDashedPoints = [];\r\n                    // this.graph.tint = defaultColor;\r\n                    // this.poolTable.raycastFollower.visible = true;\r\n                    // if (this.poolTable.raycastFollower.getChildByName(\"graphics\")) {\r\n                    //     (this.poolTable.raycastFollower.getChildByName(\"graphics\") as Graphics).tint = defaultColor;\r\n                    // }\r\n                    // if (this.poolTable.ballPositionCircleOnRaycast.getChildByName(\"graphics\")) {\r\n                    //     (this.poolTable.ballPositionCircleOnRaycast.getChildByName(\"graphics\") as Graphics).tint = defaultColor;\r\n                    // }\r\n\r\n                    let hitPoint: Vector2 = new Vector2(this.hitPoint[0], this.hitPoint[1]);\r\n                    let rayFrom: Vector2 = new Vector2(ray.from[0], ray.from[1]);\r\n\r\n                    //creating the line from white ball to the next target\r\n\r\n                    let opposite: number = ray.from[1] - this.hitPoint[1];\r\n                    let adjacent: number = ray.from[0] - this.hitPoint[0];\r\n                    let raycastAngle: number = Math.atan2(opposite, adjacent);\r\n\r\n                    let rayCastLineStart: Vector2 = new Vector2();\r\n                    let rayCastLineEnd: Vector2 = new Vector2(Math.cos(raycastAngle), Math.sin(raycastAngle)).multiply(PockeySettings.BALL_RADIUS);\r\n\r\n                    rayCastLineEnd.x += hitPoint.x;//this.hitPoint[0];\r\n                    rayCastLineEnd.y += hitPoint.y;//this.hitPoint[1];\r\n\r\n                    rayCastLineStart.x = ray.from[0] - (PockeySettings.BALL_RADIUS + 4) * Math.cos(raycastAngle);\r\n                    rayCastLineStart.y = ray.from[1] - (PockeySettings.BALL_RADIUS + 4) * Math.sin(raycastAngle);\r\n                    // this.graph.lineStyle(4, defaultColor);\r\n\r\n                    this.lineBetweenCirclesPoints = [[rayCastLineEnd.x, -rayCastLineEnd.y - PockeySettings.BABYLON_Y_OFFSET], [rayCastLineStart.x, -rayCastLineStart.y - PockeySettings.BABYLON_Y_OFFSET]];\r\n\r\n                    let lineLength: number = this.poolTable.whiteBall.ballPosition.distanceTo(hitPoint);\r\n                    // console.log(\"line length: \" + lineLength);\r\n                    if (lineLength > PockeySettings.BALL_RADIUS * 2) {\r\n                        this.whiteBallDirectionMesh = BABYLON.MeshBuilder.CreateLines(\"lines\", {\r\n                            points: [new Vector3(this.lineBetweenCirclesPoints[0][0], this.lineBetweenCirclesPoints[0][1], 0),\r\n                                new Vector3(this.lineBetweenCirclesPoints[1][0], this.lineBetweenCirclesPoints[1][1], 0)],\r\n                            instance: this.whiteBallDirectionMesh\r\n                        });\r\n                        this.whiteBallDirectionMesh.enableEdgesRendering();\r\n                        this.whiteBallDirectionMesh.edgesWidth = 10;\r\n                        this.whiteBallDirectionMesh.setEnabled(true);\r\n                    }\r\n\r\n\r\n                    // this.whiteBallDirectionMesh.color = 3.0;\r\n\r\n                    /*  this.graph.moveTo(rayCastLineEnd.x, rayCastLineEnd.y);\r\n                      this.graph.lineTo(rayCastLineStart.x, rayCastLineStart.y);*/\r\n                    // this.graph.tint = defaultColor;\r\n                    // this.whiteBallDirectionMesh.color = Color3.White();\r\n                    if (this.whiteBallDirectionMesh)\r\n                        this.whiteBallDirectionMesh.edgesColor = hexDefaultColor;\r\n\r\n                    this.raycastFollowerMesh.edgesColor = hexDefaultColor;\r\n                    this.ballPositionCircleOnRaycastMesh.edgesColor = hexDefaultColor;\r\n\r\n                    // this.whiteBallDirectionMesh.edgesColor = hexDefaultColor;\r\n                    // this.whiteBallDirectionMesh.color = hexDefaultColor;\r\n                    //\r\n                    // this.whiteBallDirectionMesh.diffuseColor = hexDefaultColor;\r\n\r\n                    // this.lineBetweenCirclesVisible = true;\r\n                    // this.lineBetweenCirclesPoints = [rayCastLineStart.x, rayCastLineStart.y, rayCastLineEnd.x, rayCastLineEnd.y];\r\n\r\n                    // this.poolTable.raycastFollower.x = hitPoint.x;\r\n                    // this.poolTable.raycastFollower.y = hitPoint.y;\r\n                    // this.raycastFollowerPosition = new Vector2(hitPoint.x, hitPoint.y)\r\n\r\n\r\n                    this.raycastFollowerMesh.position.x = hitPoint.x;\r\n                    this.raycastFollowerMesh.position.y = -hitPoint.y - PockeySettings.BABYLON_Y_OFFSET;\r\n\r\n                    // this.expectedCollisionPoint = new Vector2(hitPoint.x, hitPoint.y);\r\n\r\n                    // this.poolTable.ballPositionCircleOnRaycast.x = rayFrom.x;\r\n                    // this.poolTable.ballPositionCircleOnRaycast.y = rayFrom.y;\r\n\r\n                    this.ballPositionCircleOnRaycastMesh.position.x = rayFrom.x;\r\n                    this.ballPositionCircleOnRaycastMesh.position.y = -rayFrom.y - PockeySettings.BABYLON_Y_OFFSET;\r\n\r\n                    /*this.poolTable.whiteBallReflectionArrow.visible = false;\r\n                    this.poolTable.otherBallReflectionArrow.visible = false;*/\r\n                    // this.poolTable.ballPositionCircleOnRaycast.visible = true;\r\n\r\n                    //if the follower hits a ball, then show collision directions graphics\r\n                    if (!_.isNull(result.shape.radius) && !_.isUndefined(result.shape.radius)) {\r\n                        let isOwnBall: boolean = this.checkIfOwnShadow(result.body);\r\n\r\n                        if (isOwnBall) {\r\n                            hexDefaultColor = this.HexToRGB(\"ca384d\");\r\n                            this.graphColor = hexDefaultColor;\r\n\r\n                            SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_UI_TEXT, [PockeyStateTexts.ownBallAiming]);\r\n                        }\r\n                        else {\r\n                            if (this.isFirstShoot) {\r\n                                SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_UI_TEXT, [PockeyStateTexts.beginGame]);\r\n                            }\r\n                            else {\r\n                                SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_UI_TEXT, [PockeyStateTexts.yourTurnToShoot]);\r\n                            }\r\n                        }\r\n\r\n                        // this.graphColor = defaultColor;\r\n\r\n                        // this.whiteBallDirectionMesh.color = Color3.Red();\r\n                        if (this.whiteBallDirectionMesh)\r\n                            this.whiteBallDirectionMesh.edgesColor = hexDefaultColor;\r\n\r\n                        this.raycastFollowerMesh.edgesColor = hexDefaultColor;\r\n                        this.ballPositionCircleOnRaycastMesh.edgesColor = hexDefaultColor;\r\n\r\n                        // this.whiteBallDirectionMesh.diffuseColor = hexDefaultColor;\r\n\r\n                        let isPuck: boolean = this.checkIfPuck(result.body);\r\n                        if (isPuck) {\r\n                            this.onAnimatePuckGoal();\r\n                            // console.log(\"e puck!!!!\");\r\n                            SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_UI_TEXT, [PockeyStateTexts.puckAiming]);\r\n                        }\r\n                        else {\r\n                            this.onStopAnimatePuckGoal();\r\n                            // console.log(\"nu e puck!!!!\");\r\n\r\n                        }\r\n                        /*else {\r\n                            if (this.isFirstShoot) {\r\n                                SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_UI_TEXT, [PockeyStateTexts.beginGame]);\r\n                            }\r\n                        }*/\r\n\r\n                        // this.graph.tint = defaultColor;\r\n                        // if (this.poolTable.raycastFollower.getChildByName(\"graphics\")) {\r\n                        //     (this.poolTable.raycastFollower.getChildByName(\"graphics\") as Graphics).tint = defaultColor;\r\n                        // }\r\n                        // if (this.poolTable.ballPositionCircleOnRaycast.getChildByName(\"graphics\")) {\r\n                        //     (this.poolTable.ballPositionCircleOnRaycast.getChildByName(\"graphics\") as Graphics).tint = defaultColor;\r\n                        // }\r\n\r\n                        let startPoint: Vector2;\r\n                        let endPoint: Vector2;\r\n                        let dottedLineArrowPoint: Vector2;\r\n                        let tangentVector: Vector2 = new Vector2();\r\n\r\n                        tangentVector.y = -(result.body.position[0] - this.hitPoint[0]);\r\n                        tangentVector.x = result.body.position[1] - this.hitPoint[1];\r\n\r\n                        tangentVector = tangentVector.normalise();\r\n\r\n\r\n                        // let deviationVector:Vector2 = (Math.cos(5 * Math.PI / 180), Math.sin(5 * Math.s)\r\n\r\n                        let relativeVelocity: Vector2 = new Vector2(this.hitPoint[0] - result.body.position[0], this.hitPoint[1] - result.body.position[1]);\r\n\r\n                        let length: number = tangentVector.dot(relativeVelocity);\r\n\r\n                        let cotangentVector: Vector2 = relativeVelocity.substract(tangentVector.multiply(length)).normalise();\r\n                        let directionLength: number = 18;\r\n\r\n\r\n                        let distanceToTheOtherBall: number =\r\n                            new Vector2(this.hitPoint[0] - Math.cos(raycastAngle) * PockeySettings.BALL_RADIUS, this.hitPoint[1] - Math.sin(raycastAngle) * PockeySettings.BALL_RADIUS)\r\n                                .distanceTo(new Vector2(result.body.position[0], result.body.position[1]));\r\n\r\n                        if (distanceToTheOtherBall > PockeySettings.BALL_RADIUS + result.shape.radius / 2) {\r\n                            distanceToTheOtherBall = PockeySettings.BALL_RADIUS + result.shape.radius / 2;\r\n                        }\r\n                        let arrowScaleFactor: number = (1 - ((result.shape.radius / 2) / distanceToTheOtherBall)) / 0.5;\r\n                        arrowScaleFactor = Math.round(arrowScaleFactor * 1000) / 1000;\r\n\r\n                        /*this.graph.beginFill(0xffff00);\r\n                        this.graph.drawCircle(this.poolTable.whiteBall.x, this.poolTable.whiteBall.y, 4);\r\n                        this.graph.drawCircle(result.body.position[0], result.body.position[1], 4);\r\n                        this.graph.drawCircle(this.poolTable.raycastFollower.x, this.poolTable.raycastFollower.y, 4);\r\n                        this.graph.endFill();*/\r\n                        this.arrowsDeviationLength = PockeySettings.BALL_RADIUS * 2 - this.calculateDeviation(new Vector2(hitPoint.x, hitPoint.y), new Vector2(this.poolTable.whiteBall.position.x, this.poolTable.whiteBall.y), new Vector2(result.body.position[0], result.body.position[1]));\r\n                        // console.log(\"deviationsalam: \" + this.arrowsDeviationLength);\r\n\r\n                        /*   opposite = hitPoint.x - tangentVector.x;\r\n                           adjacent = hitPoint.y - tangentVector.y;\r\n                           raycastAngle = Math.atan2(opposite, adjacent);// + 5 * Math.PI / 180;\r\n\r\n                           let tangentToHitPointDistance:number = tangentVector.distanceTo(hitPoint);\r\n\r\n                           let newTangent:Vector2 =  */\r\n                        let whiteBallArrowAngleCorrection: number = 1;//(tangentVector.x * tangentVector.y < 0) ? -1 : 1;\r\n                        if (arrowScaleFactor > 0.03 && !isOwnBall) {\r\n                            //white ball direction graphics\r\n\r\n                            // let whiteBallArrowAngleCorrection: number = (tangentVector.x * tangentVector.y < 0) ? -1 : 1;\r\n\r\n\r\n                            startPoint = new Vector2(this.hitPoint[0] - (PockeySettings.BALL_RADIUS * tangentVector.x), this.hitPoint[1] - (PockeySettings.BALL_RADIUS * tangentVector.y));\r\n                            let opposedStartPoint: Vector2 = new Vector2(this.hitPoint[0] + (PockeySettings.BALL_RADIUS * tangentVector.x), this.hitPoint[1] + (PockeySettings.BALL_RADIUS * tangentVector.y));\r\n                            // console.log(\"startPoint.distanceTo(rayFrom): \" + startPoint.distanceTo(rayFrom));\r\n                            // console.log(\"oppStartPoint.distanceTo(rayFrom): \" + opposedStartPoint.distanceTo(rayFrom));\r\n                            // console.log(\"=====================\");\r\n\r\n                            if (startPoint.distanceTo(rayCastLineEnd) <= opposedStartPoint.distanceTo(rayCastLineEnd)) {\r\n                                startPoint = opposedStartPoint;\r\n                                whiteBallArrowAngleCorrection = -1;\r\n                            }\r\n\r\n\r\n                            opposite = startPoint.x - hitPoint.x;\r\n                            adjacent = startPoint.y - hitPoint.y;\r\n                            raycastAngle = Math.atan2(opposite, adjacent) + whiteBallArrowAngleCorrection * (this.arrowsDeviationLength / 3.38) * Math.PI / 180;\r\n\r\n// console.log(\"unghi ajustare: \" + (this.arrowsDeviationLength / 3));\r\n                            // point[1] - (Math.cos(angle) * distance)\r\n                            startPoint = new Vector2(\r\n                                hitPoint.x + Math.sin(raycastAngle) * PockeySettings.BALL_RADIUS,\r\n                                hitPoint.y + Math.cos(raycastAngle) * PockeySettings.BALL_RADIUS);\r\n                            //\r\n                            /* this.graph.moveTo(this.poolTable.raycastFollower.x, this.poolTable.raycastFollower.y);\r\n                             this.graph.lineTo(newStart.x, newStart.y);\r\n\r\n                             this.graph.beginFill(0xff0000);\r\n                             this.graph.drawCircle(newStart.x, newStart.y, 4);\r\n                             this.graph.endFill();\r\n\r\n                             this.graph.beginFill(0x00ff00);\r\n                             this.graph.drawCircle(startPoint.x, startPoint.y, 4);\r\n                             this.graph.endFill();*/\r\n                            //\r\n                            //\r\n\r\n                            /* endPoint = new Vector2(\r\n                                 startPoint.x - whiteBallArrowAngleCorrection * tangentVector.x * directionLength / 3 * arrowScaleFactor,\r\n                                 startPoint.y - whiteBallArrowAngleCorrection * tangentVector.y * directionLength / 3 * arrowScaleFactor\r\n                             );*/\r\n\r\n                            endPoint = new Vector2(\r\n                                startPoint.x + Math.sin(raycastAngle) * (PockeySettings.BALL_RADIUS * arrowScaleFactor),\r\n                                startPoint.y + Math.cos(raycastAngle) * (PockeySettings.BALL_RADIUS * arrowScaleFactor),\r\n                            );\r\n\r\n                            this.whiteBallDirectionPoints = [[startPoint.x, -startPoint.y - PockeySettings.BABYLON_Y_OFFSET], [endPoint.x, -endPoint.y - PockeySettings.BABYLON_Y_OFFSET]];\r\n\r\n                            // this.whiteBallPostCollisionDirectionMesh = BABYLON.Mesh.CreateLines(\"whiteBallPostCollisionDirectionMesh\", [new Vector3(this.whiteBallDirectionPoints[0][0], this.whiteBallDirectionPoints[0][1], 0), new Vector3(this.whiteBallDirectionPoints[1][0], this.whiteBallDirectionPoints[1][1], 0)], AbstractEntryPoint.scene, true);\r\n                            // if(this.whiteBallPostCollisionDirectionMesh)\r\n                            //     this.whiteBallPostCollisionDirectionMesh.clear();\r\n                            this.whiteBallPostCollisionDirectionMesh = BABYLON.MeshBuilder.CreateLines(\"whiteBallPostCollisionDirectionMesh\", {\r\n                                points: [new Vector3(this.whiteBallDirectionPoints[0][0], this.whiteBallDirectionPoints[0][1], 0), new Vector3(this.whiteBallDirectionPoints[1][0], this.whiteBallDirectionPoints[1][1], 0)],\r\n                                instance: this.whiteBallPostCollisionDirectionMesh\r\n                            });\r\n                            this.whiteBallPostCollisionDirectionMesh.enableEdgesRendering();\r\n                            this.whiteBallPostCollisionDirectionMesh.edgesWidth = 10;\r\n                            this.whiteBallPostCollisionDirectionMesh.position.z = -PockeySettings.BALL_RADIUS * 2;\r\n                            this.whiteBallPostCollisionDirectionMesh.edgesColor = hexDefaultColor;\r\n                            this.whiteBallPostCollisionDirectionMesh.setEnabled(true);\r\n\r\n                            // this.graph.lineStyle(4, 0xffffff);\r\n                            // this.graph.moveTo(startPoint.x, startPoint.y);\r\n\r\n                            // this.graph.lineTo(endPoint.x, endPoint.y);\r\n\r\n                            startPoint.x = endPoint.x;\r\n                            startPoint.y = endPoint.y;\r\n\r\n                            endPoint.x += Math.sin(raycastAngle) * (directionLength + 10);\r\n                            endPoint.y += Math.cos(raycastAngle) * (directionLength + 10);\r\n\r\n\r\n                            // let dottedLineArrowPoint: Vector2 = PixiDashedLine.drawDashedLine(this.graph, startPoint.x, startPoint.y, endPoint.x, endPoint.y, 1, 0, 0xffffff, 4, 1);\r\n                            // directionLength = 28;\r\n\r\n                            // let dottedLineArrowPoint: Vector2 = PixiDashedLine.drawDottedLine(this.graph, startPoint.x, startPoint.y, endPoint.x, endPoint.y, 1, 8, 0xffffff, 1);\r\n\r\n\r\n                            // this.poolTable.whiteBallReflectionArrow.x = dottedLineArrowPoint.x;\r\n                            // this.poolTable.whiteBallReflectionArrow.y = dottedLineArrowPoint.y;\r\n\r\n                            this.whiteBallDashedPoints = [[startPoint.x, -startPoint.y - PockeySettings.BABYLON_Y_OFFSET], [endPoint.x, -endPoint.y - PockeySettings.BABYLON_Y_OFFSET]];\r\n\r\n                            // this.whiteBallDashedMesh = BABYLON.Mesh.CreateDashedLines(\"whiteBallDashedMesh\", this.whiteBallDashedPoints, 3, 3, 4, AbstractEntryPoint.scene, true);\r\n                            this.whiteBallDashedMesh = BABYLON.MeshBuilder.CreateDashedLines(\"whiteBallDashedMesh\", {\r\n\r\n                                points: [new Vector3(this.whiteBallDashedPoints[0][0], this.whiteBallDashedPoints[0][1], 0), new Vector3(this.whiteBallDashedPoints[1][0], this.whiteBallDashedPoints[1][1], 0)],//this.whiteBallDashedPoints,\r\n\r\n                                instance: this.whiteBallDashedMesh\r\n                            });\r\n\r\n                            this.whiteBallDashedMesh.enableEdgesRendering();\r\n                            this.whiteBallDashedMesh.edgesWidth = 10;\r\n                            this.whiteBallDashedMesh.position.z = -PockeySettings.BALL_RADIUS * 2;\r\n                            this.whiteBallDashedMesh.edgesColor = hexDefaultColor;\r\n                            this.whiteBallDashedMesh.setEnabled(true);\r\n                            // this.poolTable.whiteBallReflectionArrow.rotation = Math.atan2(endPoint.y - startPoint.y, endPoint.x - startPoint.x) + 135 * Math.PI / 180;\r\n                            // this.poolTable.whiteBallReflectionArrow.visible = true;\r\n\r\n                            endPoint.x += Math.sin(raycastAngle) * 5;\r\n                            endPoint.y += Math.cos(raycastAngle) * 5;\r\n                            this.whiteBallReflectionArrowMesh.position.x = endPoint.x;\r\n                            this.whiteBallReflectionArrowMesh.position.y = -endPoint.y - PockeySettings.BABYLON_Y_OFFSET;\r\n\r\n                            // this.poolTable.whiteBallReflectionArrowMesh.rotation.z = Math.atan2(endPoint.y - startPoint.y, endPoint.x - startPoint.x);// + 180 * Math.PI / 180;\r\n                            this.whiteBallReflectionArrowMesh.rotation.z = -Math.atan2(endPoint.y - startPoint.y, endPoint.x - startPoint.x) - 135 * Math.PI / 180;// + Math.PI;\r\n                            this.whiteBallReflectionArrowMesh.setEnabled(true);\r\n\r\n                        }\r\n                        //other ball direction graphics\r\n\r\n                        if ((1 - arrowScaleFactor) > 0.01 && !isOwnBall) {\r\n                            startPoint = new Vector2(this.hitPoint[0] - (PockeySettings.BALL_RADIUS * cotangentVector.x), this.hitPoint[1] - (PockeySettings.BALL_RADIUS * cotangentVector.y));\r\n\r\n\r\n                            /* opposite = startPoint.x - this.poolTable.raycastFollower.x;\r\n                             adjacent = startPoint.y - this.poolTable.raycastFollower.y;\r\n                             this.arrowsDeviationLength = PockeySettings.BALL_RADIUS * 2 - this.arrowsDeviationLength;\r\n\r\n                             raycastAngle = Math.atan2(opposite, adjacent) + whiteBallArrowAngleCorrection * (this.arrowsDeviationLength / 8) * Math.PI / 180;*/\r\n\r\n                            // console.log(\"unghi ajustare: \" + (this.arrowsDeviationLength / 3));\r\n                            // point[1] - (Math.cos(angle) * distance)\r\n                            // let newStart: Vector2 = new Vector2(\r\n                            //     this.poolTable.raycastFollower.x + Math.sin(raycastAngle) * PockeySettings.BALL_RADIUS,\r\n                            //     this.poolTable.raycastFollower.y + Math.cos(raycastAngle) * PockeySettings.BALL_RADIUS);\r\n                            // /**/\r\n                            //\r\n                            // opposite = newStart.x - this.poolTable.raycastFollower.x;\r\n                            // adjacent = newStart.y - this.poolTable.raycastFollower.y;\r\n                            //\r\n                            // raycastAngle = Math.atan2(opposite, adjacent);\r\n\r\n                            /* this.graph.lineStyle(0, 0xffffff);\r\n                             this.graph.beginFill(0xff0000);\r\n                             this.graph.drawCircle(startPoint.x, startPoint.y, 3);\r\n                             this.graph.endFill();*/\r\n\r\n                            /*  this.graph.lineStyle(0, 0x0000ff);\r\n                              this.graph.beginFill(0x0000ff);\r\n                              this.graph.drawCircle(newStart.x, newStart.y, 3);\r\n                              this.graph.endFill();\r\n\r\n                              opposite = (newStart.x - result.body.position[0]);\r\n                              adjacent = newStart.y - result.body.position[1];\r\n\r\n                              raycastAngle = Math.atan2(opposite, adjacent);*/\r\n\r\n                            /* let newEnd: Vector2 = new Vector2(\r\n                                 startPoint.x - Math.sin(raycastAngle) * directionLength  * (1 - arrowScaleFactor),\r\n                                 startPoint.y - Math.cos(raycastAngle) * directionLength  * (1 - arrowScaleFactor)\r\n                             );\r\n\r\n                             // this.graph.lineStyle(2, 0x0000ff);\r\n                             // this.graph.moveTo(newStart.x, newStart.y);\r\n                             // this.graph.lineTo(newEnd.x, newEnd.y);*/\r\n\r\n                            endPoint = new Vector2(\r\n                                startPoint.x - cotangentVector.x * (PockeySettings.BALL_RADIUS * 2 + 6 + directionLength * (1 - arrowScaleFactor)),\r\n                                startPoint.y - cotangentVector.y * (PockeySettings.BALL_RADIUS * 2 + 6 + directionLength * (1 - arrowScaleFactor))\r\n                            );\r\n\r\n                            this.otherBallDirectionPoints = [[startPoint.x, -startPoint.y - PockeySettings.BABYLON_Y_OFFSET], [endPoint.x, -endPoint.y - PockeySettings.BABYLON_Y_OFFSET, 0]];\r\n\r\n\r\n                            // this.otherBallPostCollisionDirectionMesh = BABYLON.Mesh.CreateLines(\"otherBallPostCollisionDirectionMesh\", [new Vector3(this.otherBallDirectionPoints[0][0], this.otherBallDirectionPoints[0][1], 0), new Vector3(this.otherBallDirectionPoints[1][0], this.otherBallDirectionPoints[1][1], 0)], AbstractEntryPoint.scene, true);\r\n\r\n\r\n                            this.otherBallPostCollisionDirectionMesh = BABYLON.MeshBuilder.CreateLines(\"otherBallPostCollisionDirectionMesh\", {\r\n                                points: [new Vector3(this.otherBallDirectionPoints[0][0], this.otherBallDirectionPoints[0][1], 0), new Vector3(this.otherBallDirectionPoints[1][0], this.otherBallDirectionPoints[1][1], 0)],\r\n                                instance: this.otherBallPostCollisionDirectionMesh\r\n                            });\r\n\r\n                            this.otherBallPostCollisionDirectionMesh.enableEdgesRendering();\r\n                            this.otherBallPostCollisionDirectionMesh.edgesWidth = 10;\r\n                            this.otherBallPostCollisionDirectionMesh.position.z = -PockeySettings.BALL_RADIUS * 2;\r\n                            this.otherBallPostCollisionDirectionMesh.edgesColor = hexDefaultColor;\r\n                            this.otherBallPostCollisionDirectionMesh.setEnabled(true);\r\n\r\n                            // this.graph.lineStyle(4, 0xffffff);\r\n                            // this.graph.moveTo(startPoint.x, startPoint.y);\r\n                            // this.graph.lineTo(endPoint.x, endPoint.y);\r\n\r\n                            // startPoint.x = endPoint.x;\r\n                            // startPoint.y = endPoint.y;\r\n\r\n                            // endPoint.x -= cotangentVector.x * directionLength * 2 / 3 * (1 - arrowScaleFactor);\r\n                            // endPoint.y -= cotangentVector.y * directionLength * 2 / 3 * (1 - arrowScaleFactor);\r\n\r\n                            // endPoint.x -= cotangentVector.x * directionLength * (1 - arrowScaleFactor);\r\n                            // endPoint.y -= cotangentVector.y * directionLength * (1 - arrowScaleFactor);\r\n\r\n                            // this.graph.lineStyle(2, 0xffffff);\r\n                            // dottedLineArrowPoint = PixiDashedLine.drawDottedLine(this.graph, startPoint.x, startPoint.y, endPoint.x, endPoint.y, 1, 10, 0xffffff, 1);\r\n\r\n\r\n                            // dottedLineArrowPoint = PixiDashedLine.drawDashedLine(this.graph, startPoint.x, startPoint.y, endPoint.x, endPoint.y, 1, 0, 0xffffff, 4, 1);\r\n                            // dottedLineArrowPoint = PixiDashedLine.drawDottedLine(this.graph, startPoint.x, startPoint.y, endPoint.x, endPoint.y, 1, 10, 0xffffff, 1);\r\n\r\n                            this.otherBallReflectionArrowMesh.position.x = endPoint.x;\r\n                            this.otherBallReflectionArrowMesh.position.y = -endPoint.y - PockeySettings.BABYLON_Y_OFFSET;\r\n                            this.otherBallReflectionArrowMesh.rotation.z = -Math.atan2(endPoint.y - startPoint.y, endPoint.x - startPoint.x) - 135 * Math.PI / 180;\r\n\r\n                            this.otherBallReflectionArrowMesh.setEnabled(true);\r\n\r\n                            // this.poolTable.otherBallReflectionArrow.x = endPoint.x;\r\n                            // this.poolTable.otherBallReflectionArrow.y = endPoint.y;\r\n                            // this.poolTable.otherBallReflectionArrow.rotation = Math.atan2(endPoint.y - startPoint.y, endPoint.x - startPoint.x) + 135 * Math.PI / 180;\r\n                            // this.poolTable.otherBallReflectionArrow.visible = true;\r\n\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.onStopAnimatePuckGoal();\r\n                    }\r\n                    // this.poolTable.addChild(this.graph);\r\n                }\r\n\r\n            };\r\n\r\n\r\n            protected ballsAreMoving(): boolean {\r\n                let areMoving: boolean = false;\r\n                _.forEach(this.poolTable.balls, (ball: AbstractBall, id: number) => {\r\n                    if (ball.moving || ball.animationInProgress) {\r\n\r\n                        areMoving = true;\r\n                        return;\r\n                    }\r\n                });\r\n\r\n                return areMoving;\r\n            }\r\n\r\n            protected onStartVersusGame() {\r\n                // console.log(\"%c Pool T Manager: intra la onStartVersusGame\", \"background: red; color: white; font-weight:bold; \");\r\n                // this.reactivateStick();\r\n                // if (this.poolTable.poolStick && !this.poolTable.poolStick.isActive) {\r\n                //     this.poolTable.poolStick.activate(new Point(this.poolTable.poolStick.startPosition.x, this.poolTable.poolStick.startPosition.y));\r\n                //     // console.log(\"PockeyStateMachine.Instance().fsm.currentState: \" + PockeyStateMachine.Instance().fsm.currentState);\r\n                //     SignalsManager.DispatchSignal(PockeySignalTypes.POOLSTICK_ACTIVATED);\r\n                // }\r\n                // // this.playerTurnStarted = true;\r\n                //\r\n                // this.poolTable.poolStick.activate(new Point(this.poolTable.poolStick.startPosition.x, this.poolTable.poolStick.startPosition.y));\r\n                // this.ticker.start();\r\n            }\r\n\r\n            private reactivateStick() {\r\n                // console.log(\"%c Pool T Manager: intra la reactivate Stick\", \"background: red; color: white; font-weight:bold; \");\r\n                // this.playerTurnStarted = true;\r\n\r\n                _.forEach(this.poolTable.balls, (ball: AbstractBall) => {\r\n                    if (!ball.canBeRemoved) {\r\n                        ball.addShadowBody();\r\n                    }\r\n                });\r\n                // this.poolTable.raycastFollower.visible = true;\r\n                // this.poolTable.ballPositionCircleOnRaycast.visible = true;\r\n\r\n                this.poolTable.poolStick.activate(this.poolTable.whiteBall.position);\r\n            }\r\n\r\n            private checkIfOwnShadow(body: p2.Body): boolean {\r\n                let isOwnBall: boolean = false;\r\n                _.forEach(this.poolTable.balls, (ball: AbstractBall) => {\r\n\r\n                    if (ball.ballType == GameManager.Instance().currentPlayer.type && ball.p2BodyShadow.id == body.id) {\r\n                        isOwnBall = true;\r\n                    }\r\n\r\n                });\r\n                return isOwnBall;\r\n            }\r\n\r\n            private checkIfPuck(body: p2.Body): boolean {\r\n                let isPuck: boolean = false;\r\n                _.forEach(this.poolTable.balls, (ball: AbstractBall) => {\r\n\r\n                    if (ball.ballType == BallType.Puck && ball.p2BodyShadow.id == body.id) {\r\n                        // console.log(\"ball.p2Body.id, body.id \" + ball.p2Body.id, body.id);\r\n                        // && ball.p2Body.id == body.id\r\n                        isPuck = true;\r\n                    }\r\n\r\n                });\r\n                return isPuck;\r\n            }\r\n\r\n            private checkIfOwnBall(body: p2.Body): boolean {\r\n                let isOwnBall: boolean = false;\r\n                _.forEach(this.poolTable.balls, (ball: AbstractBall) => {\r\n                    if (ball.ballType == GameManager.Instance().currentPlayer.type && ball.p2Body.id == body.id) {\r\n                        isOwnBall = true;\r\n                    }\r\n                });\r\n                return isOwnBall;\r\n            }\r\n\r\n            // p - point\r\n// v - start point of segment\r\n// w - end point of segment\r\n\r\n            private calculateDeviation(point: Vector2, firstSegmentPoint: Vector2, secondSegmentPoint: Vector2): number {\r\n                // return Math.sqrt(this.distToSegmentSquared(point, firstSegmentPoint, secondSegmentPoint));\r\n                let x = point.x;\r\n                let y = point.y;\r\n                let x1 = firstSegmentPoint.x;\r\n                let y1 = firstSegmentPoint.y;\r\n                let x2 = secondSegmentPoint.x;\r\n                let y2 = secondSegmentPoint.y;\r\n\r\n                let A = x - x1;\r\n                let B = y - y1;\r\n                let C = x2 - x1;\r\n                let D = y2 - y1;\r\n\r\n                let dot = A * C + B * D;\r\n                let len_sq = C * C + D * D;\r\n                let param = -1;\r\n                if (len_sq != 0) //in case of 0 length line\r\n                    param = dot / len_sq;\r\n\r\n                let xx, yy;\r\n\r\n                if (param < 0) {\r\n                    xx = x1;\r\n                    yy = y1;\r\n                }\r\n                else if (param > 1) {\r\n                    xx = x2;\r\n                    yy = y2;\r\n                }\r\n                else {\r\n                    xx = x1 + param * C;\r\n                    yy = y1 + param * D;\r\n                }\r\n\r\n                let dx = x - xx;\r\n                let dy = y - yy;\r\n\r\n                return Math.sqrt(dx * dx + dy * dy);\r\n            }\r\n\r\n\r\n            private distToSegmentSquared(point: Vector2, firstSegmentPoint: Vector2, secondSegmentPoint): number {\r\n                let l2 = firstSegmentPoint.distanceTo(secondSegmentPoint);\r\n                if (l2 == 0)\r\n                    return point.distanceTo(firstSegmentPoint);\r\n\r\n                let t = ((point.x - firstSegmentPoint.x) * (secondSegmentPoint.x - firstSegmentPoint.x) + (point.y - firstSegmentPoint.y) * (secondSegmentPoint.y - firstSegmentPoint.y)) / l2;\r\n                t = Math.max(0, Math.min(1, t));\r\n\r\n                return point.distanceTo(new Vector2(\r\n                    firstSegmentPoint.x + t * (secondSegmentPoint.x - firstSegmentPoint.x),\r\n                    firstSegmentPoint.y + t * (secondSegmentPoint.y - firstSegmentPoint.y)));\r\n            }\r\n\r\n\r\n            private HexToRGB(hex: string): Color4 {\r\n\r\n                var r = parseInt(hex.substring(0, 2), 16) / 255;\r\n                var g = parseInt(hex.substring(2, 4), 16) / 255;\r\n                var b = parseInt(hex.substring(4, 6), 16) / 255;\r\n\r\n                return new BABYLON.Color4(r, g, b, 1);\r\n            }\r\n\r\n            private create2Dpoly(options: any, scene: BABYLON.Scene) {\r\n                let pos;\r\n                let points = [];\r\n                let disc = BABYLON.VertexData.CreateDisc(options);\r\n                pos = disc.positions;\r\n                //skip the center point\r\n                for (let i = 1; i < disc.positions.length / 3; i++) {\r\n                    points.push(new BABYLON.Vector3(pos[i * 3], pos[i * 3 + 1], pos[i * 3 + 2]));\r\n                }\r\n\r\n                return BABYLON.MeshBuilder.CreateLines(\"circle\", {points: points}, scene);\r\n            }\r\n\r\n            // function distToSegment (p, v, w) {\r\n            //\r\n            // }\r\n        }\r\n\r\n\r\n    }\r\n}","///<reference path=\"../../../Framework/Utils/touch-handler.ts\"/>\r\n\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 7/17/2018\r\n */\r\n\r\n\r\nnamespace Pockey {\r\n    export module GameModule {\r\n\r\n        import SignalsManager = Framework.Signals.SignalsManager;\r\n        import PockeySignalTypes = Pockey.SignalsModule.PockeySignalTypes;\r\n        import PockeyStates = Pockey.StateMachineModule.PockeyStates;\r\n        import PockeyStateMachine = Pockey.StateMachineModule.PockeyStateMachine;\r\n        import Point = PIXI.Point;\r\n        import Graphics = PIXI.Graphics;\r\n        import Vector2 = Framework.Utils.Vector2;\r\n        import TouchHandler = Framework.Utils.TouchHandler;\r\n        import PockeyStateTexts = Pockey.StateMachineModule.PockeyStateTexts;\r\n\r\n        export class PoolTableManagerMobile extends PoolTableManager {\r\n            private whiteBallPositionConfirmed: boolean = false;\r\n            private rearrangeStickStarted: boolean = false;\r\n\r\n            // private whiteBallPositionConfirmed:boolean = false;\r\n\r\n            constructor() {\r\n                super();\r\n\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.MOBILE_WHITE_BALL_REPOSITION_CONFIRMED, this.onWhiteBallPositionConfirmed.bind(this));\r\n            }\r\n\r\n            private onWhiteBallPositionConfirmed(): void {\r\n                this.whiteBallPositionConfirmed = true;\r\n            }\r\n\r\n            protected onShoot(): void {\r\n                super.onShoot();\r\n\r\n                this.rearrangeStickStarted = false;\r\n            }\r\n\r\n            protected update(): void {\r\n\r\n                if (PockeyStateMachine.Instance().fsm.currentState == PockeyStates.onRepositionWhiteBall) {\r\n                    /*if (!this.poolTable.leftGoalie.moving)\r\n                        this.poolTable.leftGoalie.startMoving();\r\n\r\n                    if (!this.poolTable.rightGoalie.moving)\r\n                        this.poolTable.rightGoalie.startMoving();*/\r\n\r\n                    this.onRepositionWhiteBall();\r\n\r\n                    return;\r\n                }\r\n\r\n                else if (PockeyStateMachine.Instance().fsm.currentState == PockeyStates.onShoot) {\r\n                    if (!this.ballsAreMoving()) {\r\n\r\n                        SignalsManager.DispatchSignal(PockeySignalTypes.PREPARE_NEXT_TURN);\r\n                    }\r\n                    else {\r\n                        this.handleCollisions();\r\n                        // this.sendElementsDataToManager();\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                if (PockeyStateMachine.Instance().fsm.currentState == PockeyStates.onRearrangeStick) {\r\n\r\n                    if (this.poolTable.poolStick.rotationEnabled) {\r\n                       /* if (!this.poolTable.leftGoalie.moving)\r\n                            this.poolTable.leftGoalie.startMoving();\r\n\r\n                        if (!this.poolTable.rightGoalie.moving)\r\n                            this.poolTable.rightGoalie.startMoving();*/\r\n\r\n                        if (this.isFirstShoot) {\r\n                            SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_UI_TEXT, [PockeyStateTexts.beginGame]);\r\n                        }\r\n                        else {\r\n                            SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_UI_TEXT, [PockeyStateTexts.yourTurnToShoot]);\r\n                        }\r\n\r\n                        this.poolTable.poolStick.x = this.poolTable.whiteBall.x;\r\n                        this.poolTable.poolStick.y = this.poolTable.whiteBall.y;\r\n                        // = new Point(this.poolTable.whieBall.position.x, this.poolTable.whiteBall.position.y);\r\n\r\n                        // console.log(\"PockeyStateMachine.Instance().fsm.currentState: \" + PockeyStateMachine.Instance().fsm.currentState);\r\n\r\n                        // if (!this.poolTable.poolStick.isActive)\r\n                        // {\r\n                        //     // this.poolTable.poolStick.activate(new Point(this.poolTable.poolStick.startPosition.x, this.poolTable.poolStick.startPosition.y));\r\n                        // }\r\n\r\n                        /*if (this.graph) {\r\n                            if (this.graph.parent)\r\n                                this.graph.parent.removeChild(this.graph);\r\n                            this.graph.clear();\r\n                            this.graph = null;\r\n                        }\r\n\r\n                        this.graph = new Graphics();*/\r\n\r\n                        let localPoint = this.poolTable.toLocal(new Point(TouchHandler.Instance().position.x, TouchHandler.Instance().position.y));\r\n                        if (!this.rearrangeStickStarted) {\r\n                            // this.rearrangeStickStarted = true;\r\n                            localPoint.x = this.poolTable.poolStick.x + 10 * Math.cos(this.poolTable.poolStick.rotation);\r\n                            localPoint.y = this.poolTable.poolStick.y + 10 * Math.sin(this.poolTable.poolStick.rotation);\r\n                            /* let salam:Graphics = new Graphics();\r\n                             salam.beginFill(0xff9900);\r\n                             salam.drawCircle(localPoint.x, localPoint.y, 20)\r\n                             salam.endFill();\r\n                             this.poolTable.addChild(salam)*/\r\n\r\n                            // console.log(\"aicisha: \" + this.poolTable.poolStick.rotation * 180 / Math.PI, localPoint.x, localPoint.y);\r\n                            // this.rearrangeStickStarted = true;\r\n                        }\r\n\r\n                        if (TouchHandler.Instance().isTouchMoving) {\r\n                            this.rearrangeStickStarted = true;\r\n                        }\r\n                        let opposite: number = localPoint.y - this.poolTable.whiteBall.y;\r\n                        let adjacent: number = localPoint.x - this.poolTable.whiteBall.x;\r\n                        let rot: number = Math.atan2(opposite, adjacent);\r\n\r\n                        let dir: Vector2 = new Vector2(Math.cos(rot), Math.sin(rot)).multiply(1100);\r\n\r\n                        this.newPos = new Vector2(this.poolTable.whiteBall.x + dir.x, this.poolTable.whiteBall.y + dir.y);\r\n                        this.shortestContactDistance = this.newPos.distanceTo(this.poolTable.whiteBall.position);\r\n                        //===================\r\n                        this.startRayCastPoint[0] = this.poolTable.whiteBall.x;\r\n                        this.startRayCastPoint[1] = this.poolTable.whiteBall.y;\r\n                        this.endRayCastPoint[0] = this.newPos.x;\r\n                        this.endRayCastPoint[1] = this.newPos.y;\r\n                        // P2WorldManager.Instance().world.removeBody(this.poolTable.whiteBall.p2Body);\r\n\r\n                        p2.vec2.copy(this.rayClosest.from, this.startRayCastPoint);\r\n                        p2.vec2.copy(this.rayClosest.to, this.endRayCastPoint);\r\n                        // this.rayClosest.\r\n                        this.rayClosest.update();\r\n                        this.raycastResult.reset();\r\n                        P2WorldManager.Instance().world.raycast(this.raycastResult, this.rayClosest);\r\n                        this.drawRayResult(this.raycastResult, this.rayClosest);\r\n                    }\r\n                    // this.sendElementsDataToManager();\r\n                }\r\n                /*// this.graph.lineStyle(2, 0xffffff);\r\n                // this.graph.moveTo(localPoint.x, localPoint.y);\r\n                if (this.repositionWhiteBallEnabled) {\r\n                    if (this.graph) {\r\n                        if (this.graph.parent)\r\n                            this.graph.parent.removeChild(this.graph);\r\n                        this.graph.clear();\r\n                        this.graph = null;\r\n                    }\r\n\r\n                    // if (localPoint.x < this.poolTable.rightLimit &&\r\n                    //     localPoint.x > this.poolTable.leftLimit &&\r\n                    //     localPoint.y < this.poolTable.downLimit &&\r\n                    //     localPoint.y > this.poolTable.upLimit) {\r\n\r\n                    let ballPositionCirclePosition: Vector2 = new Vector2(localPoint.x, localPoint.y);\r\n                    if (ballPositionCirclePosition.x + PockeySettings.BALL_RADIUS > this.poolTable.rightLimit)\r\n                        ballPositionCirclePosition.x = this.poolTable.rightLimit - PockeySettings.BALL_RADIUS;\r\n                    if (ballPositionCirclePosition.x - PockeySettings.BALL_RADIUS < this.poolTable.leftLimit)\r\n                        ballPositionCirclePosition.x = this.poolTable.leftLimit + PockeySettings.BALL_RADIUS;\r\n\r\n                    if (ballPositionCirclePosition.y + PockeySettings.BALL_RADIUS > this.poolTable.downLimit)\r\n                        ballPositionCirclePosition.y = this.poolTable.downLimit - PockeySettings.BALL_RADIUS;\r\n                    if (ballPositionCirclePosition.y - PockeySettings.BALL_RADIUS < this.poolTable.upLimit)\r\n                        ballPositionCirclePosition.y = this.poolTable.upLimit + PockeySettings.BALL_RADIUS;\r\n\r\n                    let ballPosition: Vector2;// = new Vector2(this.poolTable.ballPositionCircle.x,this.poolTable.ballPositionCircle.y)\r\n\r\n                    _.forEach(this.poolTable.balls, (ball: AbstractBall) => {\r\n                        ballPosition = new Vector2(ball.x, ball.y);\r\n                        if (ballPositionCirclePosition.distanceTo(ballPosition) < ball.radius + PockeySettings.BALL_RADIUS) {\r\n                            let opposite: number = ballPositionCirclePosition.y - ballPosition.y;\r\n                            let adjacent: number = ballPositionCirclePosition.x - ballPosition.x;\r\n                            let rotAngle: number = Math.atan2(opposite, adjacent);\r\n\r\n                            ballPositionCirclePosition.x = ballPosition.x + (PockeySettings.BALL_RADIUS + ball.radius) * Math.cos(rotAngle);\r\n                            ballPositionCirclePosition.y = ballPosition.y + (PockeySettings.BALL_RADIUS + ball.radius) * Math.sin(rotAngle);\r\n                            let isInteresectingWithOthers: boolean = false;\r\n                            _.forEach(this.poolTable.balls, (ball2: AbstractBall) => {\r\n                                if (ball2 != ball) {\r\n                                    let ball2Position: Vector2 = new Vector2(ball2.x, ball2.y);\r\n                                    if (ball2Position.distanceTo(ballPositionCirclePosition) < PockeySettings.BALL_RADIUS + ball2.radius) {\r\n                                        isInteresectingWithOthers = true;\r\n                                        return;\r\n                                    }\r\n                                }\r\n                            });\r\n\r\n                            if (isInteresectingWithOthers) {\r\n                                ballPositionCirclePosition.x = this.lastGoodRepositionPoint.x;\r\n                                ballPositionCirclePosition.y = this.lastGoodRepositionPoint.y;\r\n                            }\r\n                            else {\r\n                                this.lastGoodRepositionPoint.x = ballPositionCirclePosition.x;\r\n                                this.lastGoodRepositionPoint.y = ballPositionCirclePosition.y;\r\n                            }\r\n                        }\r\n\r\n                        TweenMax.to(this.poolTable.ballPositionCircle, 0.1, {\r\n                            x: ballPositionCirclePosition.x,\r\n                            y: ballPositionCirclePosition.y\r\n                        });\r\n                        this.poolTable.ballPositionCircle.visible = true;\r\n\r\n\r\n                    });\r\n\r\n                    if (MouseHandler.Instance().left.pressed) {\r\n                        // SignalsManager.DispatchSignal(PockeySignalTypes.WHITE_BALL_REPOSITIONED);\r\n                        this.repositionWhiteBallEnabled = false;\r\n                        this.poolTable.ballPositionCircle.visible = false;\r\n                        // this.poolTable.whiteBall.canBeRemoved = false;\r\n                        // this.poolTable.whiteBall.x = ballPositionCirclePosition.x;\r\n                        // P2WorldManager.Instance().world.addBody(this.poolTable.whiteBall.p2Body);\r\n                        // this.poolTable.whiteBall.p2Body.velocity[0] = 0;\r\n                        // this.poolTable.whiteBall.p2Body.velocity[1] = 0;\r\n                        // this.poolTable.whiteBall.addShadowBody();\r\n\r\n                        // this.poolTable.whiteBall.alpha = 1;\r\n                        this.poolTable.whiteBall.reset();\r\n                        this.poolTable.whiteBall.ballPosition = ballPositionCirclePosition;\r\n                        this.poolTable.balls.push(this.poolTable.whiteBall);\r\n                        this.poolTable.addChild(this.poolTable.whiteBall);\r\n                        this.repositionStick();\r\n                        // SignalsManager.DispatchSignal(PockeySignalTypes.WHITE_BALL_REPOSITIONED);\r\n\r\n                        // this.poolTable.whiteBall.y = ballPositionCirclePosition.y;\r\n                        // this.ticker.add(this.poolTable.whiteBall.update);\r\n\r\n                    }\r\n\r\n                    return;\r\n                }\r\n                // else {\r\n                if (this.ballsAreMoving()) {\r\n                    // console.log(\"aici la 1\");\r\n                    this.handleCollisions();\r\n                }\r\n                else {\r\n                    if (this.whiteBallInThePocket) {\r\n                        // console.log(\"aici la 2\");\r\n\r\n                        SignalsManager.DispatchSignal(PockeySignalTypes.WHITE_BALL_IN_POCKET);\r\n                        this.whiteBallInThePocket = false;\r\n\r\n                        return;\r\n                    }\r\n\r\n\r\n                    if (this.poolTable.poolStick.rotationEnabled) {\r\n                        // console.log(\"aici la 4\");\r\n\r\n                        if (this.graph) {\r\n                            if (this.graph.parent)\r\n                                this.graph.parent.removeChild(this.graph);\r\n                            this.graph.clear();\r\n                            this.graph = null;\r\n\r\n                        }\r\n                        this.graph = new Graphics();\r\n\r\n                        let localPoint = this.poolTable.toLocal(new Point(MouseHandler.Instance().position.x, MouseHandler.Instance().position.y));\r\n\r\n                        let opposite: number = localPoint.y - this.poolTable.whiteBall.y;\r\n                        let adjacent: number = localPoint.x - this.poolTable.whiteBall.x;\r\n                        let rot: number = Math.atan2(opposite, adjacent);\r\n\r\n                        let dir: Vector2 = new Vector2(Math.cos(rot), Math.sin(rot)).multiply(1100);\r\n\r\n                        this.newPos = new Vector2(this.poolTable.whiteBall.x + dir.x, this.poolTable.whiteBall.y + dir.y);\r\n                        this.shortestContactDistance = this.newPos.distanceTo(this.poolTable.whiteBall.position);\r\n                        //===================\r\n                        this.startRayCastPoint[0] = this.poolTable.whiteBall.x;\r\n                        this.startRayCastPoint[1] = this.poolTable.whiteBall.y;\r\n                        this.endRayCastPoint[0] = this.newPos.x;\r\n                        this.endRayCastPoint[1] = this.newPos.y;\r\n                        // P2WorldManager.Instance().world.removeBody(this.poolTable.whiteBall.p2Body);\r\n\r\n                        p2.vec2.copy(this.rayClosest.from, this.startRayCastPoint);\r\n                        p2.vec2.copy(this.rayClosest.to, this.endRayCastPoint);\r\n                        // this.rayClosest.\r\n                        this.rayClosest.update();\r\n                        this.raycastResult.reset();\r\n                        P2WorldManager.Instance().world.raycast(this.raycastResult, this.rayClosest);\r\n                        this.drawRayResult(this.raycastResult, this.rayClosest);\r\n\r\n                    }\r\n\r\n                    if (this.ballWasShot && this.playerTurnStarted) {\r\n                        this.ballWasShot = false;\r\n                        this.playerTurnStarted = false;\r\n                        // if (this.playerTurnStarted)\r\n                        // {\r\n                        //     this.playerTurnStarted = false;\r\n                        SignalsManager.DispatchSignal(PockeySignalTypes.NEXT_TURN);\r\n                        //\r\n                        // }\r\n                    }\r\n                }*/\r\n\r\n                // console.log(\"==============\");\r\n            }\r\n\r\n\r\n            protected onStartVersusGame() {\r\n                // console.log(\"%c Pool T Manager: intra la onStartVersusGame\", \"background: red; color: white; font-weight:bold; \");\r\n\r\n                if (this.poolTable.poolStick && !this.poolTable.poolStick.isActive) {\r\n                    this.poolTable.poolStick.activate(new Point(this.poolTable.poolStick.initialPosition.x, this.poolTable.poolStick.initialPosition.y));\r\n                    // console.log(\"PockeyStateMachine.Instance().fsm.currentState: \" + PockeyStateMachine.Instance().fsm.currentState);\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.POOLSTICK_ACTIVATED);\r\n                }\r\n                // // this.playerTurnStarted = true;\r\n                //\r\n                // this.poolTable.poolStick.activate(new Point(this.poolTable.poolStick.startPosition.x, this.poolTable.poolStick.startPosition.y));\r\n                // this.ticker.start();\r\n            }\r\n\r\n            protected onRepositionWhiteBall(): void {\r\n                // console.log(\"%c Pool T Manager: intra la onRepositionWhiteBall\", \"background: red; color: white; font-weight:bold; \");\r\n\r\n                /*       console.log(\"ball repos started\");\r\n\r\n                       this.poolTable.whiteBallReflectionArrow.visible = false;\r\n                       this.poolTable.otherBallReflectionArrow.visible = false;\r\n                       this.poolTable.ballPositionCircleOnRaycast.visible = false;\r\n                       this.poolTable.ballPositionCircle.visible = false;\r\n                       // let localPoint = this.poolTable.toLocal(new Point(MouseHandler.Instance().position.x, MouseHandler.Instance().position.y));\r\n                       // this.poolTable.ballPositionCircle.x = localPoint.x;\r\n                       // this.poolTable.ballPositionCircle.y = localPoint.y;\r\n                       this.lastGoodRepositionPoint = new Vector2();\r\n                       this.repositionWhiteBallEnabled = true;*/\r\n                if (this.opponentTimeUp) {\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_UI_TEXT, [PockeyStateTexts.onOpponentsTimeUp]);\r\n                }\r\n                else\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_UI_TEXT, [PockeyStateTexts.opponentFault]);\r\n\r\n                let localPoint = this.poolTable.toLocal(new Point(TouchHandler.Instance().position.x, TouchHandler.Instance().position.y));\r\n\r\n                if (_.isNull(this.lastGoodRepositionPoint) || _.isUndefined(this.lastGoodRepositionPoint)) {\r\n                    this.lastGoodRepositionPoint = new Vector2();\r\n                }\r\n\r\n                /*if (this.graph) {\r\n                    if (this.graph.parent)\r\n                        this.graph.parent.removeChild(this.graph);\r\n                    this.graph.clear();\r\n                    this.graph = null;\r\n                }\r\n*/\r\n                // if (localPoint.x < this.poolTable.rightLimit &&\r\n                //     localPoint.x > this.poolTable.leftLimit &&\r\n                //     localPoint.y < this.poolTable.downLimit &&\r\n                //     localPoint.y > this.poolTable.upLimit) {\r\n                //todo vezi ca mouse-ul sa fie in limita tablei de joc\r\n                //vezi ca daca-i white ball penalty si e la margine, poti sa pui acolo follower-ul. nu-i ok boss\r\n                let ballPositionCirclePosition: Vector2 = new Vector2(localPoint.x, localPoint.y);\r\n                if (ballPositionCirclePosition.x + PockeySettings.BALL_RADIUS > this.poolTable.rightLimit)\r\n                    ballPositionCirclePosition.x = this.poolTable.rightLimit - PockeySettings.BALL_RADIUS;\r\n                if (ballPositionCirclePosition.x - PockeySettings.BALL_RADIUS < this.poolTable.leftLimit)\r\n                    ballPositionCirclePosition.x = this.poolTable.leftLimit + PockeySettings.BALL_RADIUS;\r\n\r\n                if (ballPositionCirclePosition.y + PockeySettings.BALL_RADIUS > this.poolTable.downLimit)\r\n                    ballPositionCirclePosition.y = this.poolTable.downLimit - PockeySettings.BALL_RADIUS;\r\n                if (ballPositionCirclePosition.y - PockeySettings.BALL_RADIUS < this.poolTable.upLimit)\r\n                    ballPositionCirclePosition.y = this.poolTable.upLimit + PockeySettings.BALL_RADIUS;\r\n\r\n                let ballPosition: Vector2;// = new Vector2(this.poolTable.ballPositionCircle.x,this.poolTable.ballPositionCircle.y)\r\n\r\n                _.forEach(this.poolTable.balls, (ball: AbstractBall) => {\r\n                    ballPosition = new Vector2(ball.x, ball.y);\r\n                    if (ballPositionCirclePosition.distanceTo(ballPosition) < ball.radius + PockeySettings.BALL_RADIUS) {\r\n                        let opposite: number = ballPositionCirclePosition.y - ballPosition.y;\r\n                        let adjacent: number = ballPositionCirclePosition.x - ballPosition.x;\r\n                        let rotAngle: number = Math.atan2(opposite, adjacent);\r\n\r\n                        ballPositionCirclePosition.x = ballPosition.x + (PockeySettings.BALL_RADIUS + ball.radius) * Math.cos(rotAngle);\r\n                        ballPositionCirclePosition.y = ballPosition.y + (PockeySettings.BALL_RADIUS + ball.radius) * Math.sin(rotAngle);\r\n                        let isInteresectingWithOthers: boolean = false;\r\n                        _.forEach(this.poolTable.balls, (ball2: AbstractBall) => {\r\n                            if (ball2 != ball) {\r\n                                let ball2Position: Vector2 = new Vector2(ball2.x, ball2.y);\r\n                                if (ball2Position.distanceTo(ballPositionCirclePosition) < PockeySettings.BALL_RADIUS + ball2.radius) {\r\n                                    isInteresectingWithOthers = true;\r\n                                    return;\r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        // if (isInteresectingWithOthers) {\r\n                        //     ballPositionCirclePosition.x = this.lastGoodRepositionPoint.x;\r\n                        //     ballPositionCirclePosition.y = this.lastGoodRepositionPoint.y;\r\n                        // }\r\n                        // else {\r\n                        //     this.lastGoodRepositionPoint.x = ballPositionCirclePosition.x;\r\n                        //     this.lastGoodRepositionPoint.y = ballPositionCirclePosition.y;\r\n                        // }\r\n                    }\r\n\r\n                    // TweenMax.to(this.poolTable.ballPositionCircle, 0, {\r\n                    //     x: ballPositionCirclePosition.x,\r\n                    //     y: ballPositionCirclePosition.y\r\n                    // });\r\n                    this.ballPositionCircleMesh.position.x = ballPositionCirclePosition.x;\r\n                    this.ballPositionCircleMesh.position.y = ballPositionCirclePosition.y;\r\n                    // this.poolTable.ballPositionCircle.visible = true;\r\n\r\n                });\r\n\r\n                if (TouchHandler.Instance().isTouchMoving) {\r\n                    this.repositionStarted = true;\r\n                }\r\n                if (this.repositionStarted && this.whiteBallPositionConfirmed) {\r\n                    this.repositionStarted = false;\r\n\r\n                    // SignalsManager.DispatchSignal(PockeySignalTypes.WHITE_BALL_REPOSITIONED);\r\n                    this.repositionWhiteBallEnabled = false;\r\n                    // this.poolTable.ballPositionCircle.visible = false;\r\n                    // this.poolTable.whiteBall.canBeRemoved = false;\r\n                    // this.poolTable.whiteBall.x = ballPositionCirclePosition.x;\r\n                    // P2WorldManager.Instance().world.addBody(this.poolTable.whiteBall.p2Body);\r\n                    // this.poolTable.whiteBall.p2Body.velocity[0] = 0;\r\n                    // this.poolTable.whiteBall.p2Body.velocity[1] = 0;\r\n                    // this.poolTable.whiteBall.addShadowBody();\r\n\r\n                    // this.poolTable.whiteBall.alpha = 1;\r\n                    this.poolTable.whiteBall.reset();\r\n                    this.poolTable.whiteBall.ballPosition = ballPositionCirclePosition;\r\n                    // if(this.poolTable.balls.cont)\r\n                    this.poolTable.balls.push(this.poolTable.whiteBall);\r\n                    // this.poolTable.addBallToBallsHolder(this.poolTable.whiteBall);\r\n                    // this.poolTable.whiteBall.alpha = 1;//(this.poolTable.whiteBall);\r\n                    // this.repositionStick();\r\n                    // SignalsManager.DispatchSignal(PockeySignalTypes.WHITE_BALL_REPOSITIONED);\r\n                    this.whiteBallPositionConfirmed = false;\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.HIDE_WHITE_BALL_POSITION_CONFIRMER);\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.WHITE_BALL_REPOSITIONED);\r\n\r\n                    if (!this.poolTable.poolStick.isActive) {\r\n                        _.forEach(this.poolTable.balls, (ball: AbstractBall) => {\r\n                            ball.addShadowBody();\r\n                        });\r\n                        // this.poolTable.raycastFollower.visible = true;\r\n                        // this.poolTable.ballPositionCircleOnRaycast.visible = true;\r\n\r\n                        this.poolTable.poolStick.activate(new Point(this.poolTable.whiteBall.x, this.poolTable.whiteBall.y));\r\n                        // console.log(\"PockeyStateMachine.Instance().fsm.currentState: \" + PockeyStateMachine.Instance().fsm.currentState);\r\n                    }\r\n                    // this.poolTable.whiteBall.y = ballPositionCirclePosition.y;\r\n                    // this.ticker.add(this.poolTable.whiteBall.update);\r\n\r\n                }\r\n            }\r\n\r\n            protected onResetStickPower(): void {\r\n                this.poolTable.poolStick.power = 0;\r\n                this.poolTable.poolStick.reset();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n}","/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 10/8/2018\r\n */\r\n\r\n\r\nnamespace Pockey {\r\n    export module GameModule {\r\n        import Sprite = PIXI.Sprite;\r\n        import Graphics = PIXI.Graphics;\r\n        import Point = PIXI.Point;\r\n        import SignalsManager = Framework.Signals.SignalsManager;\r\n        import PockeySignalTypes = Pockey.SignalsModule.PockeySignalTypes;\r\n\r\n        export class MobileStickPower extends Container {\r\n            private stickTexture: Sprite;\r\n            private backgroundGraphics: Sprite;\r\n            private touchGraphics: Container;\r\n            private initialStickY: number = 60;\r\n            private stickMaxY: number = 528;\r\n            private isDown: boolean = false;\r\n            private stickPowerFactor: number = PockeySettings.DELTA * 10;\r\n            private power: number;\r\n\r\n            constructor() {\r\n                super();\r\n                this.visible = false;\r\n\r\n                this.backgroundGraphics = new Sprite(PIXI.Texture.fromFrame(\"power-bg.png\"));\r\n                this.backgroundGraphics.anchor.x = 0.5;\r\n\r\n                this.addChild(this.backgroundGraphics);\r\n\r\n                this.stickTexture = new Sprite(PIXI.Texture.fromFrame(StickType.Default));\r\n                this.stickTexture.anchor.y = 0.5;\r\n                this.stickTexture.anchor.x = 1;\r\n                this.stickTexture.rotation = -90 * Math.PI / 180;\r\n                this.stickTexture.y = this.initialStickY;\r\n\r\n                this.addChild(this.stickTexture);\r\n\r\n                this.touchGraphics = new Container();\r\n                this.touchGraphics.interactive = true;\r\n                let newGr: Graphics = new Graphics();\r\n                newGr.beginFill(0xff9900, 0);\r\n                newGr.drawRect(0, 0, this.backgroundGraphics.width, this.backgroundGraphics.height);\r\n                // newGr.pivot.y = this.stickTexture.anchor.y * newGr.height;\r\n                // newGr.pivot.x = this.stickTexture.anchor.x * newGr.width;\r\n                newGr.x = this.backgroundGraphics.x;\r\n                newGr.y = this.backgroundGraphics.y;\r\n                // newGr.rotation = this.stickTexture.rotation;\r\n                this.touchGraphics.addChild(newGr);\r\n                this.touchGraphics.pivot.x = this.backgroundGraphics.anchor.x * this.touchGraphics.width;\r\n\r\n                this.touchGraphics.on(\"touchstart\", (event) => {\r\n                    this.isDown = true;\r\n                    let localPosition: Point = new Point();\r\n                    event.data.getLocalPosition(this.touchGraphics, localPosition, event.data.global);\r\n                    this.stickTexture.y = localPosition.y;\r\n                    if (this.stickTexture.y < this.initialStickY)\r\n                        this.stickTexture.y = this.initialStickY;\r\n                    else if (this.stickTexture.y > this.stickMaxY)\r\n                        this.stickTexture.y = this.stickMaxY;\r\n                    console.log(\"mobile stick start \");\r\n                    this.power = (this.stickTexture.y - this.initialStickY) * (PockeySettings.STICK_MAX_POWER / (this.stickMaxY - this.initialStickY));\r\n\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.STICK_PIVOT_MOBILE_UPDATE, [this.power]);\r\n\r\n                });\r\n\r\n                this.touchGraphics.on(\"touchmove\", (event) => {\r\n                    if (this.isDown) {\r\n\r\n                        let localPosition: Point = new Point();\r\n                        event.data.getLocalPosition(this.touchGraphics, localPosition, event.data.global);\r\n                        this.stickTexture.y = localPosition.y;\r\n                        if (this.stickTexture.y < this.initialStickY)\r\n                            this.stickTexture.y = this.initialStickY;\r\n                        else if (this.stickTexture.y > this.stickMaxY)\r\n                            this.stickTexture.y = this.stickMaxY;\r\n\r\n                        this.power = (this.stickTexture.y - this.initialStickY) * (PockeySettings.STICK_MAX_POWER / (this.stickMaxY - this.initialStickY));\r\n\r\n                        SignalsManager.DispatchSignal(PockeySignalTypes.STICK_PIVOT_MOBILE_UPDATE, [this.power]);\r\n\r\n                    }\r\n                });\r\n\r\n                this.touchGraphics.on(\"touchend\", () => {\r\n                    this.isDown = false;\r\n\r\n                    TweenMax.to(this.stickTexture, 0.05, {y: this.initialStickY});\r\n\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.STICK_MOBILE_RELEASE, [this.power]);\r\n\r\n                    /*let power: number = (this.stickTexture.y - this.initialStickY) * (PockeySettings.STICK_MAX_POWER / (this.stickMaxY - this.initialStickY));\r\n                    power *= this.stickPowerFactor;*/\r\n                });\r\n\r\n                this.touchGraphics.on(\"touchendoutside\", () => {\r\n                    this.isDown = false;\r\n\r\n                    TweenMax.to(this.stickTexture, 0.05, {y: this.initialStickY});\r\n\r\n                    /*let power: number = (this.stickTexture.y - this.initialStickY) * (PockeySettings.STICK_MAX_POWER / (this.stickMaxY - this.initialStickY));\r\n                    power *= this.stickPowerFactor;*/\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.STICK_MOBILE_RELEASE, [this.power]);\r\n\r\n                });\r\n\r\n                this.addChild(this.touchGraphics);\r\n\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.HIDE_STICK_POWER_MOBILE, this.onHide.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.SHOW_STICK_POWER_MOBILE, this.onShow.bind(this));\r\n\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.RESET_STICK_POWER, this.onResetStickPower.bind(this));\r\n            }\r\n\r\n            protected onResetStickPower():void\r\n            {\r\n                this.power = 0;\r\n\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.STICK_PIVOT_MOBILE_UPDATE, [this.power]);\r\n\r\n                this.isDown = false;\r\n\r\n                this.stickTexture.y = this.initialStickY;\r\n\r\n                this.onHide();\r\n            }\r\n\r\n            private onHide(): void {\r\n                TweenMax.to(this, 0.2, {\r\n                    alpha: 0, onComplete: () => {\r\n                        this.visible = false;\r\n                    }\r\n                });\r\n            }\r\n\r\n            private onShow(): void {\r\n                this.visible = true;\r\n                TweenMax.to(this, 0.2, {\r\n                    alpha: 1\r\n                });\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n}\r\n","///<reference path=\"../SignalsModule/pockey-signal-types.ts\"/>\r\n///<reference path=\"../../../Framework/Abstracts/abstract-module.ts\"/>\r\n///<reference path=\"../../../Framework/Signals/signals-manager.ts\"/>\r\n///<reference path=\"../../../Framework/Settings.ts\"/>\r\n///<reference path=\"pool-table-manager.ts\"/>\r\n///<reference path=\"pool-table-manager-mobile.ts\"/>\r\n///<reference path=\"mobile-stick-power.ts\"/>\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2017 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 7/12/2018\r\n */\r\n\r\n\r\nnamespace Pockey {\r\n    export module GameModule {\r\n\r\n        import AbstractModule = Framework.Abstracts.AbstractModule;\r\n        import SignalsManager = Framework.Signals.SignalsManager;\r\n        import PockeySignalTypes = Pockey.SignalsModule.PockeySignalTypes;\r\n        import Point = PIXI.Point;\r\n        import Sprite = PIXI.Sprite;\r\n        import AbstractEntryPoint = Framework.AbstractEntryPoint;\r\n        import Settings = Framework.Settings;\r\n        import Vector3 = BABYLON.Vector3;\r\n\r\n        //@ts-ignore\r\n\r\n        export class PockeyGameModule extends AbstractModule {\r\n            // private poolTable: PoolTable;\r\n            private levelManager: PoolTableManager;\r\n            public confirmWhiteBallPlacementTexture: Container;\r\n            public mobileStickPower: MobileStickPower;\r\n            private glowTexture: Sprite;\r\n            private glowTween: TweenMax;\r\n\r\n            createElements(): void {\r\n\r\n                if (Settings.isMobile) {\r\n                    this.levelManager = new PoolTableManagerMobile();\r\n                }\r\n                else {\r\n                    this.levelManager = new PoolTableManager();\r\n                }\r\n\r\n                this.addChild(this.levelManager.poolTable);\r\n                // this.poolTable = new PoolTable();//todo aici ai putea sa importi level manager (denumit acum game mechanics), hmm\r\n                // this.addChild(this.poolTable);//todo si aici addchild level manager.pooltable care e public\r\n                // this.handleDesktopLandscape();\r\n\r\n                if (Settings.isMobile) {\r\n                    this.confirmWhiteBallPlacementTexture = new Container();\r\n                    let blurFilter = new PIXI.filters.BlurFilter(1, 2);\r\n                    this.glowTexture = new Sprite(PIXI.Texture.fromFrame(\"penalty-droppuck.png\"));\r\n                    this.glowTexture.tint = 0xffffff;\r\n                    this.glowTexture.filters = [blurFilter];\r\n                    this.glowTexture.anchor.x = 0.5;\r\n                    this.glowTexture.anchor.y = 0.5;\r\n                    this.confirmWhiteBallPlacementTexture.addChild(this.glowTexture);\r\n\r\n                    let frontTexture: Sprite = new Sprite(PIXI.Texture.fromFrame(\"penalty-droppuck.png\"));\r\n                    frontTexture.anchor.x = 0.5;\r\n                    frontTexture.anchor.y = 0.5;\r\n                    this.confirmWhiteBallPlacementTexture.addChild(frontTexture);\r\n\r\n                    this.confirmWhiteBallPlacementTexture.visible = false;\r\n                    this.addChild(this.confirmWhiteBallPlacementTexture);\r\n                    this.confirmWhiteBallPlacementTexture.interactive = true;\r\n\r\n                    this.confirmWhiteBallPlacementTexture.on(\"tap\", () => {\r\n                        SignalsManager.DispatchSignal(PockeySignalTypes.MOBILE_WHITE_BALL_REPOSITION_CONFIRMED);\r\n                    });\r\n\r\n                    this.mobileStickPower = new MobileStickPower();\r\n                    this.addChild(this.mobileStickPower);\r\n\r\n                    SignalsManager.AddSignalCallback(PockeySignalTypes.SHOW_WHITE_BALL_POSITION_CONFIRMER, this.onShowWhiteBallPositionConfirmer.bind(this));\r\n                    SignalsManager.AddSignalCallback(PockeySignalTypes.HIDE_WHITE_BALL_POSITION_CONFIRMER, this.onHideWhiteBallPositionConfirmer.bind(this));\r\n                    // this.mobileStickPower.anchor.y = 0.5;\r\n                    // this.confirmWhiteBallPlacementTexture.visible = false;\r\n                    // this.addChild(this.mobileStickPower);\r\n                }\r\n\r\n                super.createElements();\r\n            }\r\n\r\n            private onShowWhiteBallPositionConfirmer(): void {\r\n                this.confirmWhiteBallPlacementTexture.visible = true;\r\n                if (this.glowTween && this.glowTween.isActive()) {\r\n                    this.glowTween.kill();\r\n                    this.glowTween = null;\r\n                }\r\n\r\n                this.glowTween = TweenMax.to(this.glowTexture.scale, 0.3, {\r\n                    x: 1.2,\r\n                    y: 1.2,\r\n                    yoyo: true, repeat: -1\r\n                });\r\n            }\r\n\r\n\r\n            private onHideWhiteBallPositionConfirmer(): void {\r\n                this.confirmWhiteBallPlacementTexture.visible = false;\r\n                if (this.glowTween && this.glowTween.isActive()) {\r\n                    this.glowTween.kill();\r\n                    this.glowTween = null;\r\n                }\r\n\r\n                this.glowTexture.scale.x = 1;\r\n                this.glowTexture.scale.y = 1;\r\n            }\r\n\r\n            /*protected onResize(params: any[]): void {\r\n                super.onResize(params);\r\n                // console.log(\"orientarea: \" + window.orientation);\r\n\r\n                /!*if (this.zeroPosition) {\r\n                    if (this.zeroPosition.parent)\r\n                        this.zeroPosition.parent.removeChild(this.zeroPosition);\r\n                    this.zeroPosition.clear();\r\n                    this.zeroPosition = null;\r\n                }\r\n\r\n                this.zeroPosition = new Graphics();\r\n                this.zeroPosition.beginFill(0xff9900, 0.6);\r\n                this.zeroPosition.drawCircle(0, 0, 40);\r\n                this.zeroPosition.endFill();\r\n\r\n                this.addChild(this.zeroPosition);*!/\r\n\r\n            }*/\r\n\r\n            protected handleDesktopLandscape(): void {\r\n                super.handleDesktopLandscape();\r\n                // console.log(\"stage width: \" + this.stageWidth);\r\n                // console.log(\"stage height: \" + this.stageHeight);\r\n\r\n                if (this.levelManager && this.levelManager.poolTable) {\r\n\r\n                    this.levelManager.poolTable.poolStick.visible = false;\r\n                    // console.log(\"this.levelManager.poolTable width after: \" + this.levelManager.poolTable.width);\r\n                    this.levelManager.poolTable.height = 0.7 * Settings.stageHeight;\r\n                    let backgroundScaleFactor: number = this.levelManager.poolTable.scale.y;\r\n                    this.levelManager.poolTable.scale.x = backgroundScaleFactor;\r\n\r\n                    this.levelManager.poolTable.x = Settings.stageWidth / 2;\r\n                    let difference:number = this.levelManager.poolTable.y ;\r\n                    this.levelManager.poolTable.y = 0.18 * Settings.stageHeight + this.levelManager.poolTable.height / 2;//\r\n                    difference -= this.levelManager.poolTable.y;\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.POCKEY_POOL_TABLE_RESIZED, [backgroundScaleFactor, this.levelManager.poolTable.position, this.levelManager.poolTable.rotation, this.levelManager.poolTable.width, this.levelManager.poolTable.height, difference]);\r\n\r\n                    let cameraScaleFactor:number = 3.2;\r\n\r\n                    let ratio = window.innerWidth / window.innerHeight ;\r\n                    let zoom = AbstractEntryPoint.camera.orthoTop;\r\n                    let newWidth = zoom * ratio;\r\n                    backgroundScaleFactor = 0.5 / backgroundScaleFactor;\r\n\r\n                    // AbstractEntryPoint.camera.orthoLeft = -Math.abs(newWidth);\r\n                    // AbstractEntryPoint.camera.orthoRight = newWidth;\r\n                    // AbstractEntryPoint.camera.orthoBottom = -Math.abs(zoom);\r\n                    AbstractEntryPoint.camera.orthoTop = Settings.stageHeight * backgroundScaleFactor;//ratio * Settings.stageHeight; //5 units to the top\r\n                    AbstractEntryPoint.camera.orthoBottom = -Settings.stageHeight * backgroundScaleFactor; //5 units to the bottom\r\n                    AbstractEntryPoint.camera.orthoLeft = -Settings.stageWidth * backgroundScaleFactor;  //5 units to the left\r\n                    AbstractEntryPoint.camera.orthoRight = Settings.stageWidth * backgroundScaleFactor; //5 units to the right\r\n                    // AbstractEntryPoint.camera.orthoLeft = -Settings.stageWidth * cameraScaleFactor * 0.9 * (1 - backgroundScaleFactor);\r\n                    // AbstractEntryPoint.camera.orthoRight = Settings.stageWidth * cameraScaleFactor * 0.9 * (1 - backgroundScaleFactor);\r\n                    // AbstractEntryPoint.camera.orthoBottom = -Settings.stageHeight * cameraScaleFactor * 0.752 * (1 - backgroundScaleFactor);\r\n                    // AbstractEntryPoint.camera.orthoTop = Settings.stageHeight * cameraScaleFactor *  0.848 * (1 - backgroundScaleFactor);\r\n\r\n                    // AbstractEntryPoint.camera.position.z = -backgroundScaleFactor *1000;//(new Vector3(0,0,backgroundScaleFactor * cameraScaleFactor * 200));\r\n\r\n                    // AbstractEntryPoint.camera.fovMode = backgroundScaleFactor * 10;\r\n                    // AbstractEntryPoint.camera.fov = backgroundScaleFactor * 7;\r\n                    // AbstractEntryPoint.camera.position.z = -(1-backgroundScaleFactor) * Settings.stageHeight *6;//this.levelManager.poolTable.y / (4.18 * cameraScaleFactor);\r\n// console.log(\"bg scale: \" + backgroundScaleFactor);\r\n                    this.levelManager.poolTable.poolStick.visible = true;\r\n\r\n                }\r\n            }\r\n\r\n            protected handleMobileLandscape(): void {\r\n                // console.log(\"stage width: \" + this.stageWidth);\r\n                // console.log(\"stage height: \" + this.stageHeight);\r\n\r\n                if (this.levelManager && this.levelManager.poolTable) {\r\n\r\n                    this.levelManager.poolTable.poolStick.visible = false;\r\n                    // console.log(\"this.levelManager.poolTable width after: \" + this.levelManager.poolTable.width);\r\n                    this.levelManager.poolTable.height = 0.9 * Settings.stageHeight;\r\n                    let backgroundScaleFactor: number = this.levelManager.poolTable.scale.y;\r\n                    this.levelManager.poolTable.scale.x = backgroundScaleFactor;\r\n\r\n                    this.levelManager.poolTable.rotation = 0;\r\n\r\n                    this.levelManager.poolTable.x = Settings.stageWidth / 2;\r\n                    this.levelManager.poolTable.y = 0.05 * Settings.stageHeight + this.levelManager.poolTable.height / 2;//\r\n\r\n                    this.confirmWhiteBallPlacementTexture.rotation = 0;\r\n\r\n                    this.confirmWhiteBallPlacementTexture.scale.x = this.confirmWhiteBallPlacementTexture.scale.y = backgroundScaleFactor;\r\n                    this.confirmWhiteBallPlacementTexture.x = Settings.stageWidth / 4 - this.levelManager.poolTable.width / 4;\r\n                    if (this.confirmWhiteBallPlacementTexture.x < 5 + this.confirmWhiteBallPlacementTexture.width / 2)\r\n                        this.confirmWhiteBallPlacementTexture.x = 5 + this.confirmWhiteBallPlacementTexture.width / 2;\r\n\r\n                    this.confirmWhiteBallPlacementTexture.y = Settings.stageHeight / 2;// - this.levelManager.poolTable.width / 4;//- this.levelManager.poolTable.width) / 2;\r\n\r\n                    this.mobileStickPower.rotation = 0;\r\n                    this.mobileStickPower.scale.x = this.mobileStickPower.scale.y = backgroundScaleFactor;\r\n                    this.mobileStickPower.x = this.confirmWhiteBallPlacementTexture.x;//Settings.stageWidth / 4 - this.levelManager.poolTable.width / 4;\r\n                    // if (this.mobileStickPower.x < 5 + this.mobileStickPower.width / 2)\r\n                    //     this.mobileStickPower.x = 5 + this.mobileStickPower.width / 2;\r\n                    this.mobileStickPower.y = Settings.stageHeight / 2 - this.mobileStickPower.height / 2;// - this.levelManager.poolTable.width / 4;//- this.levelManager.poolTable.width) / 2;\r\n\r\n                    // console.log(\"this.levelManager.poolTable.rotation: \" + this.levelManager.poolTable.rotation);\r\n\r\n                    let newPos: Point = new Point();\r\n                    newPos.x = this.levelManager.poolTable.position.x;\r\n                    newPos.y = this.levelManager.poolTable.position.y + this.levelManager.poolTable.height * 0.019;\r\n\r\n                    this.levelManager.poolTable.poolStick.visible = true;\r\n\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.POCKEY_POOL_TABLE_RESIZED, [backgroundScaleFactor, newPos, this.levelManager.poolTable.rotation])\r\n                }\r\n\r\n            }\r\n\r\n            protected handleMobilePortrait(): void {\r\n                // console.log(\"stage width: \" + this.stageWidth);\r\n                // console.log(\"stage height: \" + this.stageHeight);\r\n\r\n                if (this.levelManager && this.levelManager.poolTable) {\r\n\r\n                    this.levelManager.poolTable.poolStick.visible = false;\r\n                    // console.log(\"this.levelManager.poolTable width after: \" + this.levelManager.poolTable.width);\r\n                    this.levelManager.poolTable.height = 0.9 * Settings.stageWidth;\r\n                    let backgroundScaleFactor: number = this.levelManager.poolTable.scale.y;\r\n                    this.levelManager.poolTable.scale.x = backgroundScaleFactor;\r\n\r\n                    if (this.levelManager.poolTable.width > Settings.stageHeight) {\r\n                        this.levelManager.poolTable.width = Settings.stageHeight;\r\n                    }\r\n                    backgroundScaleFactor = this.levelManager.poolTable.scale.x;\r\n                    this.levelManager.poolTable.scale.y = backgroundScaleFactor;\r\n\r\n                    this.levelManager.poolTable.rotation = 90 * Math.PI / 180;\r\n                    this.levelManager.poolTable.x = 0.5 * Settings.stageWidth;// + this.levelManager.poolTable.height / 2;\r\n                    this.levelManager.poolTable.y = Settings.stageHeight / 2;//\r\n\r\n                    this.confirmWhiteBallPlacementTexture.scale.x = this.confirmWhiteBallPlacementTexture.scale.y = backgroundScaleFactor;\r\n                    this.confirmWhiteBallPlacementTexture.rotation = 90 * Math.PI / 180;\r\n                    this.confirmWhiteBallPlacementTexture.x = Settings.stageWidth / 2;\r\n                    this.confirmWhiteBallPlacementTexture.y = Settings.stageHeight / 4 - this.levelManager.poolTable.width / 4;\r\n                    if (this.confirmWhiteBallPlacementTexture.y < 5 + this.confirmWhiteBallPlacementTexture.width / 2)\r\n                        this.confirmWhiteBallPlacementTexture.y = 5 + this.confirmWhiteBallPlacementTexture.width / 2;\r\n\r\n                    this.mobileStickPower.rotation = 90 * Math.PI / 180;\r\n                    this.mobileStickPower.scale.x = this.mobileStickPower.scale.y = backgroundScaleFactor;\r\n                    this.mobileStickPower.y = this.confirmWhiteBallPlacementTexture.y;//Settings.stageWidth / 4 - this.levelManager.poolTable.width / 4;\r\n                    // if (this.mobileStickPower.x < 5 + this.mobileStickPower.width / 2)\r\n                    //     this.mobileStickPower.x = 5 + this.mobileStickPower.width / 2;\r\n                    this.mobileStickPower.x = Settings.stageWidth / 2 + this.mobileStickPower.height / 2;// - this.levelManager.poolTable.width / 4;//- this.levelManager.poolTable.width) / 2;\r\n\r\n                    let newPos: Point = new Point();\r\n                    newPos.x = this.levelManager.poolTable.position.x - this.levelManager.poolTable.height * 0.019;\r\n                    newPos.y = this.levelManager.poolTable.position.y;// +120;//this.levelManager.poolTable.height * 0.2;\r\n\r\n                    this.levelManager.poolTable.poolStick.visible = true;\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.POCKEY_POOL_TABLE_RESIZED, [backgroundScaleFactor, newPos, this.levelManager.poolTable.rotation]);\r\n                }\r\n            }\r\n\r\n            // protected onResize(params: any[]): void {\r\n            //     super.onResize(params);\r\n            // }\r\n\r\n            /*protected registerSignals() {\r\n                super.registerSignals();\r\n\r\n                SignalsManager.CreateNewSignal(PockeySignalTypes.SHOOT_BALL);\r\n                SignalsManager.CreateNewSignal(PockeySignalTypes.NEXT_TURN);\r\n                SignalsManager.CreateNewSignal(PockeySignalTypes.BALL_IN_POCKET);\r\n                SignalsManager.CreateNewSignal(PockeySignalTypes.WHITE_BALL_IN_POCKET);\r\n                SignalsManager.CreateNewSignal(PockeySignalTypes.FIRST_BALL_FAULT);\r\n                SignalsManager.CreateNewSignal(PockeySignalTypes.REPOSITION_WHITE_BALL);\r\n                // SignalsManager.CreateNewSignal(PockeySignalTypes.REPOSITION_STICK);\r\n                SignalsManager.CreateNewSignal(PockeySignalTypes.REACTIVATE_STICK);\r\n                SignalsManager.CreateNewSignal(PockeySignalTypes.WHITE_BALL_REPOSITIONED);\r\n                SignalsManager.CreateNewSignal(PockeySignalTypes.HIDE_BALL_RAY_GRAPHICS);\r\n                SignalsManager.CreateNewSignal(PockeySignalTypes.POOLSTICK_ACTIVATED);\r\n                // SignalsManager.CreateNewSignal(PockeySignalTypes.SHOOTING_ENDED);\r\n            }*/\r\n        }\r\n\r\n    }\r\n}\r\n\r\n","/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 8/30/2018\r\n */\r\n\r\nnamespace Pockey {\r\n\r\n    export module GameModule {\r\n\r\n        export class Player {\r\n            public id: string;\r\n            public nickname: string;\r\n            public type: BallType;\r\n            public score: number;\r\n            public matchesWon: number = 0;\r\n            public color: number;\r\n            public side: string;\r\n            public startedFirst:boolean = false;\r\n\r\n            constructor(id: string, type: BallType) {\r\n                this.id = id;\r\n                this.type = type;\r\n                this.score = PockeySettings.BALLS_NUMBER_FOR_EACH_PLAYER;\r\n            }\r\n\r\n            public reset(): void {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 1/31/2019\r\n */\r\n\r\nnamespace Framework {\r\n    export module Utils {\r\n\r\n        export class CountdownTimer {\r\n            private callback: Function;\r\n            public currentTime: number;\r\n            public initialTime: number;\r\n            public complete: boolean = false;\r\n            public timerTween: TweenMax;\r\n            public name: string;\r\n            private timerStopped:boolean = true;\r\n\r\n            constructor(name:string, seconds: number, callback: Function) {\r\n                this.name = name;\r\n\r\n                this.currentTime = seconds;\r\n                this.initialTime = seconds;\r\n\r\n                this.callback = callback;\r\n                this.complete = false;\r\n            }\r\n\r\n            public setCounterInSeconds(seconds: number, callback: Function): void {\r\n                stop();\r\n                this.currentTime = seconds;\r\n                this.initialTime = seconds;\r\n\r\n                this.callback = callback;\r\n                this.complete = false;\r\n            }\r\n\r\n            public start(): void {\r\n                // this.timerTween.play(0);\r\n                this.timerTween = TweenMax.delayedCall(1, this.onUpdate.bind(this));\r\n                this.timerStopped = false;\r\n            }\r\n\r\n            public stop(): void {\r\n                if (this.timerTween)\r\n                    this.timerTween.kill();\r\n\r\n                this.timerStopped = true;\r\n            }\r\n\r\n            public reset(): void {\r\n                this.currentTime = this.initialTime;\r\n                this.complete = false;\r\n            }\r\n\r\n            public restart(): void {\r\n                this.stop();\r\n                this.reset();\r\n                this.start();\r\n            }\r\n\r\n            private onUpdate(): void {\r\n                if(this.timerStopped)\r\n                {\r\n                    return;\r\n                }\r\n                this.currentTime--;\r\n\r\n                if (this.currentTime == 0) {\r\n                    this.complete = true;\r\n                    // TweenMax.ticker.removeEventListener(\"tick\", this.onUpdate.bind(this));\r\n                }\r\n                else {\r\n                    this.start();\r\n                }\r\n\r\n                this.callback();\r\n\r\n                // console.log(this.name + \" -> current time: \" + this.currentTime);\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n","///<reference path=\"../../../Framework/Signals/signals-manager.ts\"/>\r\n///<reference path=\"../StateMachine/pockey-state-machine.ts\"/>\r\n///<reference path=\"balls/abstract-ball.ts\"/>\r\n///<reference path=\"player.ts\"/>\r\n///<reference path=\"../../../Framework/Signals/signal-types.ts\"/>\r\n///<reference path=\"../StateMachine/pockey-state-texts.ts\"/>\r\n///<reference path=\"../SoundModule/pockey-sound-names.ts\"/>\r\n///<reference path=\"../../../Framework/Utils/CountdownTimer.ts\"/>\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 7/18/2018\r\n */\r\n\r\n\r\nnamespace Pockey {\r\n    export module GameModule {\r\n        import SignalsManager = Framework.Signals.SignalsManager;\r\n        import SignalsType = Framework.Signals.SignalsType;\r\n        import PockeyStates = Pockey.StateMachineModule.PockeyStates;\r\n        import ConnectionSignalsType = Framework.Signals.ConnectionSignalsType;\r\n        import PockeyConnectionSignals = Pockey.SignalsModule.PockeyConnectionSignals;\r\n        import PockeySignalTypes = Pockey.SignalsModule.PockeySignalTypes;\r\n        import PockeySocketMessages = Pockey.Connection.PockeySocketMessages;\r\n        import Settings = Framework.Settings;\r\n        import PockeyStateMachine = Pockey.StateMachineModule.PockeyStateMachine;\r\n        import PockeyStateTexts = Pockey.StateMachineModule.PockeyStateTexts;\r\n        import PockeySoundURLS = Pockey.Sound.PockeySoundURLS;\r\n        import CountdownTimer = Framework.Utils.CountdownTimer;\r\n        import AbstractEntryPoint = Framework.AbstractEntryPoint;\r\n\r\n        export interface PlayerSettings {\r\n            opponentNickname?: string,\r\n            opponentSocketId?: string,\r\n            opponentColor?: number,\r\n            opponentAvatarId?: string,\r\n            firstToStart?: string\r\n        }\r\n\r\n        export enum WinStatus {\r\n            WIN,\r\n            LOST\r\n        }\r\n\r\n        // export enum PockeyStates {\r\n        //     StartGame,\r\n        //     PlayerTurn,\r\n        //     PlayerTurnFirstBall,\r\n        //     OpponentTurn,\r\n        //     OpponentTurnFirstBall,\r\n        //\r\n        // }\r\n        export interface GameState {\r\n            changeMyState?: any[];\r\n            stateID?: number,\r\n            pooltableState?: TimeState,\r\n            stateTime?: number,\r\n            timerText?: string,\r\n            timerTextAnimate?: boolean,\r\n            playerScore ?: number,\r\n            opponentScore?: number,\r\n            whiteBallPenalty?: boolean,\r\n            ballsHit?: number,\r\n            opponentScreenTimer?: number,\r\n            popupRemoved?: boolean\r\n            // timerColored?:boolean\r\n        }\r\n\r\n        export class GameManager {\r\n            private static instance: GameManager;\r\n            private initialized: boolean = false;\r\n            public player: Player = new Player(\"player\", BallType.Player);\r\n            // public playerScore: number = 7;\r\n            public opponent: Player = new Player(\"opponent\", BallType.Opponent);\r\n            // public opponentScore: number = 7;\r\n\r\n            public currentPlayer: Player;\r\n            private whiteBallPenalty: boolean = false;\r\n            private ballsHit: number = 0;\r\n            private ownBallInPocketFault: boolean = false;\r\n\r\n            private gameFinished: boolean = false;\r\n            private winStatus: WinStatus;\r\n            private availableForRestart: boolean = false;\r\n            private timerText: string = \"\";\r\n            private animateOpponentTimer: boolean = false;\r\n            private countdownEnded: boolean = false;\r\n\r\n            private myTimeStates: GameState[];\r\n            private opponentGameStates: GameState[];\r\n            private gameTimeStatesIdentifier: number = 0;\r\n            private readyForNextTurn: boolean = false;\r\n\r\n\r\n            private timeStatesTimerActive: boolean = false;\r\n\r\n            private roundTimer: CountdownTimer;\r\n            // private secondAndThirdRoundsTimers: CountdownTimer;\r\n            private timer: CountdownTimer;\r\n\r\n            private roundCounter: number = 0;\r\n\r\n            private screenPopupTime: number = 0;\r\n            private popupRemoved: boolean = false;\r\n            private popupRemovedSent: boolean = false;\r\n\r\n            static Instance(): GameManager {\r\n                if (!GameManager.instance) {\r\n                    GameManager.instance = new GameManager();\r\n\r\n                    if (!GameManager.Instance().initialized) {\r\n                        GameManager.Instance().InitializeOthers();\r\n                        GameManager.Instance().registerSignalsHandlers();\r\n                        GameManager.Instance().initialized = true;\r\n                    }\r\n                }\r\n\r\n                return GameManager.instance;\r\n            }\r\n\r\n            private prepareFirstRound(): void {\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.SHOW_OPPONENT_FOUND_SCREEN);\r\n\r\n                PockeyStateMachine.Instance().changeState(PockeyStates.onPrepareRoundOne);\r\n\r\n                if (this.player.startedFirst) {\r\n                    this.setCurrentPlayer(this.player);\r\n\r\n                    // console.log(\"culorilefmm: la player \" + PockeySettings.OPPONENT_COLOR, +PockeySettings.PLAYER_COLOR_ID);\r\n\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.SET_SIDES_TYPE, [this.player.type, this.opponent.type]);\r\n                    this.player.side = \"left\";\r\n                    this.opponent.side = \"right\";\r\n\r\n                    PIXI.ticker.shared.add(this.createState, this);\r\n                    this.roundTimer.restart();\r\n                    this.onRoundScreenTimerUpdate();\r\n\r\n                }\r\n                else {\r\n\r\n                    this.setCurrentPlayer(this.opponent);\r\n\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.SET_SIDES_TYPE, [this.opponent.type, this.player.type]);\r\n                    this.player.side = \"right\";\r\n                    this.opponent.side = \"left\";\r\n\r\n                    let sameColorsUsed: boolean = false;\r\n                    if (PockeySettings.OPPONENT_COLOR == +PockeySettings.PLAYER_COLOR_ID) {\r\n                        sameColorsUsed = true;\r\n\r\n                        let randNumber: number = Math.round(Math.random() * (PockeySettings.LARGE_COLORS_ARRAY.length - 1));\r\n                        PockeySettings.OPPONENT_COLOR = parseInt(\"0x\" + PockeySettings.LARGE_COLORS_ARRAY[randNumber].color);\r\n\r\n                    }\r\n\r\n                    //aiciavemplayersettings////////////////\r\n                    let playerSettings: PlayerSettings = {\r\n                        opponentAvatarId: PockeySettings.PLAYER_AVATAR_ID,\r\n                        opponentNickname: PockeySettings.PLAYER_NICKNAME,\r\n                        opponentSocketId: PockeySettings.PLAYER_SOCKET_ID,\r\n                        opponentColor: (sameColorsUsed) ? PockeySettings.OPPONENT_COLOR : +PockeySettings.PLAYER_COLOR_ID,\r\n                        firstToStart: this.opponent.id\r\n                    };\r\n                    // console.log(\"opponent nickname:\");\r\n                    // console.log(playerSettings);\r\n                    ///////////////////////////////////////\r\n\r\n                    SignalsManager.DispatchSignal(ConnectionSignalsType.PRIVATE_MESSAGE, [PockeySocketMessages.OPPONENT_SETTINGS, playerSettings]);\r\n\r\n                    PockeyStateMachine.Instance().changeState(PockeyStates.onWatch);\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_UI_TEXT_ON_WATCH, [PockeyStateTexts.opponentsTurn]);\r\n\r\n                }\r\n\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.HIDE_SEARCHING_SCREEN);\r\n\r\n                SignalsManager.DispatchSignal(SignalsType.PLAY_SOUND, [{soundName: PockeySoundURLS.OPPONENT_FOUND}]);\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.CHANGE_PLAYER_COLOR, [+PockeySettings.PLAYER_COLOR_ID]);\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.CHANGE_PLAYER_AVATAR, [PockeySettings.PLAYER_AVATAR_ID]);\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_PLAYER_NAME, [PockeySettings.PLAYER_NICKNAME]);\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.CHANGE_OPPONENT_COLOR, [PockeySettings.OPPONENT_COLOR]);\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.CHANGE_OPPONENT_AVATAR, [PockeySettings.OPPONENT_AVATAR_ID]);\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_OPPONENT_NAME, [PockeySettings.OPPONENT_NICKNAME]);\r\n                /**/\r\n            }\r\n\r\n            private resetPooltable():void\r\n            {\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.RESET_POOLTABLE);\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.RESET_GAME_SCREEN);\r\n            }\r\n\r\n            private prepareSecondRound(): void {\r\n\r\n                console.log(\"intra la prepareSecondRound\");\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.SHOW_ROUND_COMPLETE_SCREEN);\r\n                PockeyStateMachine.Instance().changeState(PockeyStates.onPrepareRoundTwo);\r\n\r\n                this.screenPopupTime = 0;\r\n                this.popupRemoved = false;\r\n                // console.log(\"prepare second round entered\")\r\n                // this.onRoundFinished();\r\n\r\n                this.whiteBallPenalty = false;\r\n                this.ballsHit = 0;\r\n                this.gameFinished = false;\r\n                this.availableForRestart = false;\r\n                this.player.score = PockeySettings.BALLS_NUMBER_FOR_EACH_PLAYER;\r\n                this.opponent.score = PockeySettings.BALLS_NUMBER_FOR_EACH_PLAYER;\r\n                TweenMax.delayedCall(1, this.resetPooltable.bind(this));\r\n                // SignalsManager.DispatchSignal(PockeySignalTypes.SHOW_ROUND_COMPLETE_SCREEN);\r\n                // this.secondAndThirdRoundsTimers.restart();\r\n\r\n                let orderArray: BallType[] = [];\r\n\r\n                if (this.player.startedFirst) {\r\n                    if (!Settings.singlePlayer) {\r\n                        PockeyStateMachine.Instance().changeState(PockeyStates.onWatch);\r\n                        SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_UI_TEXT_ON_WATCH, [PockeyStateTexts.opponentsTurn]);\r\n                    }\r\n                    this.opponent.side = \"left\";\r\n                    this.player.side = \"right\";\r\n                    this.setCurrentPlayer(this.opponent);\r\n                    orderArray = [this.opponent.type, this.player.type];\r\n                }\r\n                else {\r\n\r\n                    this.opponent.side = \"right\";\r\n                    this.player.side = \"left\";\r\n                    this.setCurrentPlayer(this.player);\r\n                    orderArray = [this.player.type, this.opponent.type];\r\n                    if (!Settings.singlePlayer) {\r\n                        PIXI.ticker.shared.add(this.createState, this);\r\n                        this.roundTimer = new CountdownTimer(\"roundTimer\", 5, this.onRoundScreenTimerUpdate.bind(this));\r\n                        this.roundTimer.restart();\r\n                        this.onRoundScreenTimerUpdate();\r\n                        /*PIXI.ticker.shared.add(this.createState, this);\r\n\r\n                        SignalsManager.DispatchSignal(PockeySignalTypes.REACTIVATE_STICK);\r\n\r\n                        PockeyStateMachine.Instance().changeState(PockeyStates.onRearrangeStick);*/\r\n                    }\r\n                }\r\n\r\n                // SignalsManager.DispatchSignal(PockeySignalTypes.HIDE_ROUND_COMPLETE_SCREEN);\r\n\r\n                if (Settings.singlePlayer) {\r\n                    this.beginPlay();\r\n                    // PockeyStateMachine.Instance().changeState(PockeyStates.onStartVersusGame);\r\n                }\r\n\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.SET_SIDES_TYPE, orderArray);\r\n                // this.player.side = \"left\";\r\n                // this.opponent.side = \"right\";\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.CHANGE_PLAYER_COLOR, [+PockeySettings.PLAYER_COLOR_ID]);\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_PLAYER_NAME, [PockeySettings.PLAYER_NICKNAME]);\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.CHANGE_PLAYER_AVATAR, [PockeySettings.PLAYER_AVATAR_ID]);\r\n\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.CHANGE_OPPONENT_COLOR, [PockeySettings.OPPONENT_COLOR]);\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_OPPONENT_NAME, [PockeySettings.OPPONENT_NICKNAME]);\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.CHANGE_OPPONENT_AVATAR, [PockeySettings.OPPONENT_AVATAR_ID]);\r\n                /* if (this.player.score <= 0) {\r\n\r\n                     this.winStatus = WinStatus.LOST;\r\n                     this.opponent.matchesWon++;\r\n                     this.gameFinished = true;\r\n                     console.log(\"la ball in pocket: \" + this.winStatus);\r\n                 }\r\n                 else if (this.opponent.score <= 0) {\r\n\r\n                     this.winStatus = WinStatus.WIN;\r\n                     this.player.matchesWon++;\r\n                     this.gameFinished = true;\r\n\r\n                 }\r\n                 this.availableForRestart = true;*/\r\n                //show round two starts\r\n                // this.secondAndThirdRoundsTimers.restart();\r\n                //\r\n            }\r\n\r\n            /*private prepareThirdRound(): void {\r\n\r\n            }*/\r\n\r\n            private InitializeOthers() {\r\n                this.player = new Player(\"player\", BallType.Player);\r\n                this.opponent = new Player(\"opponent\", BallType.Opponent);\r\n\r\n                this.timer = new CountdownTimer(\"gameTime\", PockeySettings.ROUND_DURATION_IN_SECONDS, this.onCounterUpdate.bind(this));\r\n                this.roundTimer = new CountdownTimer(\"roundTimer\", 3, this.onRoundScreenTimerUpdate.bind(this));\r\n                // this.secondAndThirdRoundsTimers = new CountdownTimer(\"secondAndThirdRoundsTimers\", 5, this.onSecondAndThirdRoundsTimerUpdate.bind(this));\r\n\r\n                this.myTimeStates = [];\r\n                this.opponentGameStates = [];\r\n            }\r\n\r\n            private onRoundScreenTimerUpdate(): void {\r\n                // this.timerText = this.roundTimer.currentTime.toString();\r\n                if (this.roundTimer.currentTime > 0) {\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_CURRENT_ROUND_SCREEN_TEXT, [this.roundTimer.currentTime.toString()]);\r\n                }\r\n                // console.log(\"timeru on update: \" + this.roundTimer.currentTime);\r\n\r\n                if (this.roundTimer.complete) {\r\n                    this.timer.restart();\r\n                    this.onCounterUpdate();\r\n\r\n                    // asta trebuie mutat la inceput in this.prepareFirstRound()\r\n\r\n\r\n                    //aici punem timer si ascundem partner found\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.HIDE_OPPONENT_FOUND_SCREEN);\r\n\r\n                    this.beginPlay();\r\n\r\n                }\r\n\r\n                this.popupRemovedSent = false;\r\n            }\r\n\r\n            // private onSecondAndThirdRoundsTimerUpdate(): void {\r\n            //     if (this.roundTimer.currentTime > 0) {\r\n            //         SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_CURRENT_ROUND_SCREEN_TEXT, [this.roundTimer.currentTime.toString()]);\r\n            //     }\r\n            //\r\n            //     if (this.roundTimer.complete) {\r\n            //         this.timer.restart();\r\n            //         this.onCounterUpdate();\r\n            //\r\n            //         // asta trebuie mutat la inceput in this.prepareFirstRound()\r\n            //\r\n            //\r\n            //         //aici punem timer si ascundem partner found\r\n            //         SignalsManager.DispatchSignal(PockeySignalTypes.HIDE_ROUND_COMPLETE_SCREEN);\r\n            //\r\n            //         this.beginPlay();\r\n            //     }\r\n            //\r\n            //     this.popupRemovedSent = false;\r\n            // }\r\n\r\n            private registerSignalsHandlers() {\r\n\r\n                SignalsManager.AddSignalCallback(SignalsType.ALL_MODULES_ELEMENTS_CREATED, GameManager.Instance().onAllModuleElementsCreated.bind(this));\r\n\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.WHITE_BALL_REPOSITIONED, GameManager.Instance().onWhiteBallRepositioned.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.FIRST_BALL_FAULT, this.onFirstBallFault.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.PREPARE_NEXT_TURN, this.prepareNextTurn.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.SHOOT_BALL, this.onShoot.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.BALL_IN_POCKET, this.onBallInPocket.bind(this));\r\n\r\n                // SignalsManager.AddSignalCallback(PockeySignalTypes.PUCK_IN_POCKET, this.onBallInPocket.bind(this));\r\n                // SignalsManager.AddSignalCallback(PockeySignalTypes.SEND_ELEMENTS_DATA_TO_MANAGER, this.onSendElementsDataToManager.bind(this));\r\n\r\n                SignalsManager.AddSignalCallback(ConnectionSignalsType.SOCKET_IO_CONNECTION_CREATED, this.onSocketIOConnectionCreated.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.START_GAME, this.onStartGame.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.RESTART_GAME, this.onRestartGame.bind(this));\r\n\r\n                SignalsManager.AddSignalCallback(PockeyConnectionSignals.WATCH, this.onWatch.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeyConnectionSignals.YOUR_TURN, this.onMyTurn.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeyConnectionSignals.OPPONENT_SETTINGS, this.onOpponentSettings.bind(this));\r\n                // SignalsManager.AddSignalCallback(PockeyConnectionSignals.OPPONENT_RESTART_GAME, this.onOpponentRestart.bind(this));\r\n                // SignalsManager.AddSignalCallback(PockeyConnectionSignals.SCORE_UPDATE, this.onScoreUpdate.bind(this));\r\n                // SignalsManager.AddSignalCallback(PockeyConnectionSignals.OPPONENT, this.onSetOpponent.bind(this));\r\n            }\r\n\r\n\r\n            private onCounterUpdate(): void {\r\n                let counterText: string = \"0:\";\r\n                let counter: number = this.timer.currentTime;\r\n                counterText += (counter >= 10) ? counter.toString() : \"0\" + counter.toString();\r\n                this.timerText = counterText;\r\n                // this.animateOpponentTimer = false;\r\n\r\n                this.animateOpponentTimer = false;\r\n\r\n                if (counter <= 5) {\r\n                    if (counter == 5) {\r\n                        SignalsManager.DispatchSignal(SignalsType.PLAY_SOUND, [{soundName: PockeySoundURLS.LAST_FIVE_SECONDS}]);\r\n\r\n                    }\r\n\r\n                    this.animateOpponentTimer = true;\r\n                }\r\n\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_CURRENT_PLAYER_TIMER, [counterText, this.currentPlayer.type, this.animateOpponentTimer]);\r\n                // this.animateOpponentTimer = animateTimerText;\r\n                // SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_CURRENT_PLAYER_TIMER, [counterText, this.currentPlayer.type, this.animateOpponentTimer]);\r\n                if (this.timer.complete) {\r\n\r\n\r\n                    // The code here will run when\r\n                    // the timer has reached zero.\r\n                    // this.stopCountdown();\r\n                    // this.countdownEnded = true;\r\n                    this.stopCountdown();\r\n                    this.countdownEnded = true;\r\n                    this.prepareNextTurn();\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.RESET_STICK_POWER);\r\n\r\n                    // this.ballsHit = 0;\r\n                    // this.onNextTurn();\r\n                }\r\n            }\r\n\r\n            /* private startCountdown(seconds) {\r\n                 let counter = seconds;\r\n\r\n\r\n                 // console.log('counter intra la start countdown');\r\n                 let counterText: string = \"0:\";\r\n\r\n                 // if(counter == PockeySettings.ROUND_DURATION_IN_SECONDS)\r\n                 // {\r\n                 counterText += (counter >= 10) ? counter.toString() : \"0\" + counter.toString();\r\n\r\n                 SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_CURRENT_PLAYER_TIMER, [counterText, this.currentPlayer.type, false]);\r\n                 // }\r\n                 this.roundTimer = setInterval(() => {\r\n                     counterText = \"0:\";\r\n\r\n                     // console.log(\"counter : \" + counter);\r\n\r\n                     counter--;\r\n                     counterText += (counter >= 10) ? counter.toString() : \"0\" + counter.toString();\r\n                     this.timerText = counterText;\r\n                     // let animateTimerText: boolean = true;\r\n\r\n                     if (counter <= 5) {\r\n                         if(counter == 5)\r\n                         {\r\n                             SignalsManager.DispatchSignal(SignalsType.PLAY_SOUND, [{soundName:PockeySoundURLS.LAST_FIVE_SECONDS}]);\r\n\r\n                         }\r\n                         this.animateOpponentTimer = true;\r\n                     }\r\n\r\n                     // this.animateOpponentTimer = animateTimerText;\r\n                     SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_CURRENT_PLAYER_TIMER, [counterText, this.currentPlayer.type, this.animateOpponentTimer]);\r\n                     if (counter < 0) {\r\n\r\n                         // The code here will run when\r\n                         // the timer has reached zero.\r\n                         this.stopCountdown();\r\n                         this.countdownEnded = true;\r\n                         SignalsManager.DispatchSignal(PockeySignalTypes.RESET_STICK_POWER);\r\n\r\n                         // this.ballsHit = 0;\r\n                         // this.onNextTurn();\r\n                     }\r\n\r\n                 }, 1000);\r\n             };*/\r\n\r\n            private stopCountdown(): void {\r\n\r\n                this.timerText = \"\";\r\n                this.animateOpponentTimer = false;\r\n                this.timer.stop();\r\n                this.timer.reset();\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_CURRENT_PLAYER_TIMER, [\"\", this.currentPlayer.type, false]);\r\n                // console.log('Ding!');\r\n            }\r\n\r\n            private onMyTurn(params: any[]): void {\r\n                // this.noBallsHitOnWatch = false;\r\n                // this.currentPlayer = this.player;\r\n                this.changePlayer();\r\n\r\n                let state: PockeyStates = params[0] as PockeyStates;\r\n                // console.log(\"currentSTate: \" + PockeyStateMachine.Instance().getCurrentStateName());\r\n                // console.log(\"new state: \" + state);\r\n                if (state == PockeyStates.onRearrangeStick) {\r\n\r\n                    // if (params[1]) {\r\n                    //     let balls\r\n                    // }\r\n\r\n                    // this.startCountdown(PockeySettings.ROUND_DURATION_IN_SECONDS);\r\n\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.REACTIVATE_STICK);\r\n                    PIXI.ticker.shared.add(this.createState, this);\r\n                    this.timer.restart();\r\n                    this.onCounterUpdate();\r\n\r\n                    // this.startCountdown(PockeySettings.ROUND_DURATION_IN_SECONDS);\r\n                }\r\n                else if (state == PockeyStates.onRepositionWhiteBall) {\r\n\r\n                    // this.startCountdown(PockeySettings.ROUND_DURATION_IN_SECONDS);\r\n\r\n                    // SignalsManager.DispatchSignal(PockeySignalTypes.REACTIVATE_STICK);\r\n                    PIXI.ticker.shared.add(this.createState, this);\r\n                    this.timer.restart();\r\n                    this.onCounterUpdate();\r\n\r\n                    // this.startCountdown(PockeySettings.ROUND_DURATION_IN_SECONDS);\r\n                    if (Settings.isMobile) {\r\n                        SignalsManager.DispatchSignal(PockeySignalTypes.SHOW_WHITE_BALL_POSITION_CONFIRMER);\r\n                    }\r\n                }\r\n                else if (state == PockeyStates.onRoundEnd) {\r\n\r\n                    PockeyStateMachine.Instance().changeState(state);\r\n                    this.prepareSecondRound();\r\n\r\n                    return;\r\n                }\r\n\r\n                PockeyStateMachine.Instance().changeState(state);\r\n\r\n\r\n                // if(this.whiteBallPenalty)\r\n                // {\r\n                //\r\n                // }\r\n                // else if(this.ballsHit)\r\n                // {\r\n                //\r\n                // }\r\n            }\r\n\r\n\r\n            private memorySizeOf(obj) {\r\n                let bytes = 0;\r\n\r\n                function sizeOf(obj) {\r\n                    if (obj !== null && obj !== undefined) {\r\n                        switch (typeof obj) {\r\n                            case 'number':\r\n                                bytes += 8;\r\n                                break;\r\n                            case 'string':\r\n                                bytes += obj.length * 2;\r\n                                break;\r\n                            case 'boolean':\r\n                                bytes += 4;\r\n                                break;\r\n                            case 'object':\r\n                                let objClass = Object.prototype.toString.call(obj).slice(8, -1);\r\n                                if (objClass === 'Object' || objClass === 'Array') {\r\n                                    for (let key in obj) {\r\n                                        if (!obj.hasOwnProperty(key)) continue;\r\n                                        sizeOf(obj[key]);\r\n                                    }\r\n                                } else bytes += obj.toString().length * 2;\r\n                                break;\r\n                        }\r\n                    }\r\n                    return bytes;\r\n                }\r\n\r\n                function formatByteSize(bytes) {\r\n                    if (bytes < 1024) return bytes + \" bytes\";\r\n                    else if (bytes < 1048576) return (bytes / 1024).toFixed(3) + \" KiB\";\r\n                    else if (bytes < 1073741824) return (bytes / 1048576).toFixed(3) + \" MiB\";\r\n                    else return (bytes / 1073741824).toFixed(3) + \" GiB\";\r\n                }\r\n\r\n                return formatByteSize(sizeOf(obj));\r\n            };\r\n\r\n            private onRestartGame(): void {\r\n\r\n                /*   if (Settings.singlePlayer)\r\n                       this.switchSides();\r\n                   else {\r\n                       this.availableForRestart = true;\r\n                       this.switchSides();\r\n                       SignalsManager.DispatchSignal(ConnectionSignalsType.PRIVATE_MESSAGE, [PockeySocketMessages.OPPONENT_RESTART_ROUND]);\r\n\r\n                       // SignalsManager.DispatchSignal(ConnectionSignalsType.PRIVATE_MESSAGE, [PockeySocketMessages.OPPONENT_RESTART]);\r\n                   }*/\r\n\r\n            }\r\n\r\n            // private onOpponentRestart(): void {\r\n            //     if (this.availableForRestart) {\r\n            //\r\n            //         console.log(\"Intra la switch sides\");\r\n            //         this.switchSides();\r\n            //     }\r\n            //     else {\r\n            //         console.log(\"nu intra la switch sides\");\r\n            //     }\r\n            //\r\n            //     console.log(\"primesc invitatie switch sides: \");\r\n            // }\r\n\r\n            // private switchSides(): void {\r\n            //     console.log(\"se face switch\");\r\n            //\r\n            //\r\n            // }\r\n\r\n            private onStartGame(): void {\r\n                SignalsManager.DispatchSignal(SignalsType.CHANGE_BACKGROUND, [PockeySettings.POCKEY_CUSTOM_BACKGROUND_NAME, 1]);\r\n                //@ts-ignore\r\n                // console.log(\"aicisha: \" + AbstractEntryPoint.scene.meshes);\r\n                //@ts-ignore\r\n                _.forEach(AbstractEntryPoint.scene.meshes, (mesh: any) => {\r\n                    mesh.setEnabled(true);\r\n                });\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.HIDE_MAIN_MENU);\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.HIDE_BALL_RAY_GRAPHICS);\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.SHOW_GAME_UI);\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.SHOW_POOLTABLE);\r\n\r\n                if (Settings.singlePlayer) {\r\n\r\n                    this.setCurrentPlayer(this.player);\r\n                    this.beginPlay();\r\n                    // PockeyStateMachine.Instance().changeState(PockeyStates.onStartVersusGame);\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.SET_SIDES_TYPE, [this.player.type, this.opponent.type]);\r\n                    this.player.side = \"left\";\r\n                    this.opponent.side = \"right\";\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.CHANGE_PLAYER_COLOR, [+PockeySettings.PLAYER_COLOR_ID]);\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.CHANGE_OPPONENT_COLOR, [PockeySettings.OPPONENT_COLOR]);\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_PLAYER_NAME, [PockeySettings.PLAYER_NICKNAME]);\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_OPPONENT_NAME, [PockeySettings.OPPONENT_NICKNAME]);\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.CHANGE_PLAYER_AVATAR, [PockeySettings.PLAYER_AVATAR_ID]);\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.CHANGE_OPPONENT_AVATAR, [PockeySettings.OPPONENT_AVATAR_ID]);\r\n\r\n                }\r\n                else {\r\n                    PockeyStateMachine.Instance().changeState(PockeyStates.onSearchForPartner);\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.SHOW_SEARCHING_SCREEN);\r\n                    SignalsManager.DispatchSignal(ConnectionSignalsType.CREATE_SEARCH_FOR_PARTNER_CONNECTION);\r\n                }\r\n\r\n            }\r\n\r\n            private createState(): void {\r\n                // console.log(\"se trimite\");\r\n                if (PockeyStateMachine.Instance().fsm.currentState == PockeyStates.onPrepareRoundOne) {\r\n                    this.onPooltableStateCreated(null);\r\n                }\r\n                else if (PockeyStateMachine.Instance().fsm.currentState == PockeyStates.onPrepareRoundTwo) {\r\n                    this.onPooltableStateCreated(null);\r\n                }\r\n                else {\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.CREATE_POOLTABLE_STATE, [this.onPooltableStateCreated.bind(this)]);\r\n                }\r\n            }\r\n\r\n            private onPooltableStateCreated(timeState: TimeState): void {\r\n                // console.log(\"on pooltable state created\");\r\n                this.gameTimeStatesIdentifier++;\r\n                let gameState: GameState = {};\r\n\r\n                gameState.stateID = this.gameTimeStatesIdentifier;\r\n                gameState.stateTime = Math.round(PIXI.ticker.shared.elapsedMS / 1000);\r\n\r\n                if (!_.isNull(timeState)) {\r\n                    gameState.pooltableState = timeState;\r\n                }\r\n                gameState.timerText = this.timerText;\r\n                gameState.timerTextAnimate = this.animateOpponentTimer;\r\n\r\n                gameState.playerScore = this.player.score;\r\n                gameState.opponentScore = this.opponent.score;\r\n                gameState.whiteBallPenalty = this.whiteBallPenalty;\r\n                gameState.ballsHit = this.ballsHit;\r\n\r\n                if (!this.roundTimer.complete && this.screenPopupTime != this.roundTimer.currentTime) {\r\n                    // console.log(\"se inregistreaza timeru \" + this.roundTimer.currentTime);\r\n                    this.screenPopupTime = this.roundTimer.currentTime;\r\n                    gameState.opponentScreenTimer = this.roundTimer.currentTime;\r\n                }\r\n                // else\r\n                // {\r\n                //     console.log(\"nu se inregistreaza timeru \" + this.roundTimer.currentTime);\r\n                //\r\n                // }\r\n\r\n                // if (!this.roundTimer.complete && !this.secondAndThirdRoundsTimers.complete && this.screenPopupTime != this.secondAndThirdRoundsTimers.currentTime) {\r\n                //     // console.log(\"se inregistreaza timeru \" + this.roundTimer.currentTime);\r\n                //     this.screenPopupTime = this.secondAndThirdRoundsTimers.currentTime;\r\n                //     gameState.opponentScreenTimer = this.secondAndThirdRoundsTimers.currentTime;\r\n                // }\r\n\r\n                if (this.popupRemoved && !this.popupRemovedSent) {\r\n                    gameState.popupRemoved = true;\r\n                    this.popupRemovedSent = true;\r\n                    // console.log(\"aici se inregistreaza\");\r\n                }\r\n\r\n                this.myTimeStates.push(gameState);\r\n\r\n                if (this.myTimeStates.length == PockeySettings.FRAMES_TO_SEND_ON_WATCH) {\r\n                    if (this.readyForNextTurn) {\r\n                        // console.log(\"se face remove\");\r\n                        this.onNextTurn(gameState);\r\n                        this.readyForNextTurn = false;\r\n                    }\r\n\r\n                    let msg: string = JSON.stringify({gameStates: this.myTimeStates});\r\n\r\n                    // if(PockeyStateMachine.Instance().fsm.currentState == PockeyStates.onRepositionWhiteBall)\r\n\r\n                    SignalsManager.DispatchSignal(ConnectionSignalsType.PRIVATE_MESSAGE, [PockeySocketMessages.WATCH, msg]);\r\n\r\n                    //send states\r\n                    this.myTimeStates = [];\r\n                }\r\n\r\n                // console.log(\"game time states length: \" + this.myTimeStates.length);\r\n            }\r\n\r\n            private prepareNextTurn(): void {\r\n                this.readyForNextTurn = true;\r\n                this.stopCountdown();\r\n\r\n                if (Settings.singlePlayer) {\r\n                    this.onNextTurn(null);\r\n                }\r\n            }\r\n\r\n            private applyGameState(): void {\r\n                // console.log(\"opponentGameStates length: \" + this.opponentGameStates.length);\r\n\r\n                if (this.opponentGameStates.length == 0) {\r\n                    return;\r\n                }\r\n                let gameState: GameState = this.opponentGameStates[0];\r\n\r\n                if (this.timerText != gameState.timerText || this.animateOpponentTimer != gameState.timerTextAnimate) {\r\n                    this.timerText = gameState.timerText;\r\n                    this.animateOpponentTimer = gameState.timerTextAnimate;\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_CURRENT_PLAYER_TIMER, [gameState.timerText, this.currentPlayer.type, gameState.timerTextAnimate]);\r\n                }\r\n\r\n                this.whiteBallPenalty = gameState.whiteBallPenalty;\r\n                this.ballsHit = gameState.ballsHit;\r\n\r\n                if (this.player.score != gameState.opponentScore) {\r\n                    this.player.score = gameState.opponentScore;\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_PLAYER_SCORE, [this.player.score]);\r\n                }\r\n\r\n                if (this.opponent.score != gameState.playerScore) {\r\n                    this.opponent.score = gameState.playerScore;\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_OPPONENT_SCORE, [this.opponent.score]);\r\n                }\r\n\r\n                if (gameState.opponentScreenTimer) {\r\n                    // console.log(\"se primeste timeru\" + gameState.opponentScreenTimer);\r\n                    // if (+gameState.opponentScreenTimer > 0) {\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_CURRENT_ROUND_SCREEN_TEXT, [gameState.opponentScreenTimer]);\r\n                    // }\r\n                    // this.roundTimer.currentTime\r\n                }\r\n\r\n                if (gameState.popupRemoved) {\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.HIDE_OPPONENT_FOUND_SCREEN);\r\n                    // console.log(\"de aicisha intra\");\r\n                    this.popupRemoved = true;\r\n                }\r\n\r\n                if (gameState.pooltableState) {\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.APPLY_POOLTABLE_STATE, [gameState.pooltableState, (gameState.stateTime)]);\r\n                }\r\n\r\n\r\n                if (gameState.changeMyState) {\r\n                    PIXI.ticker.shared.remove(this.applyGameState, this);\r\n                    this.timeStatesTimerActive = false;\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.CHANGE_WHITE_BALL_STATUS);\r\n                    this.onMyTurn(gameState.changeMyState);\r\n                }\r\n\r\n                this.opponentGameStates.shift();\r\n            }\r\n\r\n            private onWatch(params: any[]): void {\r\n\r\n                if (PockeyStateMachine.Instance().fsm.currentState == PockeyStates.onWatch) {\r\n\r\n                    // console.log(\"gm, sunt eu, clientul in plm: \");\r\n                    let msg: string = params[0];\r\n\r\n                    let gameStates: GameState[] = JSON.parse(msg).gameStates;\r\n\r\n                    // console.log(\"game states: tada? \" + gameStates);\r\n\r\n                    _.forEach(gameStates, (gameState: GameState) => {\r\n                        this.opponentGameStates.push(gameState);\r\n                    });\r\n\r\n                    if (!this.timeStatesTimerActive && this.opponentGameStates.length >= PockeySettings.FRAMES_TO_SEND_ON_WATCH * 3) {\r\n                        this.timeStatesTimerActive = true;\r\n                        PIXI.ticker.shared.add(this.applyGameState, this);\r\n                        // console.log(\"se adauaga o data\");\r\n                    }\r\n                    // this.opponentTimeStates.shift();\r\n\r\n                    // this.timerText = poolTableData.opponentTimerText;\r\n                    // this.animateOpponentTimer = poolTableData.opponentTimerAnimate;\r\n// if()\r\n//                     console.log(\"this.timerText: \" + poolTableData.opponentTimerText);\r\n\r\n                    /* SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_CURRENT_PLAYER_TIMER, [poolTableData.opponentTimerText, this.currentPlayer.type, poolTableData.opponentTimerAnimate]);\r\n\r\n                     //salam\r\n                     this.whiteBallPenalty = poolTableData.whiteBallPenalty;\r\n                     this.ballsHit = poolTableData.ballsHit;\r\n\r\n                     if (this.player.score != poolTableData.opponentScore) {\r\n                         this.player.score = poolTableData.opponentScore;\r\n                         SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_PLAYER_SCORE, [this.player.score]);\r\n                     }\r\n\r\n                     if (this.opponent.score != poolTableData.playerScore) {\r\n                         this.opponent.score = poolTableData.playerScore;\r\n                         SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_OPPONENT_SCORE, [this.opponent.score]);\r\n                     }*/\r\n                }\r\n            }\r\n\r\n            private onBallInPocket(params: any[]): void {\r\n                if (!this.gameFinished) {\r\n                    let ballType: BallType = params[0] as BallType;\r\n                    console.log(\"ballType in pocket: \" + ballType);\r\n                    if (ballType == BallType.White) {\r\n                        this.whiteBallPenalty = true;\r\n                        SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_UI_TEXT, [PockeyStateTexts.whiteBallFault]);\r\n\r\n                        console.log(\"%c GameManager -> White ball PENALTY for \" + this.currentPlayer.id.toUpperCase(), \"color: #00bcd4\");\r\n                    }\r\n                    else if (ballType == BallType.Puck) {\r\n                        this.ballsHit++;\r\n                        // this.whiteBallPenalty = true;\r\n                        let goalType: BallType = params[1];\r\n                        if (goalType == this.player.type) {\r\n                            this.player.score -= 2;\r\n                        }\r\n                        else if (goalType == this.opponent.type) {\r\n                            this.opponent.score -= 2;\r\n                        }\r\n\r\n                        if (goalType != this.currentPlayer.type) {\r\n                            console.log(\"aici se face update ce plm\");\r\n                            SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_UI_TEXT, [PockeyStateTexts.onPuckGoal]);\r\n                        }\r\n                        // console.log(\"intra la puck gol\");\r\n                        // if (params[1] == this.currentPlayer.type) {\r\n                        //     this.currentPlayer.score -= 2;\r\n                        // }\r\n                        // else {\r\n                        //     this.currentPlayer.score -= 2;\r\n                        // }\r\n                    }\r\n                    else if (ballType == this.currentPlayer.type) {\r\n                        this.ballsHit++;\r\n                        this.currentPlayer.score--;\r\n                        this.ownBallInPocketFault = true;\r\n                        if (!this.whiteBallPenalty)\r\n                            SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_UI_TEXT, [PockeyStateTexts.onOwnBallInPocket]);\r\n                        // if(this.currentPlayer == this.player)\r\n                        // {\r\n                        //     this.playerScore--;\r\n                        // }\r\n                        // else\r\n                        // {\r\n                        //\r\n                        // }\r\n                        /*this.whiteBallPenalty = true;\r\n                        */\r\n                    }\r\n                    else if (ballType != this.currentPlayer.type) {\r\n                        this.ballsHit++;\r\n                        if (this.currentPlayer == this.player) {\r\n                            this.opponent.score--;\r\n                        }\r\n                        else {\r\n                            this.player.score--;\r\n\r\n                        }\r\n                        // this.whiteBallPenalty = true;\r\n                        /*this.ballsHit++;\r\n                        this.opponentScore--;*/\r\n                    }\r\n                    console.log(\"ball in the pocket!!! type: \" + params);\r\n                    console.log(\"score -> player: \" + this.player.score, \" - Opponent: \" + this.opponent.score);\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_PLAYER_SCORE, [this.player.score]);\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_OPPONENT_SCORE, [this.opponent.score]);\r\n\r\n                    if (this.player.score <= 0) {\r\n\r\n                        // PockeyStateMachine.Instance().changeState(PockeyStates.onRoundEnd);\r\n                        this.winStatus = WinStatus.LOST;\r\n                        this.opponent.matchesWon++;\r\n                        this.gameFinished = true;\r\n                        console.log(\"la ball in pocket: \" + this.winStatus);\r\n\r\n\r\n                    }\r\n                    else if (this.opponent.score <= 0) {\r\n                        // SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_WINNING_MESSAGE, [\"you lost!\"]);\r\n                        // SignalsManager.DispatchSignal(PockeySignalTypes.SHOW_ROUND_COMPLETE_SCREEN);\r\n\r\n                        this.winStatus = WinStatus.WIN;\r\n                        this.player.matchesWon++;\r\n                        this.gameFinished = true;\r\n                        console.log(\"la ball in pocket: \" + this.winStatus);\r\n\r\n                        // PockeyStateMachine.Instance().changeState(PockeyStates.onRoundEnd);\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n            private onAllModuleElementsCreated(): void {\r\n                PockeyStateMachine.Instance().changeState(PockeyStates.onMainMenu);\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.SHOW_MAIN_MENU);\r\n                SignalsManager.DispatchSignal(SignalsType.CHANGE_BACKGROUND, [Settings.mainBackgroundName, 4]);\r\n                //@ts-ignore\r\n                _.forEach(AbstractEntryPoint.scene.meshes, (mesh: any) => {\r\n                    mesh.setEnabled(false);\r\n                });\r\n            }\r\n\r\n            private onSocketIOConnectionCreated(params: any[]): void {\r\n                console.log(\"%c GameManager -> socket io connection created\", \"color: #00bcd4\");\r\n                this.player.id = params[0];\r\n                PockeySettings.PLAYER_SOCKET_ID = this.player.id;\r\n                this.opponent.id = params[1];\r\n                PockeySettings.OPPONENT_SOCKET_ID = this.opponent.id;\r\n\r\n                let connectionID: string = params[2];\r\n                if (_.startsWith(connectionID, this.player.id)) {\r\n                    this.currentPlayer = this.player;\r\n\r\n                    //aiciavemplayersettings////////////////\r\n\r\n                    let playerSettings: PlayerSettings = {\r\n                        opponentAvatarId: PockeySettings.PLAYER_AVATAR_ID,\r\n                        opponentNickname: PockeySettings.PLAYER_NICKNAME,\r\n                        opponentSocketId: PockeySettings.PLAYER_SOCKET_ID,\r\n                        opponentColor: +PockeySettings.PLAYER_COLOR_ID\r\n                    };\r\n                    console.log(\"opponent avatar socket connection created: \" + PockeySettings.PLAYER_AVATAR_ID);\r\n                    console.log(playerSettings);\r\n                    /////////////////////////\r\n\r\n                    playerSettings.firstToStart = this.player.id;\r\n                    SignalsManager.DispatchSignal(ConnectionSignalsType.PRIVATE_MESSAGE, [PockeySocketMessages.OPPONENT_SETTINGS, playerSettings]);\r\n                }\r\n            }\r\n\r\n\r\n            private onOpponentSettings(params: any[]): void {\r\n\r\n\r\n                let opponentSettings: PlayerSettings = params[0] as PlayerSettings;\r\n                PockeySettings.OPPONENT_COLOR = opponentSettings.opponentColor;\r\n                PockeySettings.OPPONENT_SOCKET_ID = opponentSettings.opponentSocketId;\r\n                PockeySettings.OPPONENT_NICKNAME = opponentSettings.opponentNickname;\r\n                PockeySettings.OPPONENT_AVATAR_ID = opponentSettings.opponentAvatarId;\r\n\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.CHANGE_OPPONENT_AVATAR, [PockeySettings.OPPONENT_AVATAR_ID]);\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_OPPONENT_NAME);\r\n\r\n                if (opponentSettings.firstToStart == this.player.id) {\r\n                    this.player.startedFirst = true;\r\n                }\r\n                console.log(\"opponent avatar la opponent settings: \" + PockeySettings.OPPONENT_AVATAR_ID);\r\n\r\n                this.prepareFirstRound();\r\n\r\n\r\n            }\r\n\r\n            // private on\r\n\r\n            private onShoot(): void {\r\n                // this.selectPlayer();\r\n                this.whiteBallPenalty = false;\r\n\r\n                this.stopCountdown();\r\n                PockeyStateMachine.Instance().changeState(PockeyStates.onShoot);\r\n\r\n            }\r\n\r\n            private onWhiteBallRepositioned(): void {\r\n                // this.selectPlayer();\r\n                console.log(\"%c GameManager -> White Ball Repositioned\", \"color: #00bcd4\");\r\n\r\n                PockeyStateMachine.Instance().changeState(PockeyStates.onRearrangeStick);\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.REACTIVATE_STICK);\r\n\r\n            }\r\n\r\n            // private onMatchFinised(): void {\r\n            //\r\n            // }\r\n\r\n           /* private onRoundFinished(): void {\r\n                if (this.winStatus == WinStatus.WIN) {\r\n                    // SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_WINNING_MESSAGE, [\"you won!\"]);\r\n                    // SignalsManager.DispatchSignal(PockeySignalTypes.SHOW_ROUND_COMPLETE_SCREEN);\r\n                    // this.secondAndThirdRoundsTimers.restart();\r\n                } else {\r\n                    // SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_WINNING_MESSAGE, [\"you lost!\"]);\r\n\r\n                }\r\n\r\n                // SignalsManager.DispatchSignal(PockeySignalTypes.SHOW_ROUND_COMPLETE_SCREEN);\r\n\r\n                /!* if (this.player.side == \"left\") {\r\n                     SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_MATCH_CIRCLES,\r\n                         [this.player.matchesWon, this.opponent.matchesWon]);\r\n                 }\r\n                 else {\r\n                     SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_MATCH_CIRCLES,\r\n                         [this.opponent.matchesWon, this.player.matchesWon]);\r\n                 }*!/\r\n\r\n            }*/\r\n\r\n            private onNextTurn(gameState: GameState): void {\r\n                console.log(\"onNextTurn: intra\");\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.CHANGE_WHITE_BALL_STATUS);\r\n\r\n                if (this.countdownEnded) {\r\n\r\n                    this.countdownEnded = false;\r\n                    this.changePlayer();\r\n\r\n                    console.log(\"onNextTurn: intra la countdown\");\r\n                    // SignalsManager.DispatchSignal(ConnectionSignalsType.PRIVATE_MESSAGE, [PockeySocketMessages.YOUR_TURN, PockeyStateMachine.Instance().fsm.currentState]);\r\n                    if (gameState) {\r\n                        PIXI.ticker.shared.remove(this.createState, this);\r\n                        gameState.changeMyState = [PockeyStateMachine.Instance().fsm.currentState];\r\n                    }\r\n                    // let currentTime = window.performance.now ? (performance.now() + performance.timing.navigationStart) : Date.now();\r\n                    // SignalsManager.DispatchSignal(PockeySignalTypes.SET_TIMESTAMP_ON_WATCH, [currentTime]);\r\n\r\n                    PockeyStateMachine.Instance().changeState(PockeyStates.onWatch);\r\n\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_UI_TEXT_ON_WATCH, [PockeyStateTexts.onTimeUp]);\r\n                    return;\r\n                }\r\n                // this.selectPlayer();\r\n                if (this.gameFinished) {\r\n                    console.log(\"onNextTurn: intra la gamefinished\");\r\n\r\n                    PockeyStateMachine.Instance().changeState(PockeyStates.onRoundEnd);\r\n                    // let opponentStatus:WinStatus = (this.winStatus == WinStatus.WIN)? WinStatus.LOST : WinStatus.WIN;\r\n                    console.log(\"la next turn: \" + this.winStatus);\r\n                    if (gameState) {\r\n                        PIXI.ticker.shared.remove(this.createState, this);\r\n                        gameState.changeMyState = [PockeyStates.onRoundEnd, this.winStatus]\r\n                    }\r\n\r\n                    this.prepareSecondRound();\r\n\r\n                    return;\r\n                }\r\n                else {\r\n                    console.log(\"onNextTurn: intra la onEndTurn\");\r\n\r\n                    // console.log(\"inainte de on end turn\");\r\n                    PockeyStateMachine.Instance().changeState(PockeyStates.onEndTurn);\r\n                    // console.log(\"dupa de on end turn\");\r\n\r\n                }\r\n\r\n                console.log(\"%c GameManager -> Checking for next turn...\", \"color: #00bcd4\");\r\n\r\n                if (this.whiteBallPenalty) {\r\n                    console.log(\"onNextTurn: intra la whiteBallPenalty\");\r\n\r\n                    console.log(\"%c GameManager -> PENALTY! Round ended for \" + this.currentPlayer.id.toUpperCase(), \"color: #00bcd4\");\r\n                    // this.onWhiteBallInTheHole();\r\n\r\n                    this.changePlayer();\r\n\r\n                    if (!Settings.singlePlayer) {\r\n\r\n                        // SignalsManager.DispatchSignal(ConnectionSignalsType.PRIVATE_MESSAGE, [PockeySocketMessages.YOUR_TURN, PockeyStates.onRepositionWhiteBall]);\r\n\r\n                        gameState.changeMyState = [PockeyStates.onRepositionWhiteBall];\r\n                        PIXI.ticker.shared.remove(this.createState, this);\r\n\r\n                        SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_UI_TEXT_ON_WATCH, [PockeyStateTexts.whiteBallFault]);\r\n                        let currentTime = window.performance.now ? (performance.now() + performance.timing.navigationStart) : Date.now();\r\n                        SignalsManager.DispatchSignal(PockeySignalTypes.SET_TIMESTAMP_ON_WATCH, [currentTime]);\r\n\r\n                        PockeyStateMachine.Instance().changeState(PockeyStates.onWatch);\r\n\r\n                        // if (Settings.isMobile) {\r\n                        //     SignalsManager.DispatchSignal(PockeySignalTypes.SHOW_WHITE_BALL_POSITION_CONFIRMER);\r\n                        // }\r\n                    }\r\n                    else {\r\n\r\n                        PockeyStateMachine.Instance().changeState(PockeyStates.onRepositionWhiteBall);\r\n                        if (Settings.isMobile) {\r\n                            SignalsManager.DispatchSignal(PockeySignalTypes.SHOW_WHITE_BALL_POSITION_CONFIRMER);\r\n                        }\r\n                    }\r\n\r\n                    // PockeyStateMachine.Instance().changeState(PockeyStates.onRepositionWhiteBall);\r\n\r\n                    //     SignalsManager.DispatchSignal(PockeySignalTypes.REPOSITION_WHITE_BALL);\r\n                }\r\n                else if (this.ownBallInPocketFault) {\r\n                    console.log(\"onNextTurn: ownBallInPocketFault\");\r\n\r\n                    console.log(\"%c GameManager -> Fault! Own ball in pocket! \" + this.currentPlayer.id.toUpperCase(), \"color: #00bcd4\");\r\n                    this.changePlayer();\r\n                    this.ownBallInPocketFault = false;\r\n                    if (!Settings.singlePlayer) {\r\n                        let currentTime = window.performance.now ? (performance.now() + performance.timing.navigationStart) : Date.now();\r\n                        SignalsManager.DispatchSignal(PockeySignalTypes.SET_TIMESTAMP_ON_WATCH, [currentTime]);\r\n\r\n                        PockeyStateMachine.Instance().changeState(PockeyStates.onWatch);\r\n                        gameState.changeMyState = [PockeyStates.onRearrangeStick];\r\n                        PIXI.ticker.shared.remove(this.createState, this);\r\n                        // SignalsManager.DispatchSignal(ConnectionSignalsType.PRIVATE_MESSAGE, [PockeySocketMessages.YOUR_TURN, PockeyStates.onRearrangeStick]);\r\n                        SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_UI_TEXT_ON_WATCH, [PockeyStateTexts.onOwnBallInPocket]);\r\n\r\n                        // this.noBallsHitOnWatch = true;\r\n\r\n                        // SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_UI_TEXT, [PockeyStateTexts.noBallScored]);\r\n                        // this.whiteBall\r\n\r\n                    }\r\n                    else {\r\n                        SignalsManager.DispatchSignal(PockeySignalTypes.REACTIVATE_STICK);\r\n\r\n                        PockeyStateMachine.Instance().changeState(PockeyStates.onRearrangeStick);\r\n                    }\r\n                }\r\n                else {\r\n                    if (this.ballsHit == 0) {\r\n                        console.log(\"onNextTurn: balls hit 0\");\r\n\r\n                        console.log(\"%c GameManager -> No balls hit for \" + this.currentPlayer.id.toUpperCase(), \"color: #00bcd4\");\r\n                        this.changePlayer();\r\n\r\n                        if (!Settings.singlePlayer) {\r\n                            let currentTime = window.performance.now ? (performance.now() + performance.timing.navigationStart) : Date.now();\r\n                            SignalsManager.DispatchSignal(PockeySignalTypes.SET_TIMESTAMP_ON_WATCH, [currentTime]);\r\n\r\n                            PockeyStateMachine.Instance().changeState(PockeyStates.onWatch);\r\n                            // SignalsManager.DispatchSignal(ConnectionSignalsType.PRIVATE_MESSAGE, [PockeySocketMessages.YOUR_TURN, PockeyStates.onRearrangeStick]);\r\n                            gameState.changeMyState = [PockeyStates.onRearrangeStick];\r\n                            PIXI.ticker.shared.remove(this.createState, this);\r\n                            SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_UI_TEXT_ON_WATCH, [PockeyStateTexts.noBallScored]);\r\n                            // this.noBallsHitOnWatch = true;\r\n\r\n                            // SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_UI_TEXT, [PockeyStateTexts.noBallScored]);\r\n                            // this.whiteBall\r\n\r\n                        }\r\n                        else {\r\n                            SignalsManager.DispatchSignal(PockeySignalTypes.REACTIVATE_STICK);\r\n\r\n                            PockeyStateMachine.Instance().changeState(PockeyStates.onRearrangeStick);\r\n                        }\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.ballsHit = 0;\r\n                    }\r\n\r\n                    // this.startCountdown(PockeySettings.ROUND_DURATION_IN_SECONDS);\r\n                    // this.timer.restart();\r\n                    console.log(\"onNextTurn: ajunge in capat\");\r\n\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.REACTIVATE_STICK);\r\n                    PockeyStateMachine.Instance().changeState(PockeyStates.onRearrangeStick);\r\n\r\n                }\r\n                // if()\r\n                console.log(\"score -> player: \" + this.player.score, \" - Opponent: \" + this.opponent.score);\r\n\r\n\r\n            }\r\n\r\n            // private onWhiteBallInTheHole(): void {\r\n            //     this.whiteBallPenalty = true;\r\n            //     // this.changePlayer();\r\n            //     // SignalsManager.DispatchSignal(PockeySignalTypes.REPOSITION_WHITE_BALL);\r\n            // }\r\n\r\n            private setCurrentPlayer(player: Player): void {\r\n                // let playersArray: Player[] = [this.player, this.opponent];\r\n                // let rand: number = Math.round(Math.random() * 1);\r\n                // if (this.currentPlayer == this.opponent)\r\n                //     this.currentPlayer = this.player;\r\n                // else\r\n                this.currentPlayer = player;\r\n\r\n                // console.log(\"%c GameManager -> Player changed: \" + this.currentPlayer.id.toUpperCase(), \"color: #00bcd4\");\r\n                console.log(\"%c GameManager -> Current player is: \" + this.currentPlayer.id.toUpperCase(), \"background: red; color: white; font-weight:bold; \");\r\n\r\n                // GameManager.Instance().beginPlay();\r\n\r\n            }\r\n\r\n            private changePlayer(): void {\r\n                // let playersArray: Player[] = [this.player, this.opponent];\r\n                // let rand: number = Math.round(Math.random() * 1);\r\n                /*   if (Settings.singlePlayer) {\r\n                       this.currentPlayer = this.player;\r\n                   }\r\n                   else {*/\r\n                if (this.currentPlayer == this.opponent)\r\n                    this.currentPlayer = this.player;\r\n                else\r\n                    this.currentPlayer = this.opponent;\r\n                // }\r\n\r\n\r\n                // console.log(\"%c GameManager -> Player changed: \" + this.currentPlayer.id.toUpperCase(), \"color: #00bcd4\");\r\n                console.log(\"%c GameManager -> Player changed: \" + this.currentPlayer.id.toUpperCase(), \"background: red; color: white; font-weight:bold; \");\r\n\r\n                // GameManager.Instance().beginPlay();\r\n\r\n            }\r\n\r\n            /* private selectPlayer(): void {\r\n                 let playersArray: Player[] = [this.player, this.opponent];\r\n                 let rand: number = Math.round(Math.random());\r\n                 this.currentPlayer = playersArray[rand];\r\n\r\n                 // console.log(\"%c GameManager -> Selected player: \" + this.currentPlayer.id, \"color: #00bcd4\");\r\n                 console.log(\"%c GameManager -> Selected player: \" + this.currentPlayer.id.toUpperCase(), \"background: red; color: white; font-weight:bold; \");\r\n\r\n\r\n                 GameManager.Instance().beginPlay();\r\n             }*/\r\n\r\n            private onFirstBallFault(): void {\r\n                // console.log(\"ball repos started\");\r\n                this.whiteBallPenalty = true;\r\n                console.log(\"%c GameManager -> First ball fault!\", \"color: #00bcd4\");\r\n\r\n                // let localPoint = this.poolTable.toLocal(new Point(MouseHandler.Instance().position.x, MouseHandler.Instance().position.y));\r\n                // this.poolTable.ballPositionCircle.x = localPoint.x;\r\n                // this.poolTable.ballPositionCircle.y = localPoint.y;\r\n                // this.lastGoodRepositionPoint = new Vector2();\r\n                // this.repositionEnabled = true;\r\n            }\r\n\r\n            private beginPlay(): void {\r\n\r\n                this.popupRemoved = true;\r\n\r\n                /*  this.onRestartGame();*/\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.UPDATE_UI_TEXT, [PockeyStateTexts.beginGame]);\r\n\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.REACTIVATE_STICK);\r\n                PockeyStateMachine.Instance().changeState(PockeyStates.onRearrangeStick);\r\n                // PockeyStateMachine.Instance().changeState(PockeyStates.onStartVersusGame);\r\n                // this.printFsmCurrentState();\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","///<reference path=\"../../../Framework/AbstractModules/Background/abstract-background-module.ts\"/>\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 8/8/2018\r\n */\r\n\r\n\r\nnamespace Pockey {\r\n    export module Background {\r\n\r\n        import SignalsManager = Framework.Signals.SignalsManager;\r\n        import PockeySignalTypes = Pockey.SignalsModule.PockeySignalTypes;\r\n        import Point = PIXI.Point;\r\n        import AbstractBackgroundModule = Framework.Background.AbstractBackgroundModule;\r\n        import Settings = Framework.Settings;\r\n        import iBackground = Framework.Background.iBackground;\r\n\r\n        export class PockeyBackgroundModule extends AbstractBackgroundModule {\r\n\r\n            constructor() {\r\n                super();\r\n                // this.bgTextureName = \"pockey_bg-01.png\";\r\n            }\r\n\r\n            protected registerSignalsHandlers(): void {\r\n                super.registerSignalsHandlers();\r\n\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.POCKEY_POOL_TABLE_RESIZED, this.onResizeBackground.bind(this));\r\n            }\r\n\r\n            private onResizeBackground(params: any[]): void {\r\n                let bg:iBackground;\r\n\r\n                if (this.backgrounds[Settings.mainBackgroundName]) {\r\n                    bg = this.backgrounds[Settings.mainBackgroundName];\r\n                    let newHeight:number = Settings.stageHeight;\r\n                    let scale: number = newHeight / bg.initialHeight;\r\n                    let newWidth:number = bg.initialWidth * scale;\r\n\r\n                    if (newWidth < Settings.stageWidth) {\r\n                        newWidth = Settings.stageWidth;\r\n                        scale = newWidth / bg.initialWidth;\r\n                    }\r\n\r\n                    bg.div.style.width = (bg.initialWidth * scale).toString() + \"px\";\r\n                    bg.div.style.height = (bg.initialHeight * scale).toString() + \"px\";\r\n                }\r\n\r\n                if (this.backgrounds[PockeySettings.POCKEY_CUSTOM_BACKGROUND_NAME]) {\r\n                    bg = this.backgrounds[PockeySettings.POCKEY_CUSTOM_BACKGROUND_NAME];\r\n\r\n                    //*********************\r\n                    let scale: number = params[0];\r\n                    let position: Point = params[1] as Point;\r\n\r\n                    bg.div.style.width = (bg.initialWidth * scale).toString() + \"px\";\r\n                    bg.div.style.width = (bg.initialWidth * scale).toString() + \"px\";\r\n                    bg.div.style.left = position.x.toString() + \"px\";\r\n                    bg.div.style.top = position.y.toString() + \"px\";\r\n                }\r\n\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n}\r\n","///<reference path=\"../../../Framework/Signals/signals-manager.ts\"/>\r\n///<reference path=\"../../../Framework/Signals/signal-types.ts\"/>\r\n///<reference path=\"../SignalsModule/pockey-signal-types.ts\"/>\r\n///<reference path=\"../../../Framework/AbstractModules/Connection/connection-channels-and-messages.ts\"/>\r\n\r\nnamespace Pockey {\r\n    export module Connection {\r\n\r\n        import SocketClient = Framework.Connection.SocketClient;\r\n        import ConnectionSignalsType = Framework.Signals.ConnectionSignalsType;\r\n        import SignalsManager = Framework.Signals.SignalsManager;\r\n        import FrameworkSocketMessages = Framework.Connection.FrameworkSocketMessages;\r\n        import PockeyConnectionSignals = Pockey.SignalsModule.PockeyConnectionSignals;\r\n        import FrameworkSocketEvents = Framework.Connection.FrameworkSocketEvents;\r\n\r\n        export class PockeySocketClient extends SocketClient {\r\n\r\n            protected handlePrivateMessage(messageType, messageData): void {\r\n                super.handlePrivateMessage(messageType, messageData);\r\n                switch (messageType) {\r\n\r\n                    case PockeySocketMessages.WATCH: {\r\n                        SignalsManager.DispatchSignal(PockeyConnectionSignals.WATCH, [messageData]);\r\n                        break;\r\n                    }\r\n                    case PockeySocketMessages.OPPONENT_SETTINGS: {\r\n                        SignalsManager.DispatchSignal(PockeyConnectionSignals.OPPONENT_SETTINGS, [messageData]);\r\n                        break;\r\n                    }\r\n                    case PockeySocketMessages.YOUR_TURN: {\r\n                        SignalsManager.DispatchSignal(PockeyConnectionSignals.YOUR_TURN, [messageData]);\r\n                        break;\r\n                    }\r\n                    case PockeySocketMessages.OPPONENT_RESTART_ROUND: {\r\n                        SignalsManager.DispatchSignal(PockeyConnectionSignals.OPPONENT_NEXT_ROUND, [messageData]);\r\n                        break;\r\n                    }\r\n                    // case PockeySocketMessages.OPPONENT: {\r\n                    //     SignalsManager.DispatchSignal(PockeyConnectionSignals.WATCH, [messageData]);\r\n                    //     break;\r\n                    // }\r\n                    /*case PockeySocketMessages.SCORE_UPDATE: {\r\n                        SignalsManager.DispatchSignal(PockeyConnectionSignals.SCORE_UPDATE);\r\n                        break;\r\n                    }*/\r\n\r\n                    // dispatch signal private message,  watch\r\n                    /* case PockeyS.WA: {\r\n                         // SignalsManager.DispatchSignal(ConnectionSignalsType.SOCKET_IO_CONNECTION_CREATED, [this.partnerID]);\r\n                         break;\r\n                     }*/\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","namespace Framework {\r\n    export module Utils {\r\n        export function readCookie(c_name: string): string {\r\n            if (document.cookie.length > 0) {\r\n                let c_start = document.cookie.indexOf(c_name + \"=\");\r\n                if (c_start != -1) {\r\n                    c_start = c_start + c_name.length + 1;\r\n                    let c_end = document.cookie.indexOf(\";\", c_start);\r\n                    if (c_end == -1) {\r\n                        c_end = document.cookie.length;\r\n                    }\r\n                    return (document.cookie.substring(c_start, c_end)).toString();\r\n                }\r\n            }\r\n            return \"\";\r\n        }\r\n\r\n        export function writeCookie(name: string, value: any, days?: number) {\r\n            let expires;\r\n            if (days) {\r\n                let date = new Date();\r\n                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\r\n                expires = \"; expires=\" + date.toUTCString();\r\n            }\r\n            else {\r\n                expires = \"\";\r\n            }\r\n            document.cookie = name + \"=\" + value + expires + \"; path=/\";\r\n        }\r\n\r\n        export function removeCookie(name: string) {\r\n            writeCookie(name, \"\", -1);\r\n        }\r\n    }\r\n}\r\n","///<reference path=\"../../../Framework/AbstractModules/Connection/login-handler.ts\"/>\r\n///<reference path=\"../../../Framework/AbstractModules/Connection/database-connector.ts\"/>\r\n///<reference path=\"../../../Framework/Utils/cookie.ts\"/>\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 11/14/2018\r\n */\r\n\r\n\r\nnamespace Pockey {\r\n    export module Connection {\r\n        import LoginHandler = Framework.Connection.LoginHandler;\r\n        import readCookie = Framework.Utils.readCookie;\r\n        import DatabaseConnector = Framework.Connection.DatabaseConnector;\r\n        import writeCookie = Framework.Utils.writeCookie;\r\n        import SignalsManager = Framework.Signals.SignalsManager;\r\n        import PockeySignalTypes = Pockey.SignalsModule.PockeySignalTypes;\r\n        import Settings = Framework.Settings;\r\n\r\n        export class PockeyLoginHandler extends LoginHandler {\r\n\r\n            constructor() {\r\n                super();\r\n\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.FACEBOOK_SIGN_IN, this.onFbLogin.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.GOOGLE_SIGN_IN, this.onGoogleLogin.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.PLAYER_SIGNED_OUT, this.onLogout.bind(this));\r\n            }\r\n\r\n            private onLogout(): void {\r\n                console.log(\"pockey login handler onFbLogin\");\r\n                Settings.playerSignedIn = false;\r\n                this.resetUserData();\r\n                this.onCheckUserData();\r\n            }\r\n\r\n            private resetUserData(): void {\r\n                let dataChanged: boolean = false;\r\n\r\n                if (PockeySettings.PLAYER_ID != \"guest\") {\r\n                    PockeySettings.PLAYER_ID = \"guest\";\r\n                }\r\n\r\n                if (PockeySettings.PLAYER_COLOR_ID != PockeySettings.SMALL_COLORS_ARRAY[0].id) {\r\n                    PockeySettings.PLAYER_COLOR_ID = PockeySettings.SMALL_COLORS_ARRAY[0].id;\r\n                    dataChanged = true;\r\n                }\r\n                if (PockeySettings.PLAYER_DECAL_ID != PockeySettings.SMALL_DECALS_ARRAY[0].id) {\r\n                    PockeySettings.PLAYER_DECAL_ID = PockeySettings.SMALL_DECALS_ARRAY[0].id;\r\n                    dataChanged = true;\r\n                }\r\n                if (PockeySettings.PLAYER_CUE_ID != PockeySettings.SMALL_CUES_ARRAY[0].id) {\r\n                    PockeySettings.PLAYER_CUE_ID = PockeySettings.SMALL_CUES_ARRAY[0].id;\r\n                    dataChanged = true;\r\n                }\r\n                if (PockeySettings.PLAYER_MISC_ID != PockeySettings.SMALL_MISC_ARRAY[0].id) {\r\n                    PockeySettings.PLAYER_MISC_ID = PockeySettings.SMALL_MISC_ARRAY[0].id;\r\n                    dataChanged = true;\r\n                }\r\n                if (PockeySettings.PLAYER_LEVEL != 1) {\r\n                    PockeySettings.PLAYER_LEVEL = 1;\r\n                }\r\n\r\n                if (dataChanged) {\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.INVENTORY_ITEM_UPDATED);\r\n                }\r\n            }\r\n\r\n            private onFbLogin(): void {\r\n                console.log(\"pockey login handler onFbLogin\");\r\n                this.onCheckUserData();\r\n            }\r\n\r\n            private onGoogleLogin(): void {\r\n                console.log(\"pockey login handler onGoogleLogin\");\r\n                this.onCheckUserData();\r\n            }\r\n\r\n            protected onCheckUserData(): void {\r\n                console.log(\"on POCKEY LOGIN HANDLER: onCheckUserData\");\r\n                // PockeySettings.PLAYER_CUE_ID = PockeySettings.SMALL_CUES_ARRAY[0].id;\r\n\r\n                let pockeyID: string = readCookie('PockeyID');\r\n                console.log(\"intra la get cookie\");\r\n\r\n                if (pockeyID != \"\") {\r\n                    if (_.includes(pockeyID, \"@\") && _.includes(pockeyID, \".\")) {\r\n                        DatabaseConnector.checkDatabaseUser(pockeyID, this.playerInfoReceived.bind(this));\r\n                        console.log(\"database query for user\");\r\n                    }\r\n                    else if (pockeyID == \"guest\") {\r\n                        let playerData = {};\r\n\r\n                        if (readCookie('PockeyUserColorId') != \"\") {\r\n                            PockeySettings.PLAYER_COLOR_ID = readCookie('PockeyUserColorId');\r\n                            playerData[\"color\"] = PockeySettings.PLAYER_COLOR_ID;\r\n                        }\r\n\r\n                        if (readCookie('PockeyNickname') != \"\") {\r\n                            PockeySettings.PLAYER_NICKNAME = readCookie('PockeyNickname');\r\n                            playerData[\"nickname\"] = PockeySettings.PLAYER_NICKNAME;\r\n                        }\r\n\r\n                        console.log(\"guest on read cookie\");\r\n\r\n                        this.playerInfoReceived(playerData as JSON);\r\n                    }\r\n                }\r\n                else {\r\n                    console.log(\"first time play guest\");\r\n\r\n                    let playerData = {};\r\n                    writeCookie(\"PockeyID\", PockeySettings.PLAYER_ID, 30);\r\n                    writeCookie(\"PockeyUserColorId\", PockeySettings.PLAYER_COLOR_ID, 30);\r\n                    writeCookie(\"PockeyNickname\", PockeySettings.PLAYER_NICKNAME, 30);\r\n\r\n                    // playerData[\"color\"] = readCookie('PockeyUserColorId');\r\n                    // playerData[\"nickname\"] = readCookie('PockeyNickname');\r\n\r\n                    this.playerInfoReceived(playerData as JSON);\r\n                }\r\n\r\n                // SignalsManager.DispatchSignal(SignalsType.USER_DATA_CHECKED);\r\n\r\n                // super.onCheckUserData();\r\n            }\r\n\r\n\r\n            protected playerInfoReceived(usernameData: JSON): void {\r\n                console.log(\"%c usernameData: \", \"background: #ff9900; color: black; font-weight:bold; \");\r\n                console.log(usernameData);\r\n\r\n                let inventoryItemUpdated: boolean = false;\r\n\r\n                if (!_.isUndefined(usernameData[\"avatar\"]) && !_.isNull(usernameData[\"avatar\"])) {\r\n                    PockeySettings.PLAYER_AVATAR_ID = usernameData[\"avatar\"];\r\n                    console.log(\"%c PLAYER_AVATAR_ID updated from db\", \"background: #ff9900; color: black; font-weight:bold;\");\r\n                    inventoryItemUpdated = true;\r\n                }\r\n\r\n                if (!_.isUndefined(usernameData[\"color\"]) && !_.isNull(usernameData[\"color\"])) {\r\n                    PockeySettings.PLAYER_COLOR_ID = usernameData[\"color\"];\r\n                    console.log(\"%c PLAYER_COLOR_ID updated from db\", \"background: #ff9900; color: black; font-weight:bold;\");\r\n                    inventoryItemUpdated = true;\r\n\r\n                }\r\n\r\n                if (!_.isUndefined(usernameData[\"decal\"]) && !_.isNull(usernameData[\"decal\"])) {\r\n                    PockeySettings.PLAYER_DECAL_ID = usernameData[\"decal\"];\r\n                    console.log(\"%c PLAYER_DECAL_ID updated from db\", \"background: #ff9900; color: black; font-weight:bold;\");\r\n                    inventoryItemUpdated = true;\r\n\r\n                }\r\n\r\n                if (!_.isUndefined(usernameData[\"player_level\"]) && !_.isNull(usernameData[\"player_level\"])) {\r\n                    PockeySettings.PLAYER_LEVEL = usernameData[\"player_level\"];\r\n                    console.log(\"%c PLAYER_LEVEL updated from db\", \"background: #ff9900; color: black; font-weight:bold;\");\r\n                }\r\n\r\n                if (!_.isUndefined(usernameData[\"stick\"]) && !_.isNull(usernameData[\"stick\"])) {\r\n                    PockeySettings.PLAYER_CUE_ID = usernameData[\"stick\"];\r\n                    console.log(\"%c PLAYER_CUE_ID\" +\r\n                        \"                    inventoryItemUpdated = true;\\n updated from db\", \"background: #ff9900; color: black; font-weight:bold; \");\r\n                    inventoryItemUpdated = true;\r\n                }\r\n\r\n                if (!_.isUndefined(usernameData[\"total_points\"]) && !_.isNull(usernameData[\"total_points\"])) {\r\n                    PockeySettings.PLAYER_TOTAL_POINTS = usernameData[\"total_points\"];\r\n                    console.log(\"%c PLAYER_TOTAL_POINTS updated from db\", \"background: #ff9900; color: black; font-weight:bold; \");\r\n                }\r\n\r\n                if (!_.isUndefined(usernameData[\"nickname\"]) && !_.isNull(usernameData[\"nickname\"])) {\r\n                    PockeySettings.PLAYER_NICKNAME = usernameData[\"nickname\"];\r\n                    console.log(\"%c PLAYER_NICKNAME updated from db\", \"background: #ff9900; color: black; font-weight:bold; \");\r\n                    inventoryItemUpdated = true;\r\n                }\r\n\r\n                if (!_.isUndefined(usernameData[\"user_id\"]) && !_.isNull(usernameData[\"user_id\"])) {\r\n                    PockeySettings.PLAYER_ID = usernameData[\"user_id\"];\r\n                    console.log(\"%c USER_ID updated from db\", \"background: #ff9900; color: black; font-weight:bold; \");\r\n\r\n                    if (!_.isUndefined(usernameData[\"first_login_date\"]) && !_.isNull(usernameData[\"first_login_date\"])) {\r\n                        if (!Settings.playerSignedIn) {\r\n                            Settings.playerSignedIn = true;\r\n                            SignalsManager.DispatchSignal(PockeySignalTypes.PLAYER_SIGNED_IN);\r\n                            console.log(\"%c PLAYER SIGNED IN\", \"background: #ff8811; color: black; font-weight:bold; \");\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (inventoryItemUpdated) {\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.INVENTORY_ITEM_UPDATED);\r\n                }\r\n\r\n                super.onCheckUserData();\r\n                // console.log(\"%c usernameData^^\", \"background: #ff9900; color: black; font-weight:bold; \");\r\n\r\n                // SignalsManager.DispatchSignal(SignalsType.USER_DATA_CHECKED);\r\n                // super.onCheckUserData();\r\n            }\r\n        }\r\n    }\r\n}\r\n","///<reference path=\"../../../Framework/AbstractModules/Connection/abstract-connection-module.ts\"/>\r\n///<reference path=\"../../../Framework/AbstractModules/Connection/socket-client.ts\"/>\r\n///<reference path=\"pocket-socket-client.ts\"/>\r\n///<reference path=\"pockey-login-handler.ts\"/>\r\nnamespace Pockey {\r\n    export module Connection {\r\n\r\n        import AbstractConnectionModule = Framework.Connection.AbstractConnectionModule;\r\n        import SocketClient = Framework.Connection.SocketClient;\r\n\r\n        export class PockeyConnectionModule extends AbstractConnectionModule {\r\n\r\n            protected registerSignalsHandlers(): void {\r\n                super.registerSignalsHandlers();\r\n            }\r\n\r\n            protected getSocketIoClient(): SocketClient {\r\n                return new PockeySocketClient();\r\n            }\r\n\r\n            protected createLoginHandler(): void {\r\n                let loginHandler: PockeyLoginHandler = new PockeyLoginHandler();\r\n            }\r\n        }\r\n    }\r\n}","namespace Pockey {\r\n    export module UserInterface {\r\n\r\n\r\n        export class PockeyUiSearchingScreen extends Container {\r\n\r\n            private staggerTimeline: TimelineMax;\r\n            private searchScreen: HTMLDivElement;\r\n\r\n            constructor() {\r\n                super();\r\n                // this.addElements();\r\n                this.searchScreen = document.getElementById(\"SearchingScreen\") as HTMLDivElement;\r\n            }\r\n\r\n            public setVisibleTrue(): void {\r\n                this.killTweens();\r\n\r\n                this.searchScreen.style.display = \"flex\";\r\n\r\n                this.staggerTimeline = new TimelineMax();\r\n\r\n                TweenMax.staggerFrom(\".search\", 2, {\r\n                    backgroundColor: '#36edc9',\r\n                    opacity: 0,\r\n                    scale: 0.2,\r\n                    repeat: -1,\r\n                    ease: SlowMo.ease.config(0.5, 0.4, true)\r\n                }, 0.4);\r\n\r\n                TweenMax.staggerTo(\".search\", 2, {\r\n                    x: 320,\r\n                    backgroundColor: '#43f9f3',\r\n                    repeat: -1,\r\n                    ease: SlowMo.ease.config(0.5, 0.4, false)\r\n                }, 0.4);\r\n            }\r\n\r\n            public setVisibleFalse(): void {\r\n                this.killTweens();\r\n\r\n                this.searchScreen.style.display = \"none\";\r\n\r\n            }\r\n\r\n            private killTweens(): void {\r\n                TweenMax.killTweensOf(\".search\");\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n}","namespace Framework {\r\n    export module utils {\r\n        import TextStyleOptions = PIXI.TextStyleOptions;\r\n        import Graphics = PIXI.Graphics;\r\n        import TextStyle = PIXI.TextStyle;\r\n\r\n        export class TextField extends PIXI.Text {\r\n\r\n            private initialScale: number;\r\n\r\n            constructor(text?: string, style?: TextStyle, debug?: boolean) {\r\n\r\n\r\n                super(text, style);\r\n\r\n                if (style)\r\n                    this.setStyle(style);\r\n\r\n                this.updateText();\r\n\r\n                if (debug)\r\n                    this.debug();\r\n            }\r\n\r\n            public setText(text: string): void {\r\n                this.text = text;\r\n                // console.log(\"counter intra textu: \" + text);\r\n                // this.setStyle(this.style);\r\n            }\r\n\r\n            public setStyle(fontStyle: TextStyle) {\r\n                this.scale.x = 1;\r\n                this.scale.y = 1;\r\n\r\n                let style: TextStyle = new TextStyle({});\r\n                style.fontSize = +fontStyle.fontSize;\r\n                style.wordWrapWidth = fontStyle.wordWrapWidth;\r\n                style.wordWrap = fontStyle.wordWrap;\r\n                style.fontFamily = fontStyle.fontFamily;\r\n                style.fill = fontStyle.fill;\r\n                style.dropShadow = fontStyle.dropShadow;\r\n                style.dropShadowColor = fontStyle.dropShadowColor;\r\n                style.dropShadowBlur = fontStyle.dropShadowBlur;\r\n                style.dropShadowAngle = fontStyle.dropShadowAngle;\r\n                style.dropShadowDistance = fontStyle.dropShadowDistance;\r\n\r\n                if (style && !_.isUndefined(style.fontSize) && !_.isNull(style.fontSize)) {\r\n                    let fontSize: number = +style.fontSize;\r\n                    fontSize *= 2;\r\n                    style.fontSize = fontSize;\r\n                }\r\n\r\n                if (style && !_.isUndefined(style.wordWrapWidth) && !_.isNull(style.wordWrapWidth)) {\r\n                    let wordWrapWidth: number = +style.wordWrapWidth;\r\n                    wordWrapWidth *= 2;\r\n                    style.wordWrapWidth = wordWrapWidth;\r\n                }\r\n\r\n                this.style = style;\r\n                // super(text, style);\r\n\r\n                this.scale.y /= 2;\r\n                this.scale.x /= 2;\r\n\r\n                this.initialScale = +this.style.fontSize;\r\n            }\r\n\r\n            public rescale(scaleFactor: number): void {\r\n                let newFontSize: number = scaleFactor * this.initialScale;\r\n                console.log(\"initial font size: \" + this.initialScale);\r\n                console.log(\"new font size: \" + newFontSize);\r\n                // let textStyle: TextStyle = this.style;\r\n                this.style.fontSize = newFontSize;\r\n                //\r\n                // this.setStyle(textStyle);\r\n            }\r\n\r\n            // private checkFontSize(style:TextStyleOptions):void\r\n            // {\r\n            //     st\r\n            // }\r\n            private debug(): void {\r\n                let gr: Graphics = new Graphics();\r\n                gr.beginFill(0xff9900, 0.5);\r\n                gr.drawRect(0, 0, this.width * 2, this.height * 2);\r\n                gr.endFill();\r\n                gr.x = this.x;\r\n                gr.y = this.y;\r\n                this.addChild(gr);\r\n            }\r\n        }\r\n    }\r\n}","///<reference path=\"text-field.ts\"/>\r\n\r\nnamespace Framework {\r\n    export module UserInterface {\r\n        import ObservablePoint = PIXI.ObservablePoint;\r\n        import TextField = Framework.utils.TextField;\r\n        import TextStyleOptions = PIXI.TextStyleOptions;\r\n        import TextStyle = PIXI.TextStyle;\r\n        import Texture = PIXI.Texture;\r\n        import Vector2 = Framework.Utils.Vector2;\r\n\r\n        export class PixiButton extends PIXI.Sprite {\r\n\r\n            public onMouseOverAnimation: Function;\r\n            public onMouseOutAnimation: Function;\r\n\r\n            private _text: TextField;\r\n\r\n            private _cb: Function;\r\n\r\n            private alignment: string = \"center\";\r\n            private textOffset: Vector2;\r\n            // private leftAlign:boolean = false;\r\n            // private rightAlign:boolean = false;\r\n            // private centerAlign:boolean = false;\r\n            // constructor(width: number, height: number, backgroundColor: number, backgroundAlpha: number) {\r\n            constructor(texture: Texture) {\r\n                super(texture);\r\n\r\n                // generate the texture\r\n\r\n                this.texture = this.texture;\r\n\r\n                this.textOffset = new Vector2();\r\n\r\n                this._text = new TextField('Basic text in pixi');\r\n                this.addChild(this._text);\r\n\r\n                // set the interactivity to true and assign callback functions\r\n                this.interactive = true;\r\n\r\n                this.on(\"mousedown\", () => {\r\n                    this.onDown();\r\n                }, this);\r\n\r\n                this.on(\"mouseup\", () => {\r\n                    this.onUp();\r\n                }, this);\r\n\r\n                this.on(\"mouseover\", () => {\r\n                    this.onHover();\r\n                }, this);\r\n\r\n                this.on(\"mouseout\", () => {\r\n                    this.onOut();\r\n                }, this);\r\n\r\n                //////////////////\r\n                // this.on(\"touchstart\", () => {\r\n                //     this.onDown();\r\n                // }, this);\r\n                this.on(\"tap\", () => {\r\n                    this.onUp();\r\n                }, this);\r\n\r\n            }\r\n\r\n            public setOffset(offset: Vector2): void {\r\n                this.textOffset = offset;\r\n            }\r\n\r\n            public setAlign(align: string): void {\r\n                this.alignment = align;\r\n\r\n                if (align == \"left\") {\r\n                    this._text.x = 0 + this.textOffset.x;//this.width / 2 - this._text.width / 2;\r\n                    this._text.y = 0 + this.textOffset.y;//this.height / 2 - this._text.height / 2;\r\n                }\r\n                else if (align == \"right\") {\r\n                    this._text.x = this.width - this._text.width + this.textOffset.x;\r\n                    this._text.y = this.height - this._text.height + this.textOffset.y;\r\n                }\r\n                else {\r\n                    this._text.x = this.width / 2 - this._text.width / 2 - this.textOffset.x;\r\n                    this._text.y = this.height / 2 - this._text.height / 2 - this.textOffset.x;\r\n                }\r\n            }\r\n\r\n            public setText(val: string, style?: PIXI.TextStyle) {\r\n                // Set text to be the value passed as a parameter\r\n                this._text.text = val;\r\n                // Set style of text to the style passed as a parameter\r\n                this._text.setStyle(style);\r\n                this._text.x = this.width / 2 - this._text.width / 2;\r\n                this._text.y = this.height / 2 - this._text.height / 2;\r\n\r\n                this.setAlign(this.alignment);\r\n            }\r\n\r\n            public getText(): TextField {\r\n                return this._text;\r\n            }\r\n\r\n            private onDown() {\r\n                // console.log('Clicked');\r\n                this.y += 5;\r\n                // this.tint = 0xffffff;\r\n            }\r\n\r\n            private onUp() {\r\n                // console.log('onup');\r\n                if (typeof(this._cb) === 'function') {\r\n                    this._cb();\r\n                }\r\n                this.y -= 5;\r\n                // this.tint = 0xF8A9F9;\r\n            }\r\n\r\n            private onHover() {\r\n                // console.log('On Hover');\r\n                // this.tint = 0xF8A9F9;\r\n                // this.scale.x = 1.2;\r\n                // this.scale.y = 1.2;\r\n                if (this.onMouseOverAnimation) {\r\n                    this.onMouseOverAnimation();\r\n                }\r\n            }\r\n\r\n            private onOut() {\r\n                // console.log('On Out');\r\n                // this.tint = 0xffffff;\r\n                // this.scale.x = 1;\r\n                // this.scale.y = 1;\r\n\r\n                if (this.onMouseOutAnimation) {\r\n                    this.onMouseOutAnimation();\r\n                }\r\n            }\r\n\r\n            public get clicked() {\r\n                return this._cb;\r\n            }\r\n\r\n            public set clicked(cb: Function) {\r\n                this._cb = cb;\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n}\r\n","///<reference path=\"../../../../../../Framework/Utils/cookie.ts\"/>\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 10/29/2018\r\n */\r\n\r\n\r\nnamespace Pockey {\r\n    export module UserInterface {\r\n        import Settings = Framework.Settings;\r\n        import writeCookie = Framework.Utils.writeCookie;\r\n        import SignalsManager = Framework.Signals.SignalsManager;\r\n        import PockeySignalTypes = Pockey.SignalsModule.PockeySignalTypes;\r\n        import hex2string = PIXI.utils.hex2string;\r\n        import DatabaseConnector = Framework.Connection.DatabaseConnector;\r\n        import DatabaseObject = Framework.Connection.DatabaseObject;\r\n\r\n        export class PlayerColorCustomizer {\r\n\r\n            private previousColorButton: HTMLDivElement;\r\n            private nextColorButton: HTMLDivElement;\r\n            private colorCircle: HTMLDivElement;\r\n            private currentColorCounter: number = 0;\r\n            private colorsArray: InventoryVO[];\r\n\r\n            constructor() {\r\n\r\n                console.log(\"color customizer\");\r\n                /*if (Settings.playerSignedIn) {\r\n                    this.colorsArray = PockeySettings.LARGE_COLORS_ARRAY;\r\n                }\r\n                else {\r\n                    this.colorsArray = PockeySettings.SMALL_COLORS_ARRAY;\r\n                }*/\r\n\r\n                this.colorCircle = document.getElementById(\"PlayerColorCircle\") as HTMLDivElement;\r\n                this.colorsArray = PockeySettings.SMALL_COLORS_ARRAY;\r\n\r\n                // this.currentColorCounter = 0;\r\n\r\n                /*if (PockeySettings.PLAYER_COLOR_ID) {\r\n                    this.currentColorCounter = PockeySettings.PLAYER_COLOR_ID;\r\n                    PockeySettings.PLAYER_COLOR = this.colorsArray[PockeySettings.PLAYER_COLOR_ID];\r\n                }*/\r\n\r\n                // PockeySettings.PLAYER_COLOR_ID = this.currentColorCounter;\r\n                // writeCookie(\"PockeyUserColorId\", PIXI.utils.hex2string(PockeySettings.PLAYER_COLOR_ID), 30);\r\n\r\n\r\n                this.colorCircle.style.backgroundColor = this.parseColor(this.colorsArray[this.currentColorCounter].color);\r\n\r\n                this.previousColorButton = document.getElementById(\"PreviousColorButton\") as HTMLDivElement;\r\n                this.nextColorButton = document.getElementById(\"NextColorButton\") as HTMLDivElement;\r\n\r\n                this.previousColorButton.onclick = () => {\r\n                    console.log(\"on prev color\");\r\n\r\n                    this.currentColorCounter--;\r\n                    if (this.currentColorCounter < 0) {\r\n                        this.currentColorCounter = this.colorsArray.length - 1;\r\n                    }\r\n\r\n                    PockeySettings.PLAYER_COLOR_ID = this.colorsArray[this.currentColorCounter].id;\r\n                    this.colorCircle.style.backgroundColor = this.parseColor(this.colorsArray[this.currentColorCounter].color);\r\n                    this.updateCookieOrDatabase();\r\n                };\r\n\r\n                this.nextColorButton.onclick = () => {\r\n\r\n                    console.log(\"on next color\");\r\n                    this.currentColorCounter++;\r\n                    if (this.currentColorCounter > this.colorsArray.length - 1) {\r\n                        this.currentColorCounter = 0;\r\n                    }\r\n                    PockeySettings.PLAYER_COLOR_ID = this.colorsArray[this.currentColorCounter].id;\r\n                    this.colorCircle.style.backgroundColor = this.parseColor(this.colorsArray[this.currentColorCounter].color);\r\n                    this.updateCookieOrDatabase();\r\n                };\r\n\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.UPDATE_PLAYER_COLOR, this.updateCurrentColor.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.PLAYER_SIGNED_IN, this.onPlayerSignedIn.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.PLAYER_SIGNED_OUT, this.onPlayerSignedOut.bind(this));\r\n                /*\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.UPDATE_PLAYER_COLOR, this.updateCurrentColor.bind(this));*/\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.INVENTORY_ITEM_UPDATED, this.onInventoryItemUpdated.bind(this));\r\n\r\n            }\r\n\r\n            private onInventoryItemUpdated():void\r\n            {\r\n                if(this.colorsArray[this.currentColorCounter].id != PockeySettings.PLAYER_COLOR_ID)\r\n                {\r\n                    this.updateCurrentColor();\r\n                }\r\n            }\r\n\r\n            private updateCurrentColor(): void {\r\n\r\n                _.forEach(this.colorsArray, (item: InventoryVO, counter: number) => {\r\n                    if (item.id == PockeySettings.PLAYER_COLOR_ID) {\r\n                        this.currentColorCounter = counter;\r\n                        return true;\r\n                    }\r\n                });\r\n\r\n                this.colorCircle.style.backgroundColor = this.parseColor(this.colorsArray[this.currentColorCounter].color);\r\n                // this.updateCookieOrDatabase();\r\n            }\r\n\r\n            private updateCookieOrDatabase(): void {\r\n                if (Settings.playerSignedIn) {\r\n                    let colorDbObject: DatabaseObject = {\r\n                        userID: PockeySettings.PLAYER_ID,\r\n                        column: \"color\",\r\n                        value: PockeySettings.PLAYER_COLOR_ID\r\n                    };\r\n\r\n                    DatabaseConnector.updateUserData(colorDbObject, null);\r\n                }\r\n                else {\r\n                    writeCookie(\"PockeyUserColorId\", PockeySettings.PLAYER_COLOR_ID, 30);\r\n                }\r\n            }\r\n\r\n            private onPlayerSignedIn(): void {\r\n                this.colorsArray = PockeySettings.LARGE_COLORS_ARRAY;\r\n\r\n                console.log(\"colors customizer player signed in\");\r\n                this.updateCurrentColor();\r\n                // this.currentAvatarCounter = 0;\r\n                // PockeySettings.PLAYER_AVATAR_ID = this.currentAvatarCounter;\r\n                // this.avatarHolder.style.background = \"center / contain no-repeat url(\" + this.avatarsArray[this.currentAvatarCounter] + \")\";\r\n            }\r\n\r\n            private onPlayerSignedOut(): void {\r\n                this.colorsArray = PockeySettings.SMALL_COLORS_ARRAY;\r\n                if (this.currentColorCounter > this.colorsArray.length - 1) {\r\n                    this.currentColorCounter = 0;\r\n                    PockeySettings.PLAYER_COLOR_ID = this.colorsArray[this.currentColorCounter].id;\r\n                }\r\n\r\n                this.colorCircle.style.backgroundColor = this.parseColor(this.colorsArray[this.currentColorCounter].color);\r\n\r\n                this.updateCookieOrDatabase();\r\n            }\r\n\r\n            private parseColor(color): string {\r\n\r\n                if (typeof color === 'number') {\r\n                    //make sure our hexadecimal number is padded out\r\n                    color = '#' + ('00000' + (color | 0).toString(16)).substr(-6);\r\n                }\r\n\r\n                return color;\r\n\r\n            };\r\n        }\r\n    }\r\n}\r\n","///<reference path=\"../../../../../../Framework/Utils/cookie.ts\"/>\r\n///<reference path=\"../../../../../../Framework/AbstractModules/Connection/database-connector.ts\"/>\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 10/29/2018\r\n */\r\n\r\n\r\nnamespace Pockey {\r\n    export module UserInterface {\r\n        import Settings = Framework.Settings;\r\n        import writeCookie = Framework.Utils.writeCookie;\r\n        import SignalsManager = Framework.Signals.SignalsManager;\r\n        import PockeySignalTypes = Pockey.SignalsModule.PockeySignalTypes;\r\n        import DatabaseConnector = Framework.Connection.DatabaseConnector;\r\n        import DatabaseObject = Framework.Connection.DatabaseObject;\r\n\r\n        export class PlayerAvatarCustomizer {\r\n\r\n            private previousAvatarButton: HTMLDivElement;\r\n            private nextAvatarButton: HTMLDivElement;\r\n            private avatarHolder: HTMLDivElement;\r\n            private currentAvatarCounter: number = 0;\r\n            private avatarsArray: InventoryVO[];\r\n\r\n            constructor() {\r\n                if (Settings.playerSignedIn) {\r\n                    this.avatarsArray = PockeySettings.LARGE_AVATARS_ARRAY;\r\n                }\r\n                else {\r\n                    this.avatarsArray = PockeySettings.SMALL_AVATARS_ARRAY;\r\n                }\r\n\r\n                if (PockeySettings.PLAYER_AVATAR_ID) {\r\n                    _.forEach(this.avatarsArray, (avatar: InventoryVO, counter: number) => {\r\n                        if (avatar.id == PockeySettings.PLAYER_AVATAR_ID) {\r\n                            this.currentAvatarCounter = counter;\r\n                        }\r\n                    });\r\n                }\r\n\r\n                this.avatarHolder = document.getElementById(\"AvatarImage\") as HTMLDivElement;\r\n\r\n                PockeySettings.PLAYER_AVATAR_ID = this.avatarsArray[this.currentAvatarCounter].id;\r\n\r\n\r\n                this.avatarHolder.style.background = \"center / 97% no-repeat #1A4157 url(\" + this.avatarsArray[this.currentAvatarCounter].icon + \")\";\r\n\r\n                //todo writeid\r\n                this.previousAvatarButton = document.getElementById(\"PreviousAvatarButton\") as HTMLDivElement;\r\n\r\n                this.nextAvatarButton = document.getElementById(\"NextAvatarButton\") as HTMLDivElement;\r\n                this.previousAvatarButton.onclick = () => {\r\n\r\n                    this.onPreviousButtonClicked();\r\n                };\r\n                this.nextAvatarButton.onclick = () => {\r\n                    this.onNextButtonClicked();\r\n\r\n                };\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.PLAYER_SIGNED_IN, this.onPlayerSignedIn.bind(this));\r\n\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.PLAYER_SIGNED_OUT, this.onPlayerSignedOut.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.INVENTORY_ITEM_UPDATED, this.onInventoryItemUpdated.bind(this));\r\n            }\r\n\r\n            private onInventoryItemUpdated():void\r\n            {\r\n                if(this.avatarsArray[this.currentAvatarCounter].id != PockeySettings.PLAYER_AVATAR_ID)\r\n                {\r\n                    _.forEach(this.avatarsArray, (item: InventoryVO, counter: number) => {\r\n                        if (item.id == PockeySettings.PLAYER_AVATAR_ID) {\r\n                            this.currentAvatarCounter = counter;\r\n                            return true;\r\n                        }\r\n                    });\r\n\r\n                    this.avatarHolder.style.background = \"center / 97% no-repeat #1A4157 url(\" + this.avatarsArray[this.currentAvatarCounter].icon + \")\";\r\n\r\n                    // this.updateCookieOrDatabase();\r\n                }\r\n            }\r\n\r\n            private onPreviousButtonClicked(): void {\r\n                this.currentAvatarCounter--;\r\n\r\n                if (this.currentAvatarCounter < 0) {\r\n                    this.currentAvatarCounter = this.avatarsArray.length - 1;\r\n                }\r\n\r\n                if (this.avatarsArray[this.currentAvatarCounter].level > PockeySettings.PLAYER_LEVEL) {\r\n                    this.onPreviousButtonClicked();\r\n                    return;\r\n                }\r\n\r\n                PockeySettings.PLAYER_AVATAR_ID = this.avatarsArray[this.currentAvatarCounter].id;\r\n\r\n                this.avatarHolder.style.background = \"center / 97% no-repeat #1A4157 url(\" + this.avatarsArray[this.currentAvatarCounter].icon + \")\";\r\n\r\n                this.updateCookieOrDatabase();\r\n            }\r\n\r\n            private onNextButtonClicked(): void {\r\n                this.currentAvatarCounter++;\r\n                if (this.currentAvatarCounter > this.avatarsArray.length - 1) {\r\n                    this.currentAvatarCounter = 0;\r\n                }\r\n\r\n                if (this.avatarsArray[this.currentAvatarCounter].level > PockeySettings.PLAYER_LEVEL) {\r\n                    this.onNextButtonClicked();\r\n                    return;\r\n                }\r\n\r\n                PockeySettings.PLAYER_AVATAR_ID = this.avatarsArray[this.currentAvatarCounter].id;\r\n\r\n                this.avatarHolder.style.background = \"center / 97% no-repeat #1A4157 url(\" + this.avatarsArray[this.currentAvatarCounter].icon + \")\";\r\n\r\n                this.updateCookieOrDatabase();\r\n                // writeCookie(\"PockeyUserAvatarId\", PockeySettings.PLAYER_AVATAR_ID, 30);\r\n\r\n                console.log(\"this.currentAvatarCounter: \" + this.currentAvatarCounter);\r\n            }\r\n\r\n            private onPlayerSignedOut(): void {\r\n                this.avatarsArray = PockeySettings.SMALL_AVATARS_ARRAY;\r\n                this.currentAvatarCounter = 0;\r\n                PockeySettings.PLAYER_AVATAR_ID = this.avatarsArray[this.currentAvatarCounter].id;\r\n                this.avatarHolder.style.background = \"center / 97% no-repeat #1A4157 url(\" + this.avatarsArray[this.currentAvatarCounter].icon + \")\";\r\n                this.updateCookieOrDatabase();\r\n            }\r\n\r\n            private onPlayerSignedIn(): void {\r\n                this.avatarsArray = PockeySettings.LARGE_AVATARS_ARRAY;\r\n\r\n                // this.currentAvatarCounter = 0;\r\n                // PockeySettings.PLAYER_AVATAR_ID = this.avatarsArray[this.currentAvatarCounter].id;\r\n                // this.avatarHolder.style.background = \"center / 97% no-repeat url(\" + this.avatarsArray[this.currentAvatarCounter] + \")\";\r\n                _.forEach(this.avatarsArray, (item: InventoryVO, counter: number) => {\r\n                    if (item.id == PockeySettings.PLAYER_AVATAR_ID) {\r\n                        this.currentAvatarCounter = counter;\r\n                        return true;\r\n                    }\r\n                });\r\n\r\n                this.avatarHolder.style.background = \"center / 97% no-repeat #1A4157 url(\" + this.avatarsArray[this.currentAvatarCounter].icon + \")\";\r\n            }\r\n\r\n           /* private updateCurrentColor(): void {\r\n\r\n\r\n                // this.updateCookieOrDatabase();\r\n            }*/\r\n            private updateCookieOrDatabase(): void {\r\n                if (Settings.playerSignedIn) {\r\n                    let colorDbObject: DatabaseObject = {\r\n                        userID: PockeySettings.PLAYER_ID,\r\n                        column: \"avatar\",\r\n                        value: PockeySettings.PLAYER_AVATAR_ID\r\n                    };\r\n\r\n                    DatabaseConnector.updateUserData(colorDbObject, null);\r\n                }\r\n                else {\r\n                    writeCookie(\"PockeyUserAvatarId\", PockeySettings.PLAYER_AVATAR_ID, 30);\r\n                }\r\n\r\n                SignalsManager.DispatchSignal(PockeySignalTypes.INVENTORY_ITEM_UPDATED);\r\n            }\r\n        }\r\n    }\r\n}\r\n","///<reference path=\"../../../../../../Framework/Utils/cookie.ts\"/>\r\n///<reference path=\"../../../../../../Framework/AbstractModules/Connection/database-connector.ts\"/>\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 10/30/2018\r\n */\r\n\r\n\r\nnamespace Pockey {\r\n    export module UserInterface {\r\n        import writeCookie = Framework.Utils.writeCookie;\r\n        import removeCookie = Framework.Utils.removeCookie;\r\n        import Settings = Framework.Settings;\r\n        import SignalsManager = Framework.Signals.SignalsManager;\r\n        import PockeySignalTypes = Pockey.SignalsModule.PockeySignalTypes;\r\n        import DatabaseObject = Framework.Connection.DatabaseObject;\r\n        import DatabaseConnector = Framework.Connection.DatabaseConnector;\r\n\r\n        export class LoginElements {\r\n            private startBtn: HTMLDivElement;\r\n            private googleSignIn: HTMLDivElement;\r\n            private facebookSignIn: HTMLDivElement;\r\n            private signOutBtn: HTMLDivElement;\r\n            private inputText: HTMLTextAreaElement;\r\n            private correctText: HTMLDivElement;\r\n            private mainMenuBackButtonHolder: HTMLDivElement;\r\n\r\n            constructor() {\r\n\r\n                this.correctText = document.getElementById(\"CorrectText\") as HTMLDivElement;\r\n                this.mainMenuBackButtonHolder = document.getElementById(\"MainMenuBackButtonHolder\") as HTMLDivElement;\r\n\r\n                this.handleInputText();\r\n                this.handleSignOutButton();\r\n                this.handleStartButton();\r\n                this.handleFacebookButton();\r\n                this.handleGoogleButton();\r\n                this.checkForPlayerSignIn();\r\n\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.PLAYER_SIGNED_IN, this.onPlayerSignedIn.bind(this));\r\n                // SignalsManager.AddSignalCallback(PockeySignalTypes.PLAYER_SIGNED_OUT, this.onPlayerSignedOut.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.INVENTORY_ITEM_UPDATED, this.onInventoryItemUpdated.bind(this));\r\n            }\r\n\r\n            private onInventoryItemUpdated(): void {\r\n                if (PockeySettings.PLAYER_NICKNAME != \"\" && this.inputText.value != PockeySettings.PLAYER_NICKNAME) {\r\n                    this.inputText.value = PockeySettings.PLAYER_NICKNAME;\r\n                }\r\n            }\r\n\r\n            private onPlayerSignedIn(): void {\r\n                this.hideSignInButtons();\r\n                if (this.inputText.value != PockeySettings.PLAYER_NICKNAME && PockeySettings.PLAYER_NICKNAME != \"\") {\r\n                    this.inputText.value = PockeySettings.PLAYER_NICKNAME;\r\n                }\r\n            }\r\n\r\n            /*private onPlayerSignedOut(): void {\r\n                this.hideSignInButtons();\r\n                if(this.inputText.value != PockeySettings.PLAYER_NICKNAME)\r\n                {\r\n                    this.inputText.value = PockeySettings.PLAYER_NICKNAME;\r\n                }\r\n            }*/\r\n\r\n            private handleInputText(): void {\r\n                this.inputText = document.getElementById(\"InputText\") as HTMLTextAreaElement;\r\n                if (PockeySettings.PLAYER_NICKNAME != \"\") {\r\n                    this.inputText.value = PockeySettings.PLAYER_NICKNAME;\r\n                }\r\n                this.inputText.addEventListener('input', this.typeHandler.bind(this));\r\n                this.inputText.addEventListener('propertychange', this.typeHandler.bind(this)) // for IE8\r\n                this.inputText.addEventListener('change', this.typeHandler.bind(this)) // fallback for FireFox\r\n            }\r\n\r\n            private typeHandler(): void {\r\n                // console.log(this.inputText.value);\r\n                if (this.inputText.value != \"\") {\r\n                    this.correctText.style.visibility = \"hidden\";\r\n                }\r\n            }\r\n\r\n            private handleSignOutButton(): void {\r\n                this.signOutBtn = document.getElementById(\"LogoutButton\") as HTMLDivElement;\r\n\r\n                this.signOutBtn.onclick = () => {\r\n                    console.log(\"intra la click\");\r\n                    let pockeyEvent = new Event('PockeyGoogleSignOutEvent');\r\n                    this.signOutBtn.dispatchEvent(pockeyEvent);\r\n                    PockeySettings.PLAYER_ID = \"guest\";\r\n                    removeCookie(\"PockeyID\");\r\n                    // removeCookie(\"PockeyFacebookID\");\r\n                    removeCookie(\"PockeyUserColorId\");\r\n                    removeCookie(\"PockeyUserAvatarId\");\r\n\r\n                    this.showSignInButtons();\r\n\r\n                    /*if(this.inputText.value != PockeySettings.PLAYER_NICKNAME)\r\n                    {\r\n\r\n                    }*/\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.PLAYER_SIGNED_OUT);\r\n                };\r\n\r\n                /* this.signOutBtn.addEventListener('PockeyGoogleSignedOutEvent', (e: CustomEvent) => {\r\n                     this.showSignInButtons();\r\n                 });\r\n\r\n                 this.signOutBtn.addEventListener('PockeyFacebookSignedOutEvent', (e: CustomEvent) => {\r\n                     this.showSignInButtons();\r\n                 });*/\r\n\r\n            }\r\n\r\n            private showSignInButtons(): void {\r\n                this.googleSignIn.style.display = \"block\";\r\n                this.facebookSignIn.style.display = \"block\";\r\n                this.signOutBtn.style.display = \"none\";\r\n\r\n                document.getElementById(\"MainMenuPlayerRankingsHolder\").style.display = \"none\";\r\n\r\n            }\r\n\r\n            private hideSignInButtons(): void {\r\n                this.googleSignIn.style.display = \"none\";\r\n                this.facebookSignIn.style.display = \"none\";\r\n                this.signOutBtn.style.display = \"block\";\r\n                document.getElementById(\"MainMenuPlayerRankingsHolder\").style.display = \"flex\";\r\n            }\r\n\r\n            private handleStartButton(): void {\r\n                this.startBtn = document.getElementById(\"StartGameButtonHolder\") as HTMLDivElement;\r\n                this.startBtn.onclick = () => {\r\n                    if (this.inputText.value == \"\") {\r\n                        this.correctText.style.visibility = \"visible\";\r\n\r\n                        TweenMax.killTweensOf(this.inputText);\r\n                        this.inputText.style.borderColor = \"\";\r\n                        TweenMax.to(this.inputText, .2, {css: {borderColor: \"#e92c5a\"}, yoyo: true, repeat: 3});\r\n                    }\r\n                    else {\r\n\r\n                        if (Settings.playerSignedIn) {\r\n                            PockeySettings.PLAYER_NICKNAME = this.inputText.value;\r\n                            let nicknameDb: DatabaseObject = {\r\n                                userID: PockeySettings.PLAYER_ID,\r\n                                column: \"nickname\",\r\n                                value: PockeySettings.PLAYER_NICKNAME\r\n                            };\r\n\r\n                            DatabaseConnector.updateUserData(nicknameDb, null);\r\n                        }\r\n                        else {\r\n                            PockeySettings.PLAYER_NICKNAME = this.inputText.value;\r\n                            writeCookie('PockeyNickname', this.inputText.value, 30);\r\n                        }\r\n\r\n                        SignalsManager.DispatchSignal(PockeySignalTypes.START_GAME);\r\n                        this.mainMenuBackButtonHolder.style.display = \"none\";\r\n\r\n                    }\r\n                };\r\n            }\r\n\r\n            private handleGoogleButton(): void {\r\n                this.googleSignIn = document.getElementById(\"GoogleSignInButtonHolder\") as HTMLDivElement;\r\n\r\n                this.googleSignIn.addEventListener('PockeyGoogleSignInEvent', (e: CustomEvent) => {\r\n                    // e.target matches elem\r\n                    console.log(\"%c login handler: google logged in\", \"background:pink\");\r\n                    writeCookie('PockeyID', e.detail.toString(), 30);\r\n\r\n                    // this.hideSignInButtons();\r\n\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.GOOGLE_SIGN_IN);\r\n\r\n                    // this.googleSign\r\n                }, false);\r\n            }\r\n\r\n            private handleFacebookButton(): void {\r\n                this.facebookSignIn = document.getElementById(\"FacebookSignInButtonHolder\") as HTMLDivElement;\r\n\r\n                this.facebookSignIn.addEventListener(\"PockeyFacebookSignedIn\", (e: CustomEvent) => {\r\n                    if (!_.isNull(e.detail[\"email\"]) && !_.isUndefined(e.detail[\"email\"])) {\r\n                        writeCookie('PockeyID', e.detail[\"email\"].toString(), 30);\r\n                    }\r\n\r\n                    console.log(\"%c login handler: google logged in\", \"background:pink\");\r\n\r\n                    /*if (!_.isNull(e.detail[\"id\"]) && !_.isUndefined(e.detail[\"id\"])) {\r\n                        writeCookie('PockeyFacebookID', e.detail[\"id\"].toString(), 30);\r\n                    }*/\r\n                    // console.log(\"s-a semnat cu fb-ul: \" + e.detail);\r\n\r\n                    // writeCookie('PockeyEmail', e.detail.toString(), 30);\r\n\r\n\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.FACEBOOK_SIGN_IN);\r\n\r\n                });\r\n            }\r\n\r\n            private checkForPlayerSignIn(): void {\r\n                if (Settings.playerSignedIn) {\r\n                    this.hideSignInButtons();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 10/31/2018\r\n */\r\n\r\n\r\nnamespace Pockey {\r\n    export module UserInterface {\r\n        import Settings = Framework.Settings;\r\n\r\n        export class TutorialMenu {\r\n            private howToPlayButton: HTMLDivElement;\r\n            private howToButtonClicked: boolean = false;\r\n            private howToPlayImage: HTMLDivElement;\r\n\r\n            constructor() {\r\n                this.howToPlayButton = document.getElementById(\"HowToPlayButtonHolder\") as HTMLDivElement;\r\n                this.howToPlayImage = document.getElementById(\"HowToPlayImage\") as HTMLDivElement;\r\n                let buttonBg: HTMLDivElement = this.howToPlayButton.querySelector('.normalButtonBackground') as HTMLDivElement;\r\n//                 console.log(\"how to clicked la constructor: \" + this.howToButtonClicked);\r\n\r\n                this.howToPlayButton.onclick = () => {\r\n                    this.howToButtonClicked = (!this.howToButtonClicked);\r\n                    console.log(\"how to clicked la click: \" + this.howToButtonClicked);\r\n                    if (this.howToButtonClicked) {\r\n                        this.howToPlayButton.style.borderColor = \"#ffffff\";\r\n                        buttonBg.style.backgroundColor = \"#ffffff\";\r\n                        buttonBg.style.color = \"#2D899D\";\r\n\r\n\r\n                        this.howToPlayImage.style.background = \"none\";\r\n                        let random: number = Math.random() * 50;\r\n\r\n                        this.howToPlayImage.style.background = \"url(Assets/Desktop/Images/howtoplay.gif?v=\" + random.toString() + \")  center center / 97% no-repeat\";\r\n\r\n                        document.getElementById(\"HowToPlayImage\").style.display = \"block\";\r\n                        document.getElementById(\"FbTwitterPromoHolder\").style.display = \"none\";\r\n                        document.getElementById(\"ShareButtonsHolder\").style.display = \"none\";\r\n                    }\r\n                    else {\r\n\r\n                        this.howToPlayButton.style.borderColor = \"\";\r\n                        buttonBg.style.backgroundColor = \"\";\r\n                        buttonBg.style.color = \"\";\r\n                        this.howToPlayImage.style.background = \"none\";\r\n\r\n                        document.getElementById(\"HowToPlayImage\").style.display = \"none\";\r\n                        document.getElementById(\"FbTwitterPromoHolder\").style.display = \"flex\";\r\n                        // if(Settings.isMobile && Settings.stageHeight > 228)\r\n                        // {\r\n                            document.getElementById(\"ShareButtonsHolder\").style.display = \"block\";\r\n                        // }\r\n\r\n                    }\r\n                };\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n","///<reference path=\"player-color-customizer.ts\"/>\r\n///<reference path=\"player-avatar-customizer.ts\"/>\r\n///<reference path=\"login-elements.ts\"/>\r\n///<reference path=\"tutorial-menu.ts\"/>\r\n\r\n\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 10/29/2018\r\n */\r\n\r\nnamespace Pockey {\r\n    export module UserInterface {\r\n        export class PlayGameMenu {\r\n\r\n            private playerColorCustomizer: PlayerColorCustomizer;\r\n            private playerAvatarCustomizer: PlayerAvatarCustomizer;\r\n            private loginElements: LoginElements;\r\n            private tutorialMenu: TutorialMenu;\r\n\r\n            constructor() {\r\n                this.loginElements = new LoginElements();\r\n                this.playerColorCustomizer = new PlayerColorCustomizer();\r\n                this.playerAvatarCustomizer = new PlayerAvatarCustomizer();\r\n                this.tutorialMenu = new TutorialMenu();\r\n            }\r\n        }\r\n    }\r\n}\r\n","/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 11/1/2018\r\n */\r\n\r\n\r\nnamespace Pockey {\r\n    export module UserInterface {\r\n        import Settings = Framework.Settings;\r\n\r\n        export class InventoryButton {\r\n\r\n            protected button: HTMLDivElement;\r\n            protected clicked: boolean;\r\n            public id: string;\r\n            public onShowCategoryCallback: Function;\r\n            public onHideCategoryCallback: Function;\r\n\r\n            public category: string;\r\n            public categoryElements: any[];\r\n            protected inventoryButtonLogo: HTMLDivElement;\r\n\r\n            constructor(btnDiv: HTMLDivElement, showCategoryCallback: Function, hideCategoryCallback: Function) {\r\n                this.button = btnDiv;\r\n                this.id = this.button.id;\r\n                this.onShowCategoryCallback = showCategoryCallback;\r\n                this.onHideCategoryCallback = hideCategoryCallback;\r\n                this.category = this.id.replace(\"Inventory\", \"\");\r\n                //console.log(\"categoryElements nickname: \" + this.category);\r\n                this.inventoryButtonLogo = this.button.querySelector('.inventoryButtonLogo') as HTMLDivElement;\r\n\r\n                if (Settings.playerSignedIn) {\r\n                    this.categoryElements = PockeySettings[\"LARGE_\" + this.category.toUpperCase() + \"_ARRAY\"];\r\n                }\r\n                else {\r\n                    this.categoryElements = PockeySettings[\"SMALL_\" + this.category.toUpperCase() + \"_ARRAY\"];\r\n                }\r\n\r\n                this.clicked = false;\r\n\r\n                this.button.onclick = () => {\r\n                    this.clickHandler();\r\n                };\r\n\r\n\r\n                this.button.onmouseover = () => {\r\n                    if (this.clicked) {\r\n                        this.inventoryButtonLogo.style.background = \"center / contain no-repeat url(Assets/Desktop/Images/minus-sign-white.png)\";\r\n                        this.button.style.borderColor = \"\";\r\n                        this.button.style.backgroundColor = \"\";\r\n\r\n                        this.button.style.color = \"white\";\r\n                    }\r\n\r\n                };\r\n\r\n                this.button.onmouseout = () => {\r\n                    if (this.clicked) {\r\n                        this.inventoryButtonLogo.style.background = \"center / contain no-repeat url(Assets/Desktop/Images/minus-sign-color.png)\";\r\n                        this.button.style.borderColor = \"white\";\r\n                        this.button.style.backgroundColor = \"white\";\r\n                        this.button.style.color = \"#2d889c\";\r\n                    }\r\n                    else {\r\n                        this.inventoryButtonLogo.style.background = \"\";\r\n                    }\r\n                };\r\n\r\n            }\r\n\r\n            protected clickHandler(): void {\r\n                this.clicked = !this.clicked;\r\n\r\n                if (this.clicked) {\r\n\r\n                    /////////////////\r\n                    this.inventoryButtonLogo.style.background = \"center / contain no-repeat url(Assets/Desktop/Images/minus-sign-white.png)\";\r\n                    // this.button.style.borderColor = \"\";\r\n                    this.button.style.color = \"white\";\r\n\r\n                    this.onShowCategoryCallback(this.categoryElements);\r\n                }\r\n                else {\r\n\r\n                    ////////////////\r\n                    this.inventoryButtonLogo.style.background = \"center / contain no-repeat url(Assets/Desktop/Images/plus-sign-white.png)\";\r\n                    // this.button.style.borderColor = \"\";\r\n                    this.button.style.color = \"\";\r\n\r\n                    this.onHideCategoryCallback(this.categoryElements);\r\n                }\r\n            };\r\n\r\n            public onSignedIn(): void {\r\n                if (this.clicked) {\r\n                    this.onHideCategoryCallback(this.categoryElements);\r\n                    this.categoryElements = PockeySettings[\"LARGE_\" + this.category.toUpperCase() + \"_ARRAY\"];\r\n                    this.onShowCategoryCallback(this.categoryElements);\r\n                }\r\n                else {\r\n                    this.categoryElements = PockeySettings[\"LARGE_\" + this.category.toUpperCase() + \"_ARRAY\"];\r\n                }\r\n            }\r\n\r\n            public onSignedOut(): void {\r\n                if (this.clicked) {\r\n                    this.onHideCategoryCallback(this.categoryElements);\r\n                    this.categoryElements = PockeySettings[\"SMALL_\" + this.category.toUpperCase() + \"_ARRAY\"];\r\n                    this.onShowCategoryCallback(this.categoryElements);\r\n                }\r\n                else {\r\n                    this.categoryElements = PockeySettings[\"SMALL_\" + this.category.toUpperCase() + \"_ARRAY\"];\r\n                }\r\n\r\n            }\r\n\r\n            public activate(): void {\r\n                if (this.categoryElements.length > 0) {\r\n                    this.clickHandler();\r\n\r\n                    this.inventoryButtonLogo.style.background = \"center / contain no-repeat url(Assets/Desktop/Images/minus-sign-color.png)\";\r\n                    this.button.style.borderColor = \"white\";\r\n                    this.button.style.backgroundColor = \"white\";\r\n                    this.button.style.color = \"#2d889c\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 11/1/2018\r\n */\r\n\r\nnamespace Pockey {\r\n    export module UserInterface {\r\n        export class InventoryBox {\r\n            public imageDiv: HTMLDivElement;\r\n            public iconDiv: HTMLDivElement;\r\n            // public id: string;\r\n            public occupied: boolean = false;\r\n            // public category: string = \"\";\r\n            // private icon: string = \"\";\r\n            public clicked: boolean = false;\r\n            public inventoryVO:InventoryVO;\r\n\r\n            private borderAnimation: TweenMax;\r\n\r\n            constructor(imgDiv: HTMLDivElement, clickFunction: Function) {\r\n                this.imageDiv = imgDiv;\r\n                this.iconDiv = this.imageDiv.querySelector(\".inventoryItemBoxBackground\") as HTMLDivElement;\r\n\r\n                this.imageDiv.onmouseover = () => {\r\n                    if (this.occupied) {\r\n                        this.imageDiv.style.cursor = \"pointer\";\r\n                        this.imageDiv.style.borderColor = \"white\";\r\n                    }\r\n                    else {\r\n                        this.imageDiv.style.cursor = \"\";\r\n                        this.imageDiv.style.borderColor = \"\";\r\n                    }\r\n                };\r\n\r\n                this.imageDiv.onmouseout = () => {\r\n                    if (!this.clicked)\r\n                        this.imageDiv.style.borderColor = \"\";\r\n                };\r\n\r\n                this.imageDiv.onclick = () => {\r\n\r\n                    this.clicked = !this.clicked;\r\n\r\n                    if (this.clicked) {\r\n                        this.imageDiv.style.borderColor = \"white\";\r\n                        this.imageDiv.style.borderWidth = \"3px\";\r\n                    }\r\n\r\n                    if (this.occupied)\r\n                        clickFunction(this.inventoryVO);\r\n                }\r\n            }\r\n\r\n            public click():void\r\n            {\r\n                this.clicked = true;\r\n                this.imageDiv.style.borderColor = \"white\";\r\n                this.imageDiv.style.borderWidth = \"3px\";\r\n            }\r\n\r\n            public unClick():void\r\n            {\r\n                this.stopAnimation();\r\n                this.imageDiv.style.borderColor = \"\";\r\n                this.imageDiv.style.borderWidth = \"\";\r\n                this.clicked = false;\r\n            }\r\n\r\n            public addVO(inventoryVO: InventoryVO): void {\r\n                this.clearVO();\r\n\r\n                this.occupied = true;\r\n                this.inventoryVO = inventoryVO;\r\n                this.iconDiv.style.background = \"center / contain no-repeat #062f38 url(\" + this.inventoryVO.icon + \")\";\r\n                // this.category = inventoryVO.category;\r\n                // this.icon = inventoryVO.icon;\r\n            }\r\n\r\n            public clearVO(): void {\r\n                this.stopAnimation();\r\n                this.unClick();\r\n\r\n                // this.icon = \"\";\r\n                this.occupied = false;\r\n                this.iconDiv.style.background = \"center / contain no-repeat #062f38 url('')\";\r\n                this.inventoryVO = null;\r\n\r\n                (this.iconDiv.querySelector(\".inventoryItemBoxSelected\") as HTMLDivElement).style.display = \"\";\r\n                (this.iconDiv.querySelector(\".inventoryItemBoxLocked\") as HTMLDivElement).style.display = \"\";\r\n                // this.category = \"\";\r\n            }\r\n\r\n            private stopAnimation(): void {\r\n                if (this.borderAnimation && this.borderAnimation.isActive()) {\r\n                    this.borderAnimation.kill();\r\n                    this.borderAnimation = null;\r\n                }\r\n\r\n                this.imageDiv.style.borderColor = \"\";\r\n                this.imageDiv.style.borderWidth = \"\";\r\n            }\r\n\r\n            public animate(): void {\r\n\r\n                this.stopAnimation();\r\n\r\n                this.borderAnimation = TweenMax.to(this.imageDiv, 0.3, {\r\n                    css: {borderColor: \"white\", borderWidth: \"5px\"},\r\n                    yoyo: true,\r\n                    repeat: 1\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n","/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 11/8/2018\r\n */\r\n\r\nnamespace Pockey {\r\n    export module UserInterface {\r\n        export class InventoryItemsHolderButton {\r\n            public button: HTMLDivElement;\r\n            private bg: HTMLDivElement;\r\n            private iconBg: any;\r\n\r\n            constructor(btn: HTMLDivElement) {\r\n                this.button = btn;\r\n\r\n                let iconBgID: string = (this.button.getElementsByClassName(\"buttonArrow\")[0] as HTMLDivElement).id;\r\n                this.iconBg = document.getElementById(iconBgID);\r\n                let iconStyle = this.iconBg.currentStyle || window.getComputedStyle(this.iconBg);\r\n\r\n                // let initialBackground:string = iconBg.style.background;\r\n                let mouseOverBackground: string = iconStyle.background.toString().replace(\".svg\", \"-reg.svg\");\r\n\r\n                this.bg = this.button.getElementsByClassName(\"normalButtonBackground\")[0] as HTMLDivElement;\r\n\r\n                this.button.setAttribute(\"isActive\", \"true\");\r\n                this.button.onmouseover = () => {\r\n                    if (this.button.getAttribute(\"isActive\") == \"true\") {\r\n                        this.bg.style.background = \"white\";\r\n                        // bg.style.color = \"#2d899d\";\r\n                        this.iconBg.style.background = mouseOverBackground;\r\n                        /* cursor: pointer; */\r\n                    }\r\n                    else {\r\n                        this.bg.style.background = \"\";\r\n                        // bg.style.color = \"\";\r\n                        this.iconBg.style.background = \"\";\r\n                        /* cursor: pointer; */\r\n                    }\r\n                };\r\n\r\n                this.button.onmouseout = () => {\r\n                    // if (arrow.getAttribute(\"isActive\") == \"true\") {\r\n                    this.bg.style.background = \"\";\r\n                    // bg.style.color = \"#\";\r\n                    this.iconBg.style.background = \"\";\r\n\r\n                    /* cursor: pointer; */\r\n                    // }\r\n                };\r\n\r\n                this.disable();\r\n            }\r\n\r\n            public disable(): void {\r\n                this.button.style.opacity = \"0.5\";\r\n                this.button.style.cursor = \"default\";\r\n                this.button.setAttribute(\"isActive\", \"false\");\r\n                this.bg.style.background = \"\";\r\n                this.iconBg.style.background = \"\";\r\n\r\n            }\r\n\r\n            public enable(): void {\r\n                this.button.style.opacity = \"\";\r\n                this.button.style.cursor = \"\";\r\n                this.button.setAttribute(\"isActive\", \"true\");\r\n            }\r\n\r\n            /////\r\n\r\n            /////\r\n\r\n        }\r\n    }\r\n}\r\n","/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 11/1/2018\r\n */\r\n\r\n\r\nnamespace Pockey {\r\n    export module UserInterface {\r\n        import Settings = Framework.Settings;\r\n\r\n        export class InventoryButtonMobile extends InventoryButton {\r\n\r\n            constructor(btnDiv: HTMLDivElement, showCategoryCallback: Function, hideCategoryCallback: Function) {\r\n                super(btnDiv, showCategoryCallback, hideCategoryCallback);\r\n\r\n                this.button = btnDiv;\r\n                this.id = this.button.id;\r\n                this.onShowCategoryCallback = showCategoryCallback;\r\n                this.onHideCategoryCallback = hideCategoryCallback;\r\n                this.category = this.id.replace(\"Inventory\", \"\");\r\n                //console.log(\"categoryElements nickname: \" + this.category);\r\n                this.inventoryButtonLogo = this.button.querySelector('.inventoryButtonLogo') as HTMLDivElement;\r\n\r\n                if (Settings.playerSignedIn) {\r\n                    this.categoryElements = PockeySettings[\"LARGE_\" + this.category.toUpperCase() + \"_ARRAY\"];\r\n                }\r\n                else {\r\n                    this.categoryElements = PockeySettings[\"SMALL_\" + this.category.toUpperCase() + \"_ARRAY\"];\r\n                }\r\n\r\n                this.clicked = false;\r\n\r\n                this.button.onclick = () => {\r\n                    this.clickHandler();\r\n                };\r\n\r\n\r\n                this.button.onmouseover = () => {\r\n                    // reset, do not remove\r\n                };\r\n\r\n                this.button.onmouseout = () => {\r\n                    // reset, do not remove\r\n                };\r\n\r\n            }\r\n\r\n            protected clickHandler(): void {\r\n                this.clicked = !this.clicked;\r\n\r\n                if (this.clicked) {\r\n\r\n                    /////////////////\r\n                    // this.inventoryButtonLogo.style.background = \"center / contain no-repeat url(Assets/Desktop/Images/minus-sign-white.png)\";\r\n                    this.button.style.borderColor = \"white\";\r\n                    this.button.style.backgroundColor = \"white\";\r\n                    this.button.style.color = \"#2d889c\";\r\n\r\n                    this.onShowCategoryCallback(this.categoryElements);\r\n                }\r\n                else {\r\n\r\n                    ////////////////\r\n                    this.inventoryButtonLogo.style.background = \"center / contain no-repeat url(Assets/Desktop/Images/plus-sign-white.png)\";\r\n                    this.button.style.borderColor = \"\";\r\n                    this.button.style.backgroundColor = \"\";\r\n                    this.button.style.color = \"\";\r\n\r\n                    this.onHideCategoryCallback(this.categoryElements);\r\n                }\r\n            };\r\n\r\n            public onSignedIn(): void {\r\n                if (this.clicked) {\r\n                    this.onHideCategoryCallback(this.categoryElements);\r\n                    this.categoryElements = PockeySettings[\"LARGE_\" + this.category.toUpperCase() + \"_ARRAY\"];\r\n                    this.onShowCategoryCallback(this.categoryElements);\r\n                }\r\n                else {\r\n                    this.categoryElements = PockeySettings[\"LARGE_\" + this.category.toUpperCase() + \"_ARRAY\"];\r\n                }\r\n            }\r\n\r\n            public onSignedOut(): void {\r\n                if (this.clicked) {\r\n                    this.onHideCategoryCallback(this.categoryElements);\r\n                    this.categoryElements = PockeySettings[\"SMALL_\" + this.category.toUpperCase() + \"_ARRAY\"];\r\n                    this.onShowCategoryCallback(this.categoryElements);\r\n                }\r\n                else {\r\n                    this.categoryElements = PockeySettings[\"SMALL_\" + this.category.toUpperCase() + \"_ARRAY\"];\r\n                }\r\n\r\n            }\r\n\r\n            public activate(): void {\r\n                if (this.categoryElements.length > 0) {\r\n                    this.clickHandler();\r\n\r\n                    this.inventoryButtonLogo.style.background = \"center / contain no-repeat url(Assets/Desktop/Images/minus-sign-color.png)\";\r\n                    this.button.style.borderColor = \"white\";\r\n                    this.button.style.backgroundColor = \"white\";\r\n                    this.button.style.color = \"#2d889c\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","///<reference path=\"inventory-button.ts\"/>\r\n///<reference path=\"inventory-box.ts\"/>\r\n///<reference path=\"inventory-items-holder-buttons.ts\"/>\r\n///<reference path=\"../../../../../../Framework/Signals/signal-types.ts\"/>\r\n///<reference path=\"../../../../../../Framework/Settings.ts\"/>\r\n///<reference path=\"inventory-button-mobile.ts\"/>\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 10/31/2018\r\n */\r\n\r\nnamespace Pockey {\r\n    export module UserInterface {\r\n\r\n        import InventoryVO = Pockey.InventoryVO;\r\n        import SignalsManager = Framework.Signals.SignalsManager;\r\n        import PockeySignalTypes = Pockey.SignalsModule.PockeySignalTypes;\r\n        import DatabaseConnector = Framework.Connection.DatabaseConnector;\r\n        import DatabaseObject = Framework.Connection.DatabaseObject;\r\n        import SignalsType = Framework.Signals.SignalsType;\r\n        import Settings = Framework.Settings;\r\n\r\n        export class PockeyInventoryMenu {\r\n            private inventoryButtonsHolder: HTMLDivElement;\r\n            private inventoryButtons: InventoryButton[];\r\n\r\n            private boxesHolder: HTMLDivElement;\r\n            private holderTween: TweenMax;\r\n            private boxesHolderWrapper: HTMLDivElement;\r\n            private boxes: InventoryBox[];\r\n            private itemsArray: InventoryVO[];\r\n\r\n            private currentColumnIndex: number = 0;\r\n            private columnsNumber: number = 0;\r\n\r\n            private nextColumnBtn: InventoryItemsHolderButton;\r\n            private prevColumnBtn: InventoryItemsHolderButton;\r\n\r\n            private equipBtn: HTMLDivElement;\r\n\r\n            private bigAvatar: HTMLDivElement;\r\n            private itemNameDiv: HTMLDivElement;\r\n\r\n            private currentActiveItem: InventoryVO;\r\n            private columnWidth: number = 0;\r\n            private columnPadding: number = 0;\r\n            private offsetLimit: number;\r\n\r\n            constructor() {\r\n                this.itemsArray = [];\r\n                this.handleItemDescriptionPanel();\r\n                this.handleInventoryBoxes();\r\n                this.handleInventoryButtons();\r\n\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.PLAYER_SIGNED_IN, this.onPlayerSignedIn.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.PLAYER_SIGNED_OUT, this.onPlayerSignedOut.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.INVENTORY_ITEM_UPDATED, this.onInventoryItemUpdated.bind(this));\r\n                SignalsManager.AddSignalCallback(SignalsType.ALL_MODULES_ELEMENTS_CREATED, this.onAllModulesElementsCreated.bind(this));\r\n            }\r\n\r\n            private onAllModulesElementsCreated(): void {\r\n                for (let i = this.inventoryButtons.length; i--; i >= 0) {\r\n                    this.inventoryButtons[i].activate();\r\n                }\r\n\r\n                // this.moveHolderToOffset(0, true);\r\n            }\r\n\r\n            private onInventoryItemUpdated(params: string[]): void {\r\n                // if(params[0] == \"true\")\r\n                // {\r\n                //     return;\r\n                // }\r\n                this.updateBoxes(this.itemsArray);\r\n            }\r\n\r\n            private onPlayerSignedIn(): void {\r\n                _.forEach(this.inventoryButtons, (button: InventoryButton) => {\r\n                    button.onSignedIn();\r\n                })\r\n            }\r\n\r\n            private onPlayerSignedOut(): void {\r\n                _.forEach(this.inventoryButtons, (button: InventoryButton) => {\r\n                    button.onSignedOut();\r\n                });\r\n\r\n                this.updateBoxes(this.itemsArray);\r\n\r\n                this.moveHolderToOffset(0, true);\r\n            }\r\n\r\n            private handleItemDescriptionPanel(): void {\r\n                this.bigAvatar = document.getElementById(\"InventoryBigAvatar\") as HTMLDivElement;\r\n                this.itemNameDiv = document.getElementById(\"ItemNameText\") as HTMLDivElement;\r\n            }\r\n\r\n            private handleInventoryBoxes(): void {\r\n                this.boxesHolder = document.getElementById(\"ItemsHolder\") as HTMLDivElement;\r\n                this.boxesHolderWrapper = document.getElementById(\"ItemsHolderWrapper\") as HTMLDivElement;\r\n                this.boxesHolderWrapper.classList.add(\"inventoryRightSideMask\");\r\n                this.boxes = [];\r\n\r\n                /* var x = this.boxesHolder.querySelector('.itemsColumn');\r\n                 var initialWidth = x.clientWidth;\r\n                 console.log(\"initialWidth : \" + initialWidth);\r\n\r\n                this.columnWidth = (this.boxesHolder.children[0] as HTMLDivElement).offsetWidth;\r\n                 console.log(\"offset width: \" + this.columnWidth);\r\n                 // console.log(\"outer width: \" + column.outerWidth);\r\n                 this.columnWidth = (this.boxesHolder.children[0] as HTMLDivElement).scrollWidth;\r\n                 console.log(\"scroll width: \" + this.columnWidth);*/\r\n\r\n                let counter: number = 0;\r\n                _.forEach(this.boxesHolder.children, (column: HTMLDivElement) => {\r\n                    this.columnsNumber++;\r\n\r\n                    this.columnPadding = +((column.style.marginRight).replace(\"px\", \"\"));\r\n                    // console.log(\"offset width: \" + column.);\r\n                    // // console.log(\"outer width: \" + column.outerWidth);\r\n                    // console.log(\"scroll width: \" + column.scrollWidth);\r\n                    // console.log(\"parent node width: \" + column.parentNode.);\r\n                    _.forEach(column.children, (item: HTMLDivElement) => {\r\n                        let box: InventoryBox = new InventoryBox(item, this.showItemDescription.bind(this));\r\n                        this.boxes.push(box);\r\n                        counter++;\r\n                    });\r\n                });\r\n\r\n                TweenMax.delayedCall(0.5, () => {\r\n                    if (this.columnWidth == 0) {\r\n                        this.columnWidth = this.boxesHolder.scrollWidth / this.boxesHolder.children.length;\r\n                    }\r\n                });\r\n\r\n\r\n                // holderWidth = holderWidth.replace(\"px\", \"\");\r\n\r\n\r\n                //console.log(\"curr col index: \" + this.currentColumnIndex);\r\n            }\r\n\r\n            private showCategory(category: InventoryVO[]): void {\r\n                if (this.columnWidth == 0) {\r\n                    this.columnWidth = this.boxesHolder.scrollWidth / this.boxesHolder.children.length;\r\n                }\r\n\r\n                _.forEach(category, (inventoryVO: InventoryVO, counter) => {\r\n                    _.remove(this.itemsArray, (item: InventoryVO) => {\r\n                        return item.id == inventoryVO.id;\r\n                    });\r\n\r\n                    this.itemsArray.push(inventoryVO);\r\n                });\r\n\r\n                this.reorderItemsArray();\r\n\r\n                let neededColumns: number = Math.round(this.itemsArray.length / 3);\r\n                let columnsNo: number = this.boxesHolder.children.length;\r\n\r\n                if (neededColumns > columnsNo) {\r\n                    // Get the last <li> element (\"Milk\") of <ul> with id=\"myList2\"\r\n                    let itm = this.boxesHolder.children[0];\r\n\r\n                    _.forEach(_.range(neededColumns - columnsNo), () => {\r\n                        let newColumn = itm.cloneNode(true);\r\n                        this.boxesHolder.appendChild(newColumn);\r\n                    });\r\n\r\n                    this.boxes = [];\r\n\r\n                    _.forEach(this.boxesHolder.children, (column: HTMLDivElement) => {\r\n                        // this.columnsNumber++;\r\n                        _.forEach(column.children, (item: HTMLDivElement) => {\r\n                            let box: InventoryBox = new InventoryBox(item, this.showItemDescription.bind(this));\r\n                            this.boxes.push(box);\r\n                        });\r\n                    });\r\n                }\r\n\r\n                // this.getNewColumnIndexOnShow(category[0].category);\r\n                this.updateBoxes(this.itemsArray, category[0].category);\r\n\r\n\r\n                let columnIndex = this.getNewColumnIndexOnShow(category[0].category);\r\n\r\n                let newOffset: number = columnIndex * this.columnWidth;\r\n                this.moveHolderToOffset(newOffset);\r\n                /*\r\n                this.updateBoxes(this.itemsToBeDisplayed, category[0].category);*/\r\n            }\r\n\r\n            private getNewColumnIndexOnShow(categoryName: string): number {\r\n\r\n                let firstItemIndex: number = -1;\r\n                let lastItemIndex: number = 0;\r\n\r\n                _.forEach(this.itemsArray, (item: InventoryVO, counter: number) => {\r\n                    if (item.category == categoryName) {\r\n\r\n                        if (firstItemIndex == -1) {\r\n\r\n                            firstItemIndex = counter;\r\n                            lastItemIndex = firstItemIndex - 1;\r\n\r\n                        }\r\n\r\n                        lastItemIndex++;\r\n                    }\r\n                });\r\n\r\n                // console.log(\"first and last item: \" + firstItemIndex, lastItemIndex);\r\n\r\n                let columnIndex: number = Math.floor(firstItemIndex / 3);\r\n                let maxColumns: number = this.boxesHolder.children.length;\r\n\r\n                if (columnIndex > maxColumns) {\r\n                    columnIndex = maxColumns;\r\n                }\r\n\r\n                /* if (tempColumnIndex < this.columnsNumber) {\r\n                     tempColumnIndex = this.columnsNumber;\r\n                 }*/\r\n\r\n                // this.currentColumnIndex = tempColumnIndex;\r\n\r\n\r\n                // console.log(\"tempColumnIndex: \" + tempColumnIndex);\r\n                // console.log(\"max columns: \" + maxColumns);\r\n                // console.log(\"itemsArray length: \" + this.itemsArray.length);\r\n\r\n                //\r\n\r\n                // console.log(\"current columns index: \" + this.currentColumnIndex);\r\n                return columnIndex;\r\n            }\r\n\r\n            private reorderItemsArray(): void {\r\n                let newArr: InventoryVO[] = [];\r\n\r\n                _.forEach(this.inventoryButtons, (button: InventoryButton) => {\r\n                    _.forEach(this.itemsArray, (item: InventoryVO) => {\r\n                        if (item.category.toUpperCase() == button.category.toUpperCase()) {\r\n                            newArr.push(item);\r\n                        }\r\n                    });\r\n                });\r\n\r\n                this.itemsArray = newArr;\r\n\r\n            }\r\n\r\n            private hideCategory(category: InventoryVO[]): void {\r\n\r\n                // let neededColumns: number = Math.round(this.itemsArray.length / 3);\r\n                // let columnsNo:number = document.getElementById(\"ItemsHolder\").children.length;\r\n\r\n\r\n                // let tempCurrentColumn: number = this.currentColumnIndex;\r\n\r\n                _.forEach(category, (inventoryVO: InventoryVO, counter) => {\r\n                    _.remove(this.itemsArray, (item: InventoryVO) => {\r\n                        if (item.id == inventoryVO.id) {\r\n\r\n                        }\r\n                        return item.id == inventoryVO.id;\r\n                    });\r\n                });\r\n                this.reorderItemsArray();\r\n\r\n\r\n                let neededColumns: number = Math.round(this.itemsArray.length / 3);\r\n                if (neededColumns < this.columnsNumber) {\r\n                    neededColumns = this.columnsNumber;\r\n                }\r\n                let columnsNo: number = this.boxesHolder.children.length;\r\n                if (columnsNo > neededColumns) {\r\n                    // console.log(\"intra la columnsNo > neededColumns\");\r\n                    // console.log(\"children inainate de remove: \" + this.boxesHolder.children.length);\r\n\r\n                    let boxes: HTMLCollection = this.boxesHolder.children;\r\n                    for (let i = boxes.length - 1; i >= neededColumns; i--) {\r\n                        this.boxesHolder.removeChild(boxes[i]);\r\n                    }\r\n\r\n\r\n                    /*_.forEach(_.range(document.getElementById(\"ItemsHolder\").children.length), (counter:number) => {\r\n                        if(counter >= neededColumns - 1)\r\n                        {\r\n                            // var elem = document.getElementById(id);\r\n                            // this.boxesHolder.removeChild(this.boxesHolder.childNodes[counter]);\r\n                            // removech\r\n                            // this.boxesHolder.removeChild(this.boxesHolder.childNodes[counter]);\r\n                        }\r\n                    });*/\r\n                    // console.log(\"children dupa remove: \" + this.boxesHolder.children.length);\r\n\r\n                    // var element = document.getElementById(elementId);\r\n                    // element.parentNode.removeChild(element);\r\n                    // while (document.getElementById(\"ItemsHolder\").children.length > neededColumns) {\r\n                    //     document.getElementById(\"ItemsHolder\").parentNode.removeChild(document.getElementById(\"ItemsHolder\").parentNode.children[0]);\r\n                    // }\r\n\r\n                    // let itm = document.getElementById(\"ItemsHolder\").children[0];\r\n                    /*\r\n                                        _.forEach(_.range(neededColumns - columnsNo), () => {\r\n                                            let newColumn = itm.cloneNode(true);\r\n                                            document.getElementById(\"ItemsHolder\").appendChild(newColumn);\r\n                                        });\r\n\r\n                                        this.boxes = [];\r\n\r\n                                        _.forEach(this.boxesHolder.children, (column: HTMLDivElement) => {\r\n                                            this.columnsNumber++;\r\n                                            _.forEach(column.children, (item: HTMLDivElement) => {\r\n                                                let box: InventoryBox = new InventoryBox(item, this.showItemDescription.bind(this));\r\n                                                this.boxes.push(box);\r\n                                            });\r\n                                        });*/\r\n                }\r\n                // let maxColumns: number = Math.round(this.itemsArray.length / 3);\r\n                // if (tempCurrentColumn > maxColumns)\r\n                //     tempCurrentColumn = maxColumns;\r\n                // if (tempCurrentColumn < this.columnsNumber)\r\n                //     tempCurrentColumn = this.columnsNumber;\r\n                //\r\n                // let itemsArrayIncludesClickedBoxID: boolean = false;\r\n                //\r\n                // _.forEach(this.itemsArray, (item: InventoryVO, counter: number) => {\r\n                //     if (this.currentActiveItem.id && item.id == this.currentActiveItem.id) {\r\n                //         itemsArrayIncludesClickedBoxID = true;\r\n                //         return true;\r\n                //     }\r\n                // });\r\n                //\r\n                // if (!itemsArrayIncludesClickedBoxID) {\r\n                //     //todo in caz ca ai unul selectat dintr-o categorie care a ramas sa ramana ala activ chiar daca in alt box vezi clicked id vezi clickedID\r\n                //     this.resetItemDescription();\r\n                // }\r\n                //\r\n                // this.currentColumnIndex = tempCurrentColumn;\r\n\r\n\r\n                this.updateBoxes(this.itemsArray);\r\n\r\n                let currentRight: string = this.boxesHolder.style.right;\r\n                currentRight = currentRight.replace(\"px\", \"\");\r\n\r\n                let newOffset: number = +currentRight;\r\n\r\n\r\n                if (this.itemsArray.length == 0) {\r\n                    this.disableEquipBtn(false);\r\n                    this.moveHolderToOffset(0);\r\n                }\r\n                else {\r\n                    if (this.itemsArray.length < 21) {\r\n                        this.moveHolderToOffset(0, true);\r\n                    }\r\n                    else {\r\n                        this.moveHolderToOffset(newOffset, true);\r\n                    }\r\n                }\r\n            }\r\n\r\n            private handleInventoryButtons(): void {\r\n                this.nextColumnBtn = new InventoryItemsHolderButton(document.getElementById(\"ItemsNextButton\") as HTMLDivElement);\r\n                // this.handleArrowBtn(this.nextColumnBtn);\r\n                this.nextColumnBtn.button.onclick = () => {\r\n                    if (this.nextColumnBtn.button.getAttribute(\"isActive\") == \"true\") {\r\n                        if (this.columnWidth == 0) {\r\n                            this.columnWidth = this.boxesHolder.scrollWidth / this.boxesHolder.children.length;\r\n                        }\r\n                        let currentRightPos: string = this.boxesHolder.style.right;\r\n                        currentRightPos = currentRightPos.replace(\"px\", \"\");\r\n\r\n                        let newOffset: number = +currentRightPos + this.columnWidth * 2;\r\n\r\n                        this.moveHolderToOffset(newOffset);\r\n                    }\r\n\r\n                };\r\n\r\n                this.prevColumnBtn = new InventoryItemsHolderButton(document.getElementById(\"ItemsPrevButton\") as HTMLDivElement);\r\n                // this.handleArrowBtn(this.prevColumnBtn);\r\n                this.prevColumnBtn.button.onclick = () => {\r\n                    if (this.prevColumnBtn.button.getAttribute(\"isActive\") == \"true\") {\r\n                        if (this.columnWidth == 0) {\r\n                            this.columnWidth = this.boxesHolder.scrollWidth / this.boxesHolder.children.length;\r\n                        }\r\n                        let currentRightPos: string = this.boxesHolder.style.right;\r\n                        currentRightPos = currentRightPos.replace(\"px\", \"\");\r\n\r\n                        let newOffset: number = +currentRightPos - this.columnWidth * 2;\r\n                        this.moveHolderToOffset(newOffset);\r\n                    }\r\n\r\n                };\r\n\r\n                this.inventoryButtonsHolder = document.getElementById(\"InventoryButtonsHolder\") as HTMLDivElement;\r\n\r\n                this.inventoryButtons = [];\r\n\r\n                let inventoryButton: InventoryButton;\r\n                _.forEach(this.inventoryButtonsHolder.children, (button: HTMLDivElement) => {\r\n                    // for (let i = 0; i < doc.childNodes.length; i++) {\r\n                    if (button.className == \"inventoryButton\") {\r\n                        if (Settings.isMobile)\r\n                            inventoryButton = new InventoryButtonMobile(button, this.showCategory.bind(this), this.hideCategory.bind(this));\r\n                        else\r\n                            inventoryButton = new InventoryButton(button, this.showCategory.bind(this), this.hideCategory.bind(this));\r\n\r\n                        this.inventoryButtons.push(inventoryButton);\r\n\r\n                    }\r\n                });\r\n\r\n                //todo la start game signals callback si abia atunci sa dai show category\r\n                // this.showCategory(this.inventoryButtons[0].categoryElements);\r\n                // this.updateBoxes(this.itemsArray)\r\n\r\n\r\n                this.equipBtn = document.getElementById(\"EquipButtonHolder\") as HTMLDivElement;\r\n                this.equipBtn.style.opacity = \"0.5\";\r\n                this.equipBtn.setAttribute('clicked', 'false');\r\n\r\n                this.equipBtn.onclick = () => {\r\n                    if (this.equipBtn.getAttribute(\"enabled\") == \"true\") {\r\n                        // let clicked: string = (this.equipBtn.getAttribute('clicked') == \"true\") ? \"false\" : \"true\";\r\n                        // this.equipBtn.setAttribute('clicked', clicked);\r\n\r\n                        // if(this.equipBtn.getAttribute('clicked') == \"true\")\r\n                        // {\r\n                        // this.currentActiveItem\r\n                        switch (this.currentActiveItem.category) {\r\n\r\n                            case \"AVATARS\": {\r\n                                // _.forEach(PockeySettings.LARGE_AVATARS_ARRAY)\r\n                                // if (PockeySettings.PLAYER_AVATAR_ID != this.currentActiveItem.id) {\r\n                                //     this.enableEquipBtn();\r\n                                // }\r\n                                // else {\r\n                                //     this.disableEquipBtn();\r\n                                // }\r\n                                PockeySettings.PLAYER_AVATAR_ID = this.currentActiveItem.id;\r\n                                SignalsManager.DispatchSignal(PockeySignalTypes.INVENTORY_ITEM_UPDATED);\r\n                                this.checkIfCurrentItemCanBeUsed();\r\n                                let dbObject: DatabaseObject = {\r\n                                    userID: PockeySettings.PLAYER_ID,\r\n                                    column: \"avatar\",\r\n                                    value: PockeySettings.PLAYER_AVATAR_ID\r\n                                };\r\n                                DatabaseConnector.updateUserData(dbObject, null);\r\n                                return;\r\n                            }\r\n                            case \"CUES\": {\r\n                                // if (PockeySettings.PLAYER_CUE_ID != this.currentActiveItem.id) {\r\n                                //     this.enableEquipBtn();\r\n                                // }\r\n                                // else {\r\n                                //     this.disableEquipBtn();\r\n                                // }\r\n                                PockeySettings.PLAYER_CUE_ID = this.currentActiveItem.id;\r\n                                SignalsManager.DispatchSignal(PockeySignalTypes.INVENTORY_ITEM_UPDATED);\r\n                                this.checkIfCurrentItemCanBeUsed();\r\n                                let dbObject: DatabaseObject = {\r\n                                    userID: PockeySettings.PLAYER_ID,\r\n                                    column: \"stick\",\r\n                                    value: PockeySettings.PLAYER_CUE_ID\r\n                                };\r\n                                DatabaseConnector.updateUserData(dbObject, null);\r\n\r\n                                return;\r\n                            }\r\n                            case \"DECALS\": {\r\n                                // if (PockeySettings.PLAYER_DECAL_ID != this.currentActiveItem.id) {\r\n                                //     this.enableEquipBtn();\r\n                                // }\r\n                                // else {\r\n                                //     this.disableEquipBtn();\r\n                                // }\r\n                                PockeySettings.PLAYER_DECAL_ID = this.currentActiveItem.id;\r\n                                SignalsManager.DispatchSignal(PockeySignalTypes.INVENTORY_ITEM_UPDATED);\r\n                                this.checkIfCurrentItemCanBeUsed();\r\n                                let dbObject: DatabaseObject = {\r\n                                    userID: PockeySettings.PLAYER_ID,\r\n                                    column: \"decal\",\r\n                                    value: PockeySettings.PLAYER_DECAL_ID\r\n                                };\r\n                                DatabaseConnector.updateUserData(dbObject, null);\r\n                                return;\r\n                            }\r\n                            case \"GOALIES\": {\r\n                                return;\r\n                            }\r\n                            case \"MISC\": {\r\n                                /*PockeySettings.PLAYER_DECAL_ID = this.currentActiveItem.id;\r\n                                SignalsManager.DispatchSignal(PockeySignalTypes.INVENTORY_ITEM_UPDATED);*/\r\n                                this.checkIfCurrentItemCanBeUsed();\r\n                                /*let dbObject: DatabaseObject = {\r\n                                    userID: PockeySettings.PLAYER_ID,\r\n                                    column: \"decal\",\r\n                                    value: PockeySettings.PLAYER_DECAL_ID\r\n                                };\r\n                                DatabaseConnector.updateUserData(dbObject, null);*/\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                    /*else\r\n                    {\r\n\r\n                    }*/\r\n                    // console.log(\"equip: \" + this.equipBtn.getAttribute('clicked'));\r\n                    // }\r\n\r\n                }\r\n            }\r\n\r\n            private moveHolderToOffset(offset: number, fast?: boolean): void {\r\n                this.offsetLimit = this.boxesHolder.offsetWidth;\r\n                // this.prevColumnBtn.enable();\r\n                // this.prevColumnBtn.enable();\r\n\r\n                if (offset > this.boxesHolder.scrollWidth - this.boxesHolder.offsetWidth) {\r\n                    // console.log(\"cazul 1: \" + offset, this.boxesHolder.scrollWidth, this.boxesHolder.offsetWidth);\r\n\r\n                    offset = this.boxesHolder.scrollWidth - this.boxesHolder.offsetWidth;\r\n                    if (offset != 0) {\r\n                        this.boxesHolderWrapper.classList.remove(\"inventoryMask\");\r\n                        this.boxesHolderWrapper.classList.remove(\"inventoryRightSideMask\");\r\n                        this.boxesHolderWrapper.classList.add(\"inventoryLeftSideMask\");\r\n                        this.nextColumnBtn.disable();\r\n                        this.prevColumnBtn.enable();\r\n                    }\r\n\r\n\r\n                    // this.disableArrow(this.nextColumnBtn);\r\n                    // this.nextColumnBtn.classList.add(\"disabledInventoryBtn\");\r\n                    // this.prevColumnBtn.classList.remove(\"disabledInventoryBtn\");\r\n                }\r\n                else if (offset <= 0) {\r\n                    offset = 0;\r\n                    this.boxesHolderWrapper.classList.remove(\"inventoryMask\");\r\n                    this.boxesHolderWrapper.classList.remove(\"inventoryLeftSideMask\");\r\n                    this.boxesHolderWrapper.classList.add(\"inventoryRightSideMask\");\r\n                    this.nextColumnBtn.enable();\r\n                    this.prevColumnBtn.disable();\r\n\r\n                    // console.log(\"cazul 2\");\r\n\r\n                    // this.nextColumnBtn.classList.remove(\"disabledInventoryBtn\");\r\n                    // this.prevColumnBtn.classList.add(\"disabledInventoryBtn\");\r\n                }\r\n                else {\r\n                    this.boxesHolderWrapper.classList.remove(\"inventoryLeftSideMask\");\r\n                    this.boxesHolderWrapper.classList.remove(\"inventoryRightSideMask\");\r\n                    this.boxesHolderWrapper.classList.add(\"inventoryMask\");\r\n                    this.nextColumnBtn.enable();\r\n                    this.prevColumnBtn.enable();\r\n\r\n                    // console.log(\"cazul 3\");\r\n\r\n                    // this.nextColumnBtn.classList.remove(\"disabledInventoryBtn\");\r\n                    // this.prevColumnBtn.classList.remove(\"disabledInventoryBtn\");\r\n                }\r\n\r\n                if (this.itemsArray.length == 0) {\r\n                    this.nextColumnBtn.disable();\r\n                    this.prevColumnBtn.disable();\r\n                }\r\n\r\n                if (this.holderTween && this.holderTween.isActive()) {\r\n                    this.holderTween.kill();\r\n                }\r\n\r\n                let tweenTime: number = 0.2;\r\n                if (fast)\r\n                    tweenTime = 0;\r\n\r\n                this.holderTween = TweenMax.to(this.boxesHolder, tweenTime, {css: {\"right\": offset.toString() + \"px\"}});\r\n                // this.boxesHolder.style.right = offset.toString() + \"px\";\r\n            }\r\n\r\n            /*private disableArrowButton(btn: HTMLDivElement): void {\r\n                btn.style.opacity = \"0.5\";\r\n                btn.style.cursor = \"default\";\r\n                btn.setAttribute(\"isActive\", \"false\");\r\n                let bg: HTMLDivElement = btn.getElementsByClassName(\"normalButtonBackground\")[0] as HTMLDivElement;\r\n                bg.style.background = \"#2d899d\";\r\n                // bg.style.zIndex = \"-10\";\r\n            }\r\n\r\n            private enableArrowBtn(btn: HTMLDivElement): void {\r\n                btn.style.opacity = \"\";\r\n                btn.style.cursor = \"\";\r\n                btn.setAttribute(\"isActive\", \"true\");\r\n            }*/\r\n\r\n            private updateBoxes(itemsToBeDisplayed: InventoryVO[], categoryToAnimate?: string) {\r\n                let maxLength: number = (this.boxes.length <= itemsToBeDisplayed.length) ? this.boxes.length : itemsToBeDisplayed.length;\r\n\r\n                _.forEach(this.boxes, (box: InventoryBox) => {\r\n                    box.clearVO();\r\n                });\r\n\r\n                _.forEach(_.range(maxLength), (counter: number) => {\r\n                    this.boxes[counter].addVO(itemsToBeDisplayed[counter]);\r\n\r\n                    if (this.currentActiveItem && this.boxes[counter].inventoryVO.id == this.currentActiveItem.id) {\r\n                        this.boxes[counter].click();\r\n                    }\r\n                    else {\r\n                        this.boxes[counter].unClick();\r\n                    }\r\n\r\n                    if (this.boxes[counter].inventoryVO.level > PockeySettings.PLAYER_LEVEL) {\r\n                        (this.boxes[counter].iconDiv.querySelector(\".inventoryItemBoxLocked\") as HTMLDivElement).style.display = \"block\";\r\n                    }\r\n                    else {\r\n                        (this.boxes[counter].iconDiv.querySelector(\".inventoryItemBoxLocked\") as HTMLDivElement).style.display = \"\";\r\n                    }\r\n\r\n                    if (categoryToAnimate && this.boxes[counter].inventoryVO.category.toUpperCase() == categoryToAnimate.toUpperCase()) {\r\n                        this.boxes[counter].animate();\r\n                    }\r\n\r\n                    if (this.boxes[counter].inventoryVO.id == PockeySettings.PLAYER_AVATAR_ID\r\n                        || this.boxes[counter].inventoryVO.id == PockeySettings.PLAYER_DECAL_ID\r\n                        || this.boxes[counter].inventoryVO.id == PockeySettings.PLAYER_CUE_ID) {\r\n                        (this.boxes[counter].iconDiv.querySelector(\".inventoryItemBoxSelected\") as HTMLDivElement).style.display = \"block\";\r\n                    }\r\n                    else {\r\n                        (this.boxes[counter].iconDiv.querySelector(\".inventoryItemBoxSelected\") as HTMLDivElement).style.display = \"\";\r\n\r\n                    }\r\n                });\r\n\r\n            }\r\n\r\n            private showItemDescription(inventoryVO: InventoryVO): void {\r\n                this.bigAvatar.style.background = \"center / contain no-repeat #062f38 url(\" + inventoryVO.icon + \")\";\r\n                this.itemNameDiv.innerHTML = inventoryVO.id;\r\n\r\n                _.forEach(this.boxes, (box: InventoryBox) => {\r\n                    if (box.occupied) {\r\n                        if (box.inventoryVO.id != inventoryVO.id) {\r\n                            box.unClick();\r\n                        }\r\n                    }\r\n                });\r\n\r\n                this.currentActiveItem = inventoryVO;\r\n\r\n                this.checkIfCurrentItemCanBeUsed();\r\n            }\r\n\r\n            private checkIfCurrentItemCanBeUsed(): void {\r\n\r\n                if (this.currentActiveItem.level > PockeySettings.PLAYER_LEVEL) {\r\n                    this.disableEquipBtn(false);\r\n                    return;\r\n                }\r\n\r\n                switch (this.currentActiveItem.category) {\r\n\r\n                    case \"AVATARS\": {\r\n                        // _.forEach(PockeySettings.LARGE_AVATARS_ARRAY)\r\n                        if (PockeySettings.PLAYER_AVATAR_ID != this.currentActiveItem.id) {\r\n                            this.enableEquipBtn();\r\n                        }\r\n                        else {\r\n                            this.disableEquipBtn();\r\n                        }\r\n                        return;\r\n                    }\r\n                    case \"CUES\": {\r\n                        if (PockeySettings.PLAYER_CUE_ID != this.currentActiveItem.id) {\r\n                            this.enableEquipBtn();\r\n                        }\r\n                        else {\r\n                            this.disableEquipBtn();\r\n                        }\r\n                        return;\r\n                    }\r\n                    case \"DECALS\": {\r\n                        if (PockeySettings.PLAYER_DECAL_ID != this.currentActiveItem.id) {\r\n                            this.enableEquipBtn();\r\n                        }\r\n                        else {\r\n                            this.disableEquipBtn();\r\n                        }\r\n                        return;\r\n                    }\r\n                    case \"GOALIES\": {\r\n\r\n                        return;\r\n                    }\r\n                    case \"MISC\": {\r\n                        /*\r\n                        if (PockeySettings.PLAYER_DECAL_ID != this.currentActiveItem.id) {\r\n                            this.enableEquipBtn();\r\n                        }\r\n                        else {\r\n                            this.disableEquipBtn();\r\n                        }\r\n                        */\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            private enableEquipBtn(): void {\r\n                this.equipBtn.setAttribute(\"enabled\", \"true\");\r\n                this.equipBtn.style.opacity = \"1\";\r\n                this.equipBtn.querySelector(\".normalButtonBackground\").innerHTML = \"EQUIP\";\r\n                this.equipBtn.style.cursor = \"pointer\";\r\n                // let equipBtnBackground:HTMLDivElement = this.equipBtn.querySelector(\".normalButtonBackground\") as HTMLDivElement;\r\n            }\r\n\r\n            private disableEquipBtn(changeText: boolean = true): void {\r\n                this.equipBtn.setAttribute(\"enabled\", \"false\");\r\n                this.equipBtn.style.opacity = \"0.5\";\r\n                if (changeText)\r\n                    this.equipBtn.querySelector(\".normalButtonBackground\").innerHTML = \"EQUIPPED\";\r\n                else {\r\n                    this.equipBtn.querySelector(\".normalButtonBackground\").innerHTML = \"EQUIP\";\r\n                }\r\n                this.equipBtn.style.cursor = \"\";\r\n            }\r\n\r\n            private resetItemDescription(): void {\r\n                this.bigAvatar.style.background = \"center / contain no-repeat #062f38 url('')\";\r\n                this.itemNameDiv.innerHTML = \"Item Name\";\r\n\r\n                /*_.forEach(this.boxes, (box:InventoryBox) => {\r\n                    if(box.occupied)\r\n                    {\r\n                        if(box.inventoryVO.id != inventoryVO.id)\r\n                        {\r\n                            box.unClick();\r\n                        }\r\n                    }\r\n                });*/\r\n            }\r\n\r\n            /* private handleArrowBtn(arrow: HTMLDivElement): void {\r\n                 //center url(\"Assets/Desktop/Images/icon_arrow1-left-reg.svg\")\r\n                 let iconBgID: string = (arrow.getElementsByClassName(\"buttonArrow\")[0] as HTMLDivElement).id;\r\n                 let iconBg: any = document.getElementById(iconBgID);\r\n                 let iconStyle = iconBg.currentStyle || window.getComputedStyle(iconBg);\r\n\r\n                 // let initialBackground:string = iconBg.style.background;\r\n                 let mouseOverBackground: string = iconStyle.background.toString().replace(\".svg\", \"-reg.svg\");\r\n\r\n                 let bg: HTMLDivElement = arrow.getElementsByClassName(\"normalButtonBackground\")[0] as HTMLDivElement;\r\n\r\n                 arrow.setAttribute(\"isActive\", \"true\");\r\n                 arrow.onmouseover = () => {\r\n                     if (arrow.getAttribute(\"isActive\") == \"true\") {\r\n                         bg.style.background = \"white\";\r\n                         // bg.style.color = \"#2d899d\";\r\n                         iconBg.style.background = mouseOverBackground;\r\n                         /!* cursor: pointer; *!/\r\n                     }\r\n                     else {\r\n                         bg.style.background = \"\";\r\n                         // bg.style.color = \"\";\r\n                         iconBg.style.background = \"\";\r\n                         /!* cursor: pointer; *!/\r\n                     }\r\n                 };\r\n\r\n                 arrow.onmouseout = () => {\r\n                     // if (arrow.getAttribute(\"isActive\") == \"true\") {\r\n                     bg.style.background = \"\";\r\n                     // bg.style.color = \"#\";\r\n                     iconBg.style.background = \"\";\r\n\r\n                     /!* cursor: pointer; *!/\r\n                     // }\r\n                 };\r\n\r\n\r\n                 /!* let arrowBg:HTMLDivElement = arrow.getElementsByClassName(\"buttonArrow\")[0] as HTMLDivElement;\r\n                  if(!arrow.getAttribute(\"initialBg\"))\r\n                  {\r\n                     arrow.setAttribute(\"initialBg\", arrowBg.style.background)\r\n                  }\r\n\r\n                  // arrow.classList.remove(\"hover\");\r\n                  arrow.style.opacity = \"0.5\";\r\n                  arrow.onmouseover = () => {\r\n                      arrow.style.cursor = \"default\";\r\n                      // arrowBg.style.cursor = \"default\";\r\n                      arrowBg.style.background = arrow.getAttribute(\"initialBg\");\r\n                  }*!/\r\n\r\n             }*/\r\n        }\r\n    }\r\n}\r\n","///<reference path=\"../../../../../Framework/Utils/pixi-button.ts\"/>\r\n///<reference path=\"DesignElements/play-game-menu.ts\"/>\r\n///<reference path=\"DesignElements/inventory-menu.ts\"/>\r\n\r\n\r\nnamespace Pockey {\r\n    export module UserInterface {\r\n\r\n        export class PockeyUiMainScreen   {\r\n\r\n            protected mainMenuElementsHolder: HTMLDivElement;\r\n\r\n            protected playGameButton: HTMLDivElement;\r\n            protected inventoryButton: HTMLDivElement;\r\n            protected inviteFriendButton: HTMLDivElement;\r\n            protected leaderboardButton: HTMLDivElement;\r\n            protected mainMenuButtons: HTMLDivElement[];\r\n\r\n            protected loginMenu: HTMLDivElement;\r\n            protected leftSideLoginMenu: HTMLDivElement;\r\n            protected leaderboardMenu: HTMLDivElement;\r\n            protected inviteMenu: HTMLDivElement;\r\n            protected tutorialAndShareButtonsMenu: HTMLDivElement;\r\n            protected inventoryScreen: HTMLDivElement;\r\n\r\n            protected playGameMenu: PlayGameMenu;\r\n            protected inventoryMenu: PockeyInventoryMenu;\r\n\r\n            protected pockeyHelmetAndStick:HTMLDivElement;\r\n\r\n            constructor() {\r\n                this.defineElements();\r\n            }\r\n\r\n            protected defineElements(): void {\r\n                ////////////\r\n                this.loginMenu = document.getElementById(\"LoginScreen\") as HTMLDivElement;\r\n                this.playGameMenu = new PlayGameMenu();\r\n//                 this.hideElement(this.loginMenu);\r\n\r\n                this.inventoryMenu = new PockeyInventoryMenu();\r\n                // jQuery(this.loginMenu.id).hide();\r\n\r\n                this.leftSideLoginMenu = document.getElementById(\"LeftSide\") as HTMLDivElement;\r\n                this.leaderboardMenu = document.getElementById(\"LeaderBoardScreen\") as HTMLDivElement;\r\n                this.hideElement(this.leaderboardMenu);\r\n\r\n                this.inviteMenu = document.getElementById(\"InviteElementsHolder\") as HTMLDivElement;\r\n                this.hideElement(this.inviteMenu);\r\n\r\n                this.tutorialAndShareButtonsMenu = document.getElementById(\"TutorialAndShareButtonsHolder\") as HTMLDivElement;\r\n                // this.hideElement(this.tutorialAndShareButtonsMenu);\r\n\r\n                this.inventoryScreen = document.getElementById(\"InventoryScreen\") as HTMLDivElement;\r\n                this.hideElement(this.inventoryScreen);\r\n\r\n                this.mainMenuElementsHolder = document.getElementById(\"MainMenuElementsHolder\") as HTMLDivElement;\r\n\r\n                /////////////////\r\n                this.mainMenuButtons = [];\r\n\r\n                this.playGameButton = document.getElementById(\"PlayGameButton\") as HTMLDivElement;\r\n                this.mainMenuButtons.push(this.playGameButton);\r\n\r\n                this.inventoryButton = document.getElementById(\"InventoryButton\") as HTMLDivElement;\r\n                this.mainMenuButtons.push(this.inventoryButton);\r\n\r\n                this.inviteFriendButton = document.getElementById(\"InviteFriendsButton\") as HTMLDivElement;\r\n                this.mainMenuButtons.push(this.inviteFriendButton);\r\n\r\n                this.leaderboardButton = document.getElementById(\"LeaderboardButton\") as HTMLDivElement;\r\n                this.mainMenuButtons.push(this.leaderboardButton);\r\n\r\n\r\n                _.forEach(this.mainMenuButtons, (element: HTMLDivElement) => {\r\n                        element.setAttribute('clicked', 'false');\r\n                        element.onclick = () => {\r\n                            element.setAttribute(\"clicked\", \"true\");\r\n                            this.setMainButtonStyleOnClick(element);\r\n\r\n                            switch (element.id) {\r\n                                case this.playGameButton.id: {\r\n\r\n                                    this.showPlayGameMenu();\r\n                                    break;\r\n                                }\r\n\r\n                                case this.inventoryButton.id: {\r\n                                    this.showInventoryMenu();\r\n                                    break;\r\n\r\n                                }\r\n\r\n                                case this.inviteFriendButton.id: {\r\n                                    this.showInviteMenu();\r\n                                    break;\r\n\r\n                                }\r\n\r\n                                case this.leaderboardButton.id: {\r\n                                    this.showLeaderboardMenu();\r\n                                    break;\r\n\r\n                                }\r\n\r\n                            }\r\n\r\n                            _.forEach(this.mainMenuButtons, (otherElement: HTMLDivElement) => {\r\n                                if (otherElement != element) {\r\n                                    otherElement.setAttribute(\"clicked\", \"false\");\r\n                                    this.resetMainButtonStyleOnClick(otherElement);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                );\r\n\r\n                this.pockeyHelmetAndStick = document.getElementById(\"PockeyHatAndStick\") as HTMLDivElement;\r\n            }\r\n\r\n            protected showElement(element: HTMLDivElement): void {\r\n                element.style.display = \"flex\";\r\n            }\r\n\r\n            protected hideElement(element: HTMLDivElement): void {\r\n                element.style.display = \"none\";\r\n\r\n            }\r\n\r\n            protected showPlayGameMenu(): void {\r\n                console.log(\"intra la show play\");\r\n                this.showElement(this.loginMenu);\r\n                this.showElement(this.tutorialAndShareButtonsMenu);\r\n                this.hideElement(this.inventoryScreen);\r\n                this.hideElement(this.leaderboardMenu);\r\n                this.hideElement(this.inviteMenu);\r\n                // this.showElement(this.tutorialAndShareButtonsMenu);\r\n            }\r\n\r\n            protected showInventoryMenu(): void {\r\n                console.log(\"intra la show inventory\");\r\n\r\n                this.hideElement(this.loginMenu);\r\n                this.hideElement(this.leaderboardMenu);\r\n                this.showElement(this.inventoryScreen);\r\n            }\r\n\r\n            protected showLeaderboardMenu(): void {\r\n                console.log(\"intra la show leaderboard\");\r\n\r\n                this.hideElement(this.loginMenu);\r\n                this.hideElement(this.inventoryScreen);\r\n                this.showElement(this.leaderboardMenu);\r\n            }\r\n\r\n            protected showInviteMenu(): void {\r\n                console.log(\"intra la show invite\");\r\n\r\n                this.showElement(this.loginMenu);\r\n                this.showElement(this.inviteMenu);\r\n                this.hideElement(this.tutorialAndShareButtonsMenu);\r\n                this.hideElement(this.leaderboardMenu);\r\n                this.hideElement(this.inventoryScreen);\r\n            }\r\n\r\n            protected setMainButtonStyleOnClick(element: HTMLDivElement) {\r\n                element.classList.add('simpleBtnOnClick');\r\n\r\n                let arrowDiv = element.querySelector('.simpleBtnArrow');\r\n                arrowDiv.classList.add('simpleBtnArrowOnClick');\r\n\r\n                let btnHighlight = element.querySelector('.simpleBtnHighlight');\r\n                btnHighlight.classList.add('simpleBtnHighlightOnClick');\r\n            }\r\n\r\n            protected resetMainButtonStyleOnClick(element: HTMLDivElement) {\r\n                element.classList.remove('simpleBtnOnClick');\r\n\r\n                let arrowDiv = element.querySelector('.simpleBtnArrow');\r\n                arrowDiv.classList.remove('simpleBtnArrowOnClick');\r\n\r\n                let btnHighlight = element.querySelector('.simpleBtnHighlight');\r\n                btnHighlight.classList.remove('simpleBtnHighlightOnClick');\r\n            }\r\n\r\n            public setVisibleTrue(): void {\r\n                this.mainMenuElementsHolder.style.display = \"block\";\r\n                this.pockeyHelmetAndStick.style.display = \"flex\";\r\n            }\r\n\r\n            public setVisibleFalse(): void {\r\n                this.mainMenuElementsHolder.style.display = \"none\";\r\n                this.pockeyHelmetAndStick.style.display = \"none\";\r\n            }\r\n\r\n        }\r\n    }\r\n}","///<reference path=\"../../../../GameModule/balls/abstract-ball.ts\"/>\r\n///<reference path=\"../../../../../../Framework/Utils/text-field.ts\"/>\r\nnamespace Pockey {\r\n    export module UserInterface {\r\n        import BallType = Pockey.GameModule.BallType;\r\n\r\n        export class PockeyUserGameGraphics {\r\n            private userAvatar: HTMLDivElement;\r\n            private userNameTextField: HTMLDivElement;\r\n            private timerText: HTMLDivElement;\r\n            private timerTween: TweenMax;\r\n\r\n            public type: BallType;\r\n            private side: string;\r\n            private lifeUnits: HTMLDivElement[];\r\n            private gameGraphic: HTMLDivElement;\r\n\r\n            constructor(side: string, gameGraphic: HTMLDivElement) {\r\n                // super();\r\n                this.side = side;\r\n\r\n                this.gameGraphic = gameGraphic;\r\n\r\n                let style = new PIXI.TextStyle({\r\n                    fontFamily: 'troika',\r\n                    fontSize: 22,\r\n                    fill: 0xffffff,\r\n\r\n                    // fontStyle: 'italic',\r\n                    // fontWeight: 'bold',\r\n                    // fill: ['#ffffff', '#00ff99'], // gradient\r\n                    stroke: '#ffffff',\r\n                    // strokeThickness: 5,\r\n                    dropShadow: true,\r\n                    dropShadowColor: '#000000',\r\n                    dropShadowBlur: 1,\r\n                    dropShadowAngle: Math.PI / 3,\r\n                    dropShadowDistance: 10,\r\n                    // wordWrap: true,\r\n                    // wordWrapWidth: 440\r\n                });\r\n                // let timerTextStyle: TextStyle = style.clone();\r\n                // timerTextStyle.fontSize = 28;\r\n\r\n                this.userAvatar = this.gameGraphic.getElementsByClassName(\"scoreBoardAvatar\")[0] as HTMLDivElement;\r\n                // this.userLifeBar = this.gameGraphic.getElementsByClassName(\"scoreBoardLives\")[0] as HTMLDivElement;\r\n                this.lifeUnits = [];\r\n                _.forEach(this.gameGraphic.getElementsByClassName(\"scoreBoardLives\")[0].children, (life: HTMLDivElement) => {\r\n                    this.lifeUnits.push(life);\r\n                });\r\n\r\n                this.timerText = this.gameGraphic.getElementsByClassName(\"scoreBoardTimer\")[0] as HTMLDivElement;\r\n                this.timerText.innerText = \"0:\" + PockeySettings.ROUND_DURATION_IN_SECONDS.toString();\r\n                // this.timerText.visible = false;\r\n                this.userNameTextField = this.gameGraphic.getElementsByClassName(\"playerName\")[0] as HTMLDivElement;\r\n                // if (this.side == \"left\") {\r\n                //     this.userNameTextField.innerText = new TextField(\"Player\", style);\r\n                //     // this.userLifeBar.x = this.userAvatar.width + 76;\r\n                //     // this.userNameTextField.x = this.userLifeBar.x;\r\n                //\r\n                // }\r\n                // else {\r\n                //     this.userNameTextField = new TextField(\"Opponent\", style);\r\n                //     // this.userAvatar.x = this.userLifeBar.width + 76;// this.userAvatar.width - 60;\r\n                //     // this.userNameTextField.x = this.userLifeBar.width - this.userNameTextField.width;\r\n                //     // this.timerText.x = this.userLifeBar.width - this.timerText.width;\r\n                // }\r\n\r\n                // this.timerText.x = this.userAvatar.x + this.userAvatar.width / 2 - this.timerText.width / 2;\r\n\r\n                // this.userLifeBar.y = this.userAvatar.height - this.userLifeBar.height;\r\n                // this.userNameTextField.y = this.userLifeBar.y - this.userNameTextField.height + 4;\r\n\r\n                // this.timerText.y = this.userAvatar.y + this.userAvatar.height - 1 - this.timerText.height;\r\n\r\n                // this.addChild(this.userAvatar);\r\n                // this.addChild(this.userLifeBar);\r\n                // this.addChild(this.userNameTextField);\r\n                // this.addChild(this.timerText);\r\n            }\r\n\r\n            public resetTimer(): void {\r\n                // this.timerText.visible = false;\r\n                // this.timerText.style.fill = 0xffffff;\r\n                this.timerText.style.display = \"none\";\r\n                this.timerText.innerText = \"0:\" + PockeySettings.ROUND_DURATION_IN_SECONDS.toString();\r\n            }\r\n\r\n            public updateTimer(timeText: string) {\r\n\r\n                if (timeText == \"\") {\r\n                    this.resetTimer();\r\n                }\r\n                else {\r\n                    // this.timerText.visible = true;\r\n                    // this.timerText.style.fill = 0xffffff;\r\n                    this.timerText.innerText = timeText;\r\n                    this.timerText.style.display = \"flex\";\r\n                    // this.timerText.x = 2 + this.userAvatar.x + this.userAvatar.width / 2 - this.timerText.width / 2;\r\n\r\n                    /*if (this.side == \"right\")\r\n                        this.timerText.x = this.userLifeBar.width - this.timerText.width;*/\r\n\r\n                }\r\n            }\r\n\r\n            public updateUsername(text: string): void {\r\n                this.userNameTextField.innerText = text;//.setText(text);\r\n                // if (this.side == \"right\") {\r\n                //     // this.userNameTextField = new TextField(\"Opponent\", style);\r\n                //     // this.userAvatar.x = this.userLifeBar.width + 76;// this.userAvatar.width - 60;\r\n                //     // this.userNameTextField.x = this.userLifeBar.width - this.userNameTextField.width;\r\n                // }\r\n                // if (type == BallType.Op) {\r\n                //     this.userNameTextField = new TextField(\"Player\", style);\r\n                //     this.userLifeBar.x = this.userAvatar.width + 76;\r\n                //     this.userNameTextField.x = this.userLifeBar.x;\r\n                // }\r\n                // else {\r\n                //     this.userNameTextField = new TextField(\"Opponent\", style);\r\n                //     this.userAvatar.x = this.userLifeBar.width + 76;// this.userAvatar.width - 60;\r\n                //     this.userNameTextField.x = this.userLifeBar.width - this.userNameTextField.width;\r\n                //\r\n                // }\r\n            }\r\n\r\n            public reset(): void {\r\n                _.forEach(this.lifeUnits, (lifeUnit: HTMLDivElement, id: number) => {\r\n                    // lifeUnit.alpha = 1;\r\n                });\r\n            }\r\n\r\n            public updateScore(score: number) {\r\n                _.forEach(this.lifeUnits, (lifeUnit: HTMLDivElement, id: number) => {\r\n                    // if (this.side == \"left\") {\r\n                    //     if (score >= score) {\r\n                    //         // lifeUnit.alpha = 0.5;\r\n                    //     }\r\n                    // } else {\r\n                    if (id < 7 - score) {\r\n                        lifeUnit.style.opacity = \"0.5\";\r\n                    }\r\n                    // }\r\n\r\n                });\r\n            }\r\n\r\n            public tint(color: number): void {\r\n                _.forEach(this.lifeUnits, (lifeUnit: HTMLDivElement, id: number) => {\r\n                    // lifeUnit.tint = color;\r\n                    lifeUnit.style.background = '#' + ('00000' + (color | 0).toString(16)).substr(-6);\r\n\r\n                });\r\n                // this.userNameTextField.tint = color;\r\n            }\r\n\r\n            public updateAvatar(avatarID: string): void {\r\n\r\n                let avatarPath: string = \"\";\r\n                _.forEach(PockeySettings.LARGE_AVATARS_ARRAY, (avatarVO: InventoryVO, counter: number) => {\r\n                    if (avatarVO.id == avatarID) {\r\n                        avatarPath = avatarVO.icon;\r\n                        return true;\r\n                    }\r\n                });\r\n                this.userAvatar.style.background = \"center / contain no-repeat #1a4157 url(\" + avatarPath + \")\";\r\n            }\r\n\r\n            public setTimerColor(tintColor: number): void {\r\n                if (this.timerText.style.color = '#' + ('00000' + (tintColor | 0).toString(16)).substr(-6)) {\r\n                    return;\r\n                }\r\n                else {\r\n                    this.timerText.style.color = '#' + ('00000' + (tintColor | 0).toString(16)).substr(-6);\r\n                }\r\n            }\r\n\r\n            public animateTimer(): void {\r\n                this.setTimerColor(0xFF0000);\r\n                // this.timerText.style.dropShadowColor = 0xffffff;//0xCA4A5C);\r\n                // this.timerText.style.dropShadowDistance = 6;//0xCA4A5C);\r\n\r\n                /* if (this.timerTween && this.timerTween.isActive()) {\r\n                     this.timerTween.kill();\r\n                 }\r\n\r\n                 let scaleFactor:number = this.timerText.scale.x + this.timerText.scale.x / 12;\r\n                 this.timerTween = TweenMax.to(this.timerText.scale, 0.2, {x: scaleFactor, y: scaleFactor, yoyo:true, repeat:1});*/\r\n                // }\r\n                // let tweenM\r\n            }\r\n        }\r\n    }\r\n}","namespace Pockey {\r\n\r\n    export module UserInterface {\r\n\r\n        import Graphics = PIXI.Graphics;\r\n\r\n        export class PockeyUiMatchCircle {\r\n            private circleBorder: HTMLDivElement;\r\n            private circleDot: HTMLDivElement;\r\n\r\n            constructor(circle: HTMLDivElement) {\r\n                // super();\r\n                this.circleBorder = circle;\r\n                this.circleDot = this.circleBorder.getElementsByClassName(\"dorScoreBoard\")[0] as HTMLDivElement;\r\n                // this.createMatchCircle();\r\n            }\r\n\r\n            // private createMatchCircle(): void {\r\n            //     this.firstCircleGraphics = new Graphics();\r\n            //     this.firstCircleGraphics.lineStyle(5, 0xffffff);\r\n            //     this.firstCircleGraphics.tint = 0x639db5;\r\n            //     this.firstCircleGraphics.drawCircle(0, 0, 12);\r\n            //     this.addChild(this.firstCircleGraphics);\r\n            //\r\n            //     this.secondCircleGraphics = new Graphics();\r\n            //     this.secondCircleGraphics.beginFill(0xffffff);\r\n            //     this.secondCircleGraphics.tint = 0x426d7e;\r\n            //     this.secondCircleGraphics.drawCircle(0, 0, 6);\r\n            //     this.secondCircleGraphics.endFill();\r\n            //     this.addChild(this.secondCircleGraphics);\r\n            // }\r\n\r\n            public activate(color: number): void {\r\n                this.circleBorder.style.borderColor = \"#ffffff\";\r\n\r\n                this.circleDot.style.background = '#' + ('00000' + (color | 0).toString(16)).substr(-6);\r\n            }\r\n\r\n            public reset(color: number): void {\r\n                this.circleBorder.style.borderColor = \"#639db5\";\r\n                this.circleDot.style.background = \"#426d7e\";\r\n            }\r\n        }\r\n    }\r\n}","///<reference path=\"pockey-ui-match-circle.ts\"/>\r\nnamespace Pockey {\r\n    export module UserInterface {\r\n        import Settings = Framework.Settings;\r\n\r\n        export class PockeyUiVersusGraphics{\r\n            public leftSideMatchCircles: PockeyUiMatchCircle[];\r\n            public rightSideMatchCircles: PockeyUiMatchCircle[];\r\n\r\n            constructor() {\r\n\r\n                if(Settings.isMobile)\r\n                {\r\n                    // this.versusGraphics.visible = false;\r\n                }\r\n\r\n                this.leftSideMatchCircles = [];\r\n                _.forEach(document.getElementById(\"ScoreBoardPlayerRoundsLeft\").children, (circle:HTMLDivElement)=>\r\n                {\r\n                    let matchCircle:PockeyUiMatchCircle = new PockeyUiMatchCircle(circle);\r\n                    this.leftSideMatchCircles.push(matchCircle);\r\n                });\r\n\r\n                this.rightSideMatchCircles = [];\r\n                _.forEach(document.getElementById(\"ScoreBoardPlayerRoundsLeft\").children, (circle:HTMLDivElement)=>\r\n                {\r\n                    let matchCircle:PockeyUiMatchCircle = new PockeyUiMatchCircle(circle);\r\n                    this.rightSideMatchCircles.push(matchCircle);\r\n                });\r\n                // this.leftSideMatchCircles.push(circle1);\r\n                // this.leftSideMatchCircles.push(circle2);\r\n                //\r\n                // this.rightSideMatchCircles.push(circle3);\r\n                // this.rightSideMatchCircles.push(circle4);\r\n            }\r\n        }\r\n    }\r\n}","///<reference path=\"./DesignElements/pockey-user-game-graphics.ts\"/>\r\n///<reference path=\"./DesignElements/pockey-ui-versus-graphics.ts\"/>\r\n///<reference path=\"../../../StateMachine/pockey-state-texts.ts\"/>\r\n///<reference path=\"../../../../../Framework/Settings.ts\"/>\r\n\r\nnamespace Pockey {\r\n    export module UserInterface {\r\n\r\n        import BallType = Pockey.GameModule.BallType;\r\n        import SignalsManager = Framework.Signals.SignalsManager;\r\n        import PockeySignalTypes = Pockey.SignalsModule.PockeySignalTypes;\r\n        import Settings = Framework.Settings;\r\n\r\n        export class PockeyUiGameScreen {\r\n\r\n            private leftGameGraphics: PockeyUserGameGraphics;\r\n            private rightGameGraphics: PockeyUserGameGraphics;\r\n            private playerGameGraphics: PockeyUserGameGraphics;\r\n            private opponentGameGraphics: PockeyUserGameGraphics;\r\n\r\n            private versus: PockeyUiVersusGraphics;\r\n\r\n            // private multilineText: MultiStyleText;\r\n            private tipText: HTMLDivElement;\r\n\r\n            // private graphicsContainer: Container;\r\n            private tipTextWidth: number = 934;\r\n\r\n            private poolTableScaleFactor: number = 1;\r\n\r\n\r\n            private textFontSize: number;\r\n\r\n\r\n            private scoreBoard: HTMLDivElement;\r\n            private initialBoardHeight: number;\r\n            private initialBoardWidth: number;\r\n\r\n            private currentText: string = \"\";\r\n\r\n\r\n            constructor() {\r\n                // super();\r\n                this.scoreBoard = document.getElementById(\"ScoreBoard\") as HTMLDivElement;\r\n                this.scoreBoard.style.visibility = \"hidden\";\r\n                this.scoreBoard.style.display = \"flex\";\r\n                this.initialBoardWidth = this.scoreBoard.offsetWidth;\r\n                this.initialBoardHeight = this.scoreBoard.offsetHeight;\r\n                console.log(\"la score board: \" + this.initialBoardWidth, this.initialBoardHeight);\r\n                console.log(\"la score board2: \" + this.scoreBoard.clientWidth, this.scoreBoard.clientHeight);\r\n                TweenMax.delayedCall(0.1, this.hideScoreBoard.bind(this));\r\n                this.subscribeToSignals();\r\n                this.defineTextStyles();\r\n                this.addElements();\r\n\r\n                // this.playerGameGraphics = new PockeyUserGameGraphics(\"left\");\r\n                // this.opponentGameGraphics = new PockeyUserGameGraphics(\"right\");\r\n            }\r\n\r\n            private hideScoreBoard(): void {\r\n                this.scoreBoard.style.display = \"none\";\r\n                this.scoreBoard.style.visibility = \"visible\";\r\n                console.log(\"la score board3: \" + this.initialBoardWidth, this.initialBoardHeight);\r\n                console.log(\"la score board4: \" + this.scoreBoard.clientWidth, this.scoreBoard.clientHeight);\r\n            }\r\n\r\n            public show(): void {\r\n                this.scoreBoard.style.display = \"flex\";\r\n            }\r\n\r\n            public hide(): void {\r\n                this.scoreBoard.style.display = \"none\";\r\n            }\r\n\r\n            private subscribeToSignals(): void {\r\n                // SignalsManager.AddSignalCallback(PockeySignalTypes.POCKEY_POOL_TABLE_RESIZED, this.onPoolTableResize.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.SET_SIDES_TYPE, this.onSetSides.bind(this));\r\n\r\n\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.UPDATE_PLAYER_NAME, this.onUpdatePlayerName.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.UPDATE_PLAYER_SCORE, this.onUpdatePlayerScore.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.CHANGE_PLAYER_COLOR, this.onChangePlayerColor.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.CHANGE_PLAYER_AVATAR, this.onChangePlayerAvatar.bind(this));\r\n\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.UPDATE_OPPONENT_NAME, this.onUpdateOpponentName.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.UPDATE_OPPONENT_SCORE, this.onUpdateOpponentScore.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.CHANGE_OPPONENT_COLOR, this.onChangeOpponentColor.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.CHANGE_OPPONENT_AVATAR, this.onChangeOpponentAvatar.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.RESET_GAME_SCREEN, this.onReset.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.UPDATE_CURRENT_PLAYER_TIMER, this.onUpdateCurrentPlayerTimer.bind(this));\r\n\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.UPDATE_MATCH_CIRCLES, this.onUpdateMatchCircles.bind(this));\r\n\r\n\r\n                // SignalsManager.DispatchSignal(PockeySignalTypes.POCKEY_POOL_TABLE_RESIZED, [backgroundScaleFactor, newPos, this.levelManager.poolTable.rotation]);\r\n                // SignalsManager.AddSignalCallback(PockeySignalTypes.UPDATE_OPPONENT_NAME, this.onUpdateOpponentName.bind(this));\r\n                // SignalsManager.AddSignalCallback(PockeySignalTypes.CHANGE_OPPONENT_COLOR, this.onChangeOpponentColor.bind(this));\r\n                // SignalsManager.AddSignalCallback(PockeySignalTypes.UPDATE_OPPONENT_SCORE, this.onUpdateOpponentScore.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.POCKEY_POOL_TABLE_RESIZED, this.onResizeBackground.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.UPDATE_UI_TEXT, this.onUpdateUIText.bind(this));\r\n            }\r\n\r\n            private onUpdateMatchCircles(params: any[]) {\r\n                let leftSideColor: number;\r\n                let rightSideColor: number;\r\n\r\n                if (this.leftGameGraphics.type == BallType.Player) {\r\n                    leftSideColor = +PockeySettings.PLAYER_COLOR_ID;\r\n                    rightSideColor = PockeySettings.OPPONENT_COLOR;\r\n                }\r\n                else {\r\n                    leftSideColor = PockeySettings.OPPONENT_COLOR;\r\n                    rightSideColor = +PockeySettings.PLAYER_COLOR_ID;\r\n                }\r\n\r\n                let leftSideMatchesWon: number = params[0];\r\n                let rightSideMatchesWon: number = params[1];\r\n\r\n                _.forEach(_.range(leftSideMatchesWon), (i: number) => {\r\n                    this.versus.leftSideMatchCircles[i].activate(leftSideColor);\r\n                });\r\n\r\n                _.forEach(_.range(rightSideMatchesWon), (i: number) => {\r\n                    this.versus.rightSideMatchCircles[i].activate(rightSideColor);\r\n                });\r\n            }\r\n\r\n            private onUpdateUIText(params: any[]) {\r\n                let text: string = params[0];\r\n\r\n                if (this.currentText == text) {\r\n                    return;\r\n                }\r\n\r\n                this.currentText = text;\r\n\r\n                text = text.replace(\"{opponent}\", PockeySettings.OPPONENT_NICKNAME);\r\n                // let multistyleUsed:boolean = false;\r\n\r\n                // let warningClassStyle:\r\n                if (_.includes(text, \"#warning#\")) {\r\n                    while (this.tipText.firstChild) {\r\n                        this.tipText.removeChild(this.tipText.firstChild);\r\n                    }\r\n\r\n                    let tagArray: string[] = text.split(\"#warning#\");\r\n\r\n                    _.forEach(tagArray, (divText: string, counter: number) => {\r\n                        if (divText.length > 0) {\r\n                            let paragraph: HTMLParagraphElement = document.createElement(\"span\") as HTMLParagraphElement;\r\n                            paragraph.innerText = divText;\r\n                            if (counter == 1) {\r\n                                paragraph.innerText = \" \" + divText + \" \";\r\n                                paragraph.classList.add('warning');\r\n                            }\r\n                            else {\r\n                                paragraph.classList.add('normalSpan');\r\n                            }\r\n\r\n                            this.tipText.append(paragraph);\r\n                        }\r\n                    });\r\n\r\n                    return;\r\n                }\r\n\r\n                if (_.includes(text, \"#opponent#\")) {\r\n                    while (this.tipText.firstChild) {\r\n                        this.tipText.removeChild(this.tipText.firstChild);\r\n                    }\r\n\r\n                    let tagArray: string[] = text.split(\"#opponent#\");\r\n\r\n                    _.forEach(tagArray, (divText: string, counter: number) => {\r\n                        if (divText.length > 0) {\r\n                            let paragraph: HTMLParagraphElement = document.createElement(\"span\") as HTMLParagraphElement;\r\n                            paragraph.innerText = divText;\r\n                            if (counter == 1) {\r\n                                paragraph.innerText = \" \" + divText + \" \";\r\n                                paragraph.classList.add('opponent');\r\n                                paragraph.style.color = '#' + ('00000' + (PockeySettings.OPPONENT_COLOR | 0).toString(16)).substr(-6);\r\n                            }\r\n                            else {\r\n                                paragraph.classList.add('normalSpan');\r\n                            }\r\n\r\n                            this.tipText.append(paragraph);\r\n                        }\r\n                    });\r\n\r\n                    return;\r\n                }\r\n\r\n\r\n                this.tipText.innerText = text;\r\n                // if(multistyleUsed)\r\n                // {\r\n                //\r\n                // }\r\n\r\n                //     text = text.replace(\"{opponent}\", PockeySettings.OPPONENT_NICKNAME);\r\n                //\r\n                // if (_.includes(text, \"#opponent#\"))\r\n                //     text = text.replace(\"#opponent#\", \"<p class='opponent'>\");\r\n                //\r\n                // if (_.includes(text, \"*opponent*\"))\r\n                //     text = text.replace(\"*opponent*\", \"</p>\");\r\n                //\r\n                // if (_.includes(text, \"#warning#\"))\r\n                //     text = text.replace(\"#warning#\", \"<p class='warning'>\")\r\n                //\r\n                // if (_.includes(text, \"*warning*\"))\r\n                //     text = text.replace(\"*warning*\", \"</p>\");\r\n\r\n                // console.log(\"se inlocuieste textul: \" + PockeySettings.OPPONENT_NICKNAME);\r\n                // if (text != this.tipText.text) {\r\n                // let intext = this.tipText.innerText.toUpperCase();\r\n                // let newText = text.toUpperCase();\r\n                // if(this.tipText.innerText.toUpperCase() == text.toUpperCase())\r\n                // {\r\n                //     console.log(\"sunt la fel\")\r\n                //     return;\r\n                // }\r\n                // else\r\n                // {\r\n                //     console.log(\"nu-s la fel fmm\");\r\n                //     this.tipText.innerText = text;\r\n                // }\r\n\r\n                // if (text != this.tipText.innerText) {\r\n                //     // console.log(\"text: \" + text);\r\n                //     // console.log(\"innerText: \" + text);\r\n                //     this.tipText.innerText = text\r\n                // }\r\n                //     /* this.multilineText.text = text;\r\n                //      if (!Settings.isMobile)\r\n                //          this.multilineText.x = -this.multilineText.width;\r\n                //      else {\r\n                //          this.multilineText.x = -this.multilineText.width / 2;\r\n                //      }*/\r\n                //\r\n                // }\r\n            }\r\n\r\n            private onUpdateCurrentPlayerTimer(params: any[]) {\r\n                let time: string = params[0];\r\n                let playerType: BallType = params[1];\r\n                let animateText: boolean = params[2];\r\n\r\n                if (this.leftGameGraphics.type == playerType) {\r\n                    this.leftGameGraphics.updateTimer(time);\r\n                    // this.leftGameGraphics.setTimerColor(tintColor);\r\n                    if (animateText)\r\n                        this.leftGameGraphics.animateTimer();// = this.leftGameGraphics;\r\n                    // this.opponentGameGraphics = this.rightGameGraphics;\r\n                }\r\n                else {\r\n                    this.rightGameGraphics.updateTimer(time);\r\n                    if (animateText)\r\n                        this.rightGameGraphics.animateTimer();\r\n                    // this.playerGameGraphics = this.rightGameGraphics;\r\n                    // this.opponentGameGraphics = this.leftGameGraphics;\r\n                }\r\n\r\n            }\r\n\r\n            private onResizeBackground(params: any[]): void {\r\n\r\n                // if (this.backgrounds[PockeySettings.POCKEY_CUSTOM_BACKGROUND_NAME]) {\r\n                this.poolTableScaleFactor = params[0];\r\n                // let position: Point = params[1] as Point;\r\n                // let rotation: number = params[2];\r\n            }\r\n\r\n            private onReset(param: any[]): void {\r\n                this.leftGameGraphics.reset();\r\n                this.rightGameGraphics.reset();\r\n            }\r\n\r\n            private onSetSides(params: any) {\r\n                // let leftSide:BallType = params[0] as BallType;\r\n                this.leftGameGraphics.type = params[0] as BallType;\r\n                this.rightGameGraphics.type = params[1] as BallType;\r\n                if (this.leftGameGraphics.type == BallType.Player) {\r\n                    this.playerGameGraphics = this.leftGameGraphics;\r\n                    this.opponentGameGraphics = this.rightGameGraphics;\r\n                }\r\n                else {\r\n                    this.playerGameGraphics = this.rightGameGraphics;\r\n                    this.opponentGameGraphics = this.leftGameGraphics;\r\n                }\r\n            }\r\n\r\n            private onUpdatePlayerScore(score: number) {\r\n                if (this.playerGameGraphics)\r\n                    this.playerGameGraphics.updateScore(score);\r\n            }\r\n\r\n            public onUpdatePlayerName(name: string): void {\r\n                if (this.playerGameGraphics)\r\n                    this.playerGameGraphics.updateUsername(name);\r\n            }\r\n\r\n            public onChangePlayerColor(color: number): void {\r\n                if (this.playerGameGraphics)\r\n                    this.playerGameGraphics.tint(+color);\r\n            }\r\n\r\n            public onChangePlayerAvatar(avatarPath: string): void {\r\n                if (this.playerGameGraphics)\r\n                    this.playerGameGraphics.updateAvatar(avatarPath);\r\n            }\r\n\r\n            private onUpdateOpponentScore(score: number) {\r\n                if (this.opponentGameGraphics)\r\n                    this.opponentGameGraphics.updateScore(score);\r\n            }\r\n\r\n            public onUpdateOpponentName(name: string): void {\r\n                if (this.opponentGameGraphics)\r\n                    this.opponentGameGraphics.updateUsername(name);\r\n            }\r\n\r\n            public onChangeOpponentColor(color: number): void {\r\n                if (this.opponentGameGraphics) {\r\n                    this.opponentGameGraphics.tint(color);\r\n\r\n                    // this.opponentTextStyle.fill = color;\r\n                }\r\n                // this.opponentTextStyle = new TextStyle({\r\n                //     fontFamily: 'troika',\r\n                //     fontSize: this.textFontSize,\r\n                //     fill: color,\r\n                //     dropShadow: true,\r\n                //     dropShadowColor: '#000000',\r\n                //     dropShadowBlur: 1,\r\n                //     dropShadowAngle: Math.PI / 3,\r\n                //     dropShadowDistance: 8\r\n                // });\r\n                // this.multilineText.styles =\r\n                //     {\r\n                //         \"default\": this.defaultTextStyle,\r\n                //         \"warning\": this.warningTextStyle,\r\n                //         \"opponent\": this.opponentTextStyle\r\n                //     };\r\n            }\r\n\r\n            public onChangeOpponentAvatar(avatarPath: string): void {\r\n\r\n\r\n                if (this.opponentGameGraphics)\r\n                    this.opponentGameGraphics.updateAvatar(avatarPath);\r\n            }\r\n\r\n\r\n            // public onChangeColors(COLORS: number[]): void {\r\n            //     this.leftGameGraphics.tint(COLORS[0]);\r\n            //     this.rightGameGraphics.tint(COLORS[1]);\r\n            //     // if(this.leftGameGraphics.type == BallType.Opponent)\r\n            //     // {\r\n            //     //     this.leftGameGraphics.tint(color);\r\n            //     // }\r\n            //     // else\r\n            //     // {\r\n            //     //     this.rightGameGraphics.tint(color);\r\n            //     // }\r\n            // }\r\n\r\n            // public onUpdateScore(score:number[]): void {\r\n            //     this.leftGameGraphics.updateScore(score[0]);\r\n            //     this.rightGameGraphics.updateScore(score[1]);\r\n            // }\r\n            //\r\n            // public onUpdateOpponentScore(score: number): void {\r\n            //     this.rightGameGraphics.updateScore(score);\r\n            // }\r\n            //\r\n            //\r\n            //\r\n            // public onUpdateOpponentName(nickname: string): void {\r\n            // }\r\n\r\n            public handleDesktopLandscape(): void {\r\n                let newHeight: number = (0.11 * Settings.stageHeight);\r\n                let scaleFactor: number = newHeight / this.initialBoardHeight;\r\n                let scaleString: string = \"translate(-50%, -50%) scale(\" + scaleFactor.toString() + \")\";\r\n                console.log(\"intra la desktop landscape\");\r\n                console.log(scaleString);\r\n                console.log(\"------------\");\r\n\r\n                this.scoreBoard.style.transform = scaleString;\r\n            }\r\n\r\n            public onResizeMobileLandscape(): void {\r\n            }\r\n\r\n            public onResizeMobilePortrait(): void {\r\n            }\r\n\r\n            private defineTextStyles(): void {\r\n\r\n            }\r\n\r\n            private addElements(): void {\r\n                // this.usersUIHolder = new Container();\r\n                // this.graphicsContainer = new Container();\r\n                // this.addChild(this.graphicsContainer);\r\n                this.addVersusGraphics();\r\n                this.addLeftGameGraphics();\r\n                this.addRightGameGraphics();\r\n\r\n                // if (Settings.isMobile) {\r\n                //     this.addTipTextMobile();\r\n                // }\r\n                // else {\r\n                this.addTipText();\r\n                // }\r\n            }\r\n\r\n            private addTipText() {\r\n                this.tipText = document.getElementById(\"SpansHolder\") as HTMLDivElement;\r\n                // this.multilineText = new MultiStyleText(\"\",\r\n                //     {\r\n                //         \"default\": this.defaultTextStyle,\r\n                //         \"warning\": this.warningTextStyle,\r\n                //         \"opponent\": this.opponentTextStyle\r\n                //     });\r\n                // let style = new PIXI.TextStyle({\r\n                //     fontFamily: 'troika',\r\n                //     fontSize: 56.4,\r\n                //     fill: 0xffffff,\r\n                //     // fontStyle: 'italic',\r\n                //     // fontWeight: 'bold',\r\n                //     // fill: ['#ffffff', '#00ff99'], // gradient\r\n                //     // stroke: '#4a1850',\r\n                //     // strokeThickness: 5,\r\n                //     // align: \"right\",\r\n                //     dropShadow: true,\r\n                //     dropShadowColor: '#000000',\r\n                //     dropShadowBlur: 1,\r\n                //     dropShadowAngle: Math.PI / 3,\r\n                //     dropShadowDistance: 8,\r\n                //     // wordWrap: true,\r\n                //     // wordWrapWidth: this.tipTextWidth,\r\n                // });\r\n\r\n                // this.tipText = new TextField(\"\", style);\r\n\r\n                // this.tipTextContainer = new Container();\r\n                // this.tipTextContainer.name = \"tipTextContainer\";\r\n                // this.addChild(this.tipTextContainer);\r\n                // this.multilineText.scale.x = this.multilineText.scale.y = 0.5;\r\n                // this.tipTextContainer.addChild(this.tipText);\r\n                // this.tipTextContainer.addChild(this.multilineText);\r\n            }\r\n\r\n            private addTipTextMobile() {\r\n\r\n\r\n\r\n                // this.tipTextContainer = new Container();\r\n                // // this.addChild(this.tipTextContainer);\r\n                // this.tipTextContainer.addChild(this.tipText);\r\n            }\r\n\r\n            private addVersusGraphics() {\r\n                this.versus = new PockeyUiVersusGraphics();\r\n                // this.versus.x -= this.versus.width / 2;\r\n                // this.graphicsContainer.addChild(this.versus);\r\n            }\r\n\r\n            private addLeftGameGraphics() {\r\n                this.leftGameGraphics = new PockeyUserGameGraphics(\"left\", document.getElementById(\"PlayerScoreBoardLeft\") as HTMLDivElement);\r\n                // this.leftGameGraphics.x = this.versus.x - this.leftGameGraphics.width - 36;\r\n                // this.versus.y = this.leftGameGraphics.height - this.versus.height + 8;\r\n                // this.graphicsContainer.addChild(this.leftGameGraphics);\r\n            }\r\n\r\n            private addRightGameGraphics() {\r\n                this.rightGameGraphics = new PockeyUserGameGraphics(\"right\", document.getElementById(\"PlayerScoreBoardRight\") as HTMLDivElement);\r\n                // this.rightGameGraphics.x = this.versus.x + this.versus.width + 36;\r\n                // this.graphicsContainer.addChild(this.rightGameGraphics);\r\n            }\r\n\r\n\r\n            // private onUpdateOpponentScore(score: number) {\r\n            //     // this.rightGameGraphics.updateScore(score);\r\n            // }\r\n\r\n            // public onResize(stageWidth: number, stageHeight: number): void {\r\n            //     // this.stageWidth = stageWidth;\r\n            //     // this.stageHeight = stageHeight;\r\n            //     //\r\n            //     // this.menuBackground.x = stageWidth / 2 - this.menuBackground.width / 2;\r\n            //     // this.menuBackground.y = stageHeight / 2 - this.menuBackground.height / 2;\r\n            // }\r\n\r\n        }\r\n    }\r\n}","/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 10/2/2018\r\n */\r\n\r\nnamespace Pockey {\r\n    export module UserInterface {\r\n        import Sprite = PIXI.Sprite;\r\n        import Settings = Framework.Settings;\r\n        import PixiButton = Framework.UserInterface.PixiButton;\r\n        import SignalsManager = Framework.Signals.SignalsManager;\r\n        import PockeySignalTypes = Pockey.SignalsModule.PockeySignalTypes;\r\n        import TextField = Framework.utils.TextField;\r\n\r\n        export class PockeyUiWinningScreen extends Container {\r\n            private background: Sprite;\r\n            private winningTextField: TextField;\r\n\r\n            constructor() {\r\n                super();\r\n                this.registerSignalHandlers();\r\n                this.addElements();\r\n            }\r\n\r\n\r\n            private addElements(): void {\r\n                this.addWinningBackground();\r\n                this.addRestartButton();\r\n            }\r\n\r\n            private addWinningBackground() {\r\n\r\n                // let backgroundTexture:Texture = new PIXI.Texture.fromImage(beeSvg, undefined, undefined, width / 600)\r\n                // this.poolTableBackgroundBottom = new Sprite(PIXI.Texture.fromFrame(Settings.desktopAssetsPath + \"Images/table_bottom.png\"));\r\n\r\n                //@ts-ignore\r\n                // const svgTest = new PIXI.SVG(Settings.desktopAssetsPath + \"Images/menu_background.svg\");\r\n                // this.addChild(svgTest);\r\n                //@ts-ignore\r\n                // const svg = new PIXI.SVG(Settings.desktopAssetsPath + \"Images/menu_background.svg\");\r\n                // this.addChild(svg);\r\n\r\n                this.background = new Sprite(PIXI.Texture.fromImage(Settings.desktopAssetsPath + \"Images/menu_background.svg\"));\r\n                console.log(\"this.background.width, height: \" + this.background.width, this.background.height);\r\n                this.background.x = Settings.stageWidth / 2 - this.background.width / 2;\r\n                this.background.y = Settings.stageHeight / 2 - this.background.height / 2;\r\n                // this.background = new Sprite(PIXI.Texture.fromImage(Settings.desktopAssetsPath + \"Images/menu_background.svg\"));\r\n                // this.background.x -= this.background.width / 2;\r\n                // this.background.y -= this.background.height / 2;\r\n                this.addChild(this.background);\r\n            }\r\n\r\n            public onResize(): void {\r\n                this.background.x = Settings.stageWidth / 2 - this.background.width / 2;\r\n                this.background.y = Settings.stageHeight / 2 - this.background.height / 2;\r\n            }\r\n\r\n            // private o\r\n            private addRestartButton(): void {\r\n                /*let pixiBtn: PixiButton = new PixiButton();\r\n                // create the text object\r\n                let style = new PIXI.TextStyle({\r\n                    fontFamily: 'troika',\r\n                    fontSize: 24,\r\n                    fill: 0xffffff\r\n                });\r\n                pixiBtn.setText(\"RESTART\", style);\r\n                pixiBtn.clicked = () => {\r\n                    SignalsManager.DispatchSignal(PockeySignalTypes.RESTART_GAME);\r\n                };\r\n\r\n\r\n                pixiBtn.x = this.background.width / 2;// - pixiBtn.width / 2;\r\n                pixiBtn.y = this.background.height / 2;// - pixiBtn.height / 2;\r\n                // pixiBtn.y = this.background.height / 2;\r\n                this.background.addChild(pixiBtn);\r\n\r\n                this.winningTextField = new TextField(\"You won\", style);\r\n                this.winningTextField.x = this.background.width / 2 - this.winningTextField.width / 2;\r\n                this.winningTextField.y = 40;//this.background.height / 2 - this.winningTextField.height / 2;\r\n                this.background.addChild(this.winningTextField);*/\r\n            }\r\n\r\n            private registerSignalHandlers(): void {\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.UPDATE_WINNING_MESSAGE, this.onUpdateWinningMessage.bind(this));\r\n\r\n            }\r\n\r\n            private onUpdateWinningMessage(message: string) {\r\n                this.winningTextField.setText(message);\r\n            }\r\n        }\r\n    }\r\n}","///<reference path=\"../../../../../Framework/Utils/pixi-button.ts\"/>\r\n///<reference path=\"DesignElements/play-game-menu.ts\"/>\r\n///<reference path=\"DesignElements/inventory-menu.ts\"/>\r\n\r\n\r\nnamespace Pockey {\r\n    export module UserInterface {\r\n\r\n        import Settings = Framework.Settings;\r\n\r\n        export class PockeyUiMainScreenMobile extends PockeyUiMainScreen {\r\n\r\n            protected rightSide: HTMLDivElement;\r\n            protected mainButtonsHolder: HTMLDivElement;\r\n            protected backButton: HTMLDivElement;\r\n            protected backBg: HTMLDivElement;\r\n            protected menuTitle: HTMLDivElement;\r\n            protected menuLogo: HTMLDivElement;\r\n            // protected mainMenuBackground: HTMLDivElement;\r\n\r\n            protected defineElements(): void {\r\n\r\n                this.rightSide = document.getElementById(\"RightSideBackground\") as HTMLDivElement;\r\n                this.mainButtonsHolder = document.getElementById(\"MainButtonsHolder\") as HTMLDivElement;\r\n                this.backButton = document.getElementById(\"BackToMainMenuButton\") as HTMLDivElement;\r\n                this.backBg = document.getElementById(\"MainMenuBg\") as HTMLDivElement;\r\n                this.menuTitle = document.getElementById(\"MenuTitleSpan\") as HTMLDivElement;\r\n                this.menuLogo = document.getElementById(\"MenuLogo\") as HTMLDivElement;\r\n\r\n                ////////////\r\n                this.loginMenu = document.getElementById(\"LoginScreen\") as HTMLDivElement;\r\n                this.playGameMenu = new PlayGameMenu();\r\n//                 this.hideElement(this.loginMenu);\r\n\r\n                this.inventoryMenu = new PockeyInventoryMenu();\r\n                // jQuery(this.loginMenu.id).hide();\r\n\r\n                this.leftSideLoginMenu = document.getElementById(\"LeftSide\") as HTMLDivElement;\r\n                this.leaderboardMenu = document.getElementById(\"LeaderBoardScreen\") as HTMLDivElement;\r\n                this.hideElement(this.leaderboardMenu);\r\n\r\n                this.inviteMenu = document.getElementById(\"InviteElementsHolder\") as HTMLDivElement;\r\n                this.hideElement(this.inviteMenu);\r\n\r\n                this.tutorialAndShareButtonsMenu = document.getElementById(\"TutorialAndShareButtonsHolder\") as HTMLDivElement;\r\n                // this.hideElement(this.tutorialAndShareButtonsMenu);\r\n\r\n                this.inventoryScreen = document.getElementById(\"InventoryScreen\") as HTMLDivElement;\r\n                this.hideElement(this.inventoryScreen);\r\n\r\n                this.mainMenuElementsHolder = document.getElementById(\"MainMenuElementsHolder\") as HTMLDivElement;\r\n\r\n                /////////////////\r\n                this.mainMenuButtons = [];\r\n\r\n                this.playGameButton = document.getElementById(\"PlayGameButton\") as HTMLDivElement;\r\n                this.mainMenuButtons.push(this.playGameButton);\r\n\r\n                this.inventoryButton = document.getElementById(\"InventoryButton\") as HTMLDivElement;\r\n                this.mainMenuButtons.push(this.inventoryButton);\r\n\r\n                this.inviteFriendButton = document.getElementById(\"InviteFriendsButton\") as HTMLDivElement;\r\n                this.mainMenuButtons.push(this.inviteFriendButton);\r\n\r\n                this.leaderboardButton = document.getElementById(\"LeaderboardButton\") as HTMLDivElement;\r\n                this.mainMenuButtons.push(this.leaderboardButton);\r\n\r\n\r\n                _.forEach(this.mainMenuButtons, (element: HTMLDivElement) => {\r\n                        element.setAttribute('clicked', 'false');\r\n                        element.onclick = () => {\r\n                            element.setAttribute(\"clicked\", \"true\");\r\n                            // this.setMainButtonStyleOnClick(element);\r\n                            // alert(element.id + \" clicked\");\r\n                            switch (element.id) {\r\n                                case this.playGameButton.id: {\r\n                                    this.menuTitle.innerText = \"PLAY GAME\";\r\n                                    this.menuLogo.style.background = \"center / contain no-repeat url(\" + Settings.desktopAssetsPath + \"/Images/start_game_icon.svg\" + \")\";\r\n                                    this.showPlayGameMenu();\r\n                                    break;\r\n                                }\r\n\r\n                                case this.inventoryButton.id: {\r\n                                    this.menuTitle.innerText = \"INVENTORY\";\r\n                                    this.menuLogo.style.background = \"center / contain no-repeat url(\" + Settings.desktopAssetsPath + \"/Images/overlay_inventory.svg\" + \")\";\r\n\r\n                                    this.showInventoryMenu();\r\n                                    break;\r\n                                }\r\n\r\n                                case this.inviteFriendButton.id: {\r\n                                    this.menuTitle.innerText = \"INVITE FRIENDS\";\r\n                                    this.menuLogo.style.background = \"center / contain no-repeat url(\" + Settings.desktopAssetsPath + \"/Images/overlay_invitefriend.svg\" + \")\";\r\n                                    // this.menuLogo.style.background = \"blue\";\r\n                                    this.showInviteMenu();\r\n                                    break;\r\n                                }\r\n\r\n                                case this.leaderboardButton.id: {\r\n                                    this.menuTitle.innerText = \"LEADERBOARD\";\r\n                                    this.menuLogo.style.background = \"center / contain no-repeat url(\" + Settings.desktopAssetsPath + \"/Images/title_crown.svg\" + \")\";\r\n                                    // this.menuLogo.style.background = \"green\";\r\n                                    this.showLeaderboardMenu();\r\n                                    break;\r\n                                }\r\n\r\n                            }\r\n\r\n                            _.forEach(this.mainMenuButtons, (otherElement: HTMLDivElement) => {\r\n                                if (otherElement != element) {\r\n                                    otherElement.setAttribute(\"clicked\", \"false\");\r\n                                    // this.resetMainButtonStyleOnClick(otherElement);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                );\r\n\r\n                this.backButton.onclick = () => {\r\n                    this.hideElement(this.rightSide);\r\n                    this.hideElement(this.backBg);\r\n                    this.showElement(this.mainButtonsHolder, \"block\");\r\n                }\r\n            }\r\n\r\n\r\n            protected showElement(element: HTMLDivElement, displayType?: string): void {\r\n\r\n                element.style.display = (!displayType) ? \"flex\" : displayType;\r\n            }\r\n\r\n            protected showPlayGameMenu(): void {\r\n                console.log(\"intra la show play\");\r\n                this.showElement(this.backBg);\r\n                this.showElement(this.rightSide);\r\n                this.hideElement(this.mainButtonsHolder);\r\n\r\n                super.showPlayGameMenu();\r\n                // this.showElement(this.tutorialAndShareButtonsMenu);\r\n            }\r\n\r\n            protected showInventoryMenu(): void {\r\n                this.showElement(this.backBg);\r\n                console.log(\"intra la show inventory\");\r\n                this.showElement(this.rightSide);\r\n                this.hideElement(this.mainButtonsHolder);\r\n\r\n                super.showInventoryMenu();\r\n            }\r\n\r\n            protected showLeaderboardMenu(): void {\r\n                this.showElement(this.backBg);\r\n                console.log(\"intra la show leaderboard\");\r\n                this.showElement(this.rightSide);\r\n                this.hideElement(this.mainButtonsHolder);\r\n\r\n                super.showLeaderboardMenu();\r\n            }\r\n\r\n            protected showInviteMenu(): void {\r\n                this.showElement(this.backBg);\r\n                console.log(\"intra la show invite\");\r\n                this.showElement(this.rightSide);\r\n                this.hideElement(this.mainButtonsHolder);\r\n\r\n                super.showInviteMenu();\r\n            }\r\n\r\n            public setVisibleFalse(): void {\r\n                this.mainMenuElementsHolder.style.display = \"none\";\r\n                this.backBg.style.display = \"none\";\r\n            }\r\n\r\n            public setVisibleTrue(): void {\r\n                this.mainMenuElementsHolder.style.display = \"block\";\r\n                this.backBg.style.display = \"flex\";\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n}","/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 2/5/2019\r\n */\r\n\r\nnamespace Framework {\r\n    export module UserInterface {\r\n        export class AbstractScreen {\r\n            protected div: HTMLDivElement;\r\n\r\n            constructor(){};\r\n\r\n            public show(): void {\r\n                this.div.style.display = \"flex\";\r\n            };\r\n\r\n            public hide(): void {\r\n                this.div.style.display = \"none\";\r\n            };\r\n\r\n            public updateText(text:string):void{\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n","///<reference path=\"../../../../Framework/AbstractModules/UserInterface/abstract-screen.ts\"/>\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 2/5/2019\r\n */\r\n\r\n\r\nnamespace Pockey {\r\n    export module UserInterface {\r\n        import AbstractScreen = Framework.UserInterface.AbstractScreen;\r\n\r\n        export class PockeyUiOpponentFoundScreen extends AbstractScreen{\r\n            private roundBeginsText: HTMLDivElement;\r\n            private avatarDiv: HTMLDivElement;\r\n            private nameDiv: HTMLDivElement;\r\n\r\n            constructor() {\r\n                super();\r\n\r\n                this.div = document.getElementById(\"PlayerFoundScreen\") as HTMLDivElement;\r\n                this.avatarDiv = document.getElementById(\"OpponentAvatarImage\") as HTMLDivElement;\r\n                this.nameDiv = document.getElementById(\"PlayerFoundName\") as HTMLDivElement;\r\n                this.roundBeginsText = document.getElementById(\"RoundOneStartsText\") as HTMLDivElement;\r\n            }\r\n\r\n            // public show(): void {\r\n            //     this.div.style.display = \"flex\";\r\n            // }\r\n            //\r\n            // public hide(): void {\r\n            //     this.div.style.display = \"none\";\r\n            // }\r\n\r\n\r\n            public hide(): void {\r\n                super.hide();\r\n                // console.log(\"intra la hide on found screen\");\r\n            }\r\n\r\n            public updateText(text: string): void {\r\n                // console.log(\"la opp screen timeru: \" + text);\r\n                this.roundBeginsText.innerText = \"first round starts in \" + text;\r\n            }\r\n\r\n            public updateAvatar(avatarID: string): void {\r\n\r\n                let avatarPath: string = \"\";\r\n\r\n                _.forEach(PockeySettings.LARGE_AVATARS_ARRAY, (avatarVO: InventoryVO) => {\r\n                    if (avatarVO.id == avatarID) {\r\n                        avatarPath = avatarVO.icon;\r\n                        return true;\r\n                    }\r\n                });\r\n\r\n                this.avatarDiv.style.background = \"center / contain no-repeat #1a4157 url(\" + avatarPath + \")\";\r\n            }\r\n\r\n            public updateOpponentName(): void {\r\n                this.nameDiv.innerText = PockeySettings.OPPONENT_NICKNAME;\r\n            }\r\n        }\r\n    }\r\n}\r\n","///<reference path=\"../../../../Framework/AbstractModules/UserInterface/abstract-screen.ts\"/>\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 2/4/2019\r\n */\r\n\r\n\r\nnamespace Pockey {\r\n    export module UserInterface {\r\n        import AbstractScreen = Framework.UserInterface.AbstractScreen;\r\n\r\n        export class RoundCompleteScreen extends AbstractScreen {\r\n            protected div: HTMLDivElement;\r\n            private textDiv: HTMLDivElement = document.getElementById(\"RoundCompleteText\") as HTMLDivElement;\r\n\r\n            private leftPlayerData: HTMLDivElement;\r\n            private rightPlayerData: HTMLDivElement;\r\n\r\n            constructor() {\r\n                super();\r\n                this.div = document.getElementById(\"RoundCompleteScreen\") as HTMLDivElement;\r\n\r\n            }\r\n\r\n            public updateText(text: string): void {\r\n                // console.log(\"la opp screen timeru: \" + text);\r\n                this.textDiv.innerText = \"get ready for round two in \" + text;\r\n            }\r\n\r\n            // public show(): void {\r\n            //     console.log(\"intra la round two\");\r\n            //     this.div.style.display = \"flex\";\r\n            // }\r\n            //\r\n            // public hide(): void {\r\n            //     this.div.style.display = \"none\";\r\n            // }\r\n\r\n            public updateLeftPlayerData(): void {\r\n\r\n            }\r\n\r\n            public updateRighttPlayerData(): void {\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n","///<reference path=\"../../../Framework/AbstractModules/UserInterface/abstract-user-interface-module.ts\"/>\r\n///<reference path=\"../SignalsModule/pockey-signal-types.ts\"/>\r\n///<reference path=\"../../../Framework/Signals/signals-manager.ts\"/>\r\n///<reference path=\"Screens/pockey-ui-searching-screen.ts\"/>\r\n///<reference path=\"Screens/MainScreen/pockey-ui-main-screen.ts\"/>\r\n///<reference path=\"Screens/GameScreen/pockey-ui-game-screen.ts\"/>\r\n///<reference path=\"Screens/pockey-ui-winning-screen.ts\"/>\r\n///<reference path=\"../SoundModule/pockey-sound-names.ts\"/>\r\n///<reference path=\"Screens/MainScreen/pockey-ui-main-screen-mobile.ts\"/>\r\n///<reference path=\"Screens/pockey-ui-opponent-found-screen.ts\"/>\r\n///<reference path=\"Screens/pockey-ui-round-complete-screen.ts\"/>\r\n/**\r\n *  Edgeflow\r\n *  Copyright 2018 EdgeFlow\r\n *  All Rights Reserved.\r\n *\r\n *  NOTICE: You may not use, distribute or modify this document without the\r\n *  written permission of its copyright owner\r\n *\r\n *  Created by Sandru Andrei on 8/8/2018\r\n */\r\n\r\nnamespace Pockey {\r\n    export module UserInterface {\r\n\r\n        import AbstractUserInterfaceModule = Framework.UserInterface.AbstractUserInterfaceModule;\r\n        import SignalsManager = Framework.Signals.SignalsManager;\r\n        import PockeySignalTypes = Pockey.SignalsModule.PockeySignalTypes;\r\n        import SignalsType = Framework.Signals.SignalsType;\r\n        import Settings = Framework.Settings;\r\n        import PockeySoundURLS = Pockey.Sound.PockeySoundURLS;\r\n        import AbstractScreen = Framework.UserInterface.AbstractScreen;\r\n\r\n        export class PockeyUserInterfaceModule extends AbstractUserInterfaceModule {\r\n\r\n\r\n            private mainScreen: PockeyUiMainScreen;\r\n            private searchingScreen: PockeyUiSearchingScreen;\r\n            private gameScreen: PockeyUiGameScreen;\r\n            private roundCompleteScreen: RoundCompleteScreen;\r\n            private opponentFoundScreen: PockeyUiOpponentFoundScreen;\r\n\r\n            private activeRoundScreen:AbstractScreen;\r\n\r\n            /*private playerLifeUnitsArray: Sprite[];\r\n            private oppLifeUnitsArray: Sprite[];\r\n\r\n\r\n            private playerLifeBar: Sprite;\r\n            private oppLifeBar: Sprite;*/\r\n\r\n            constructor() {\r\n                super();\r\n            }\r\n\r\n            public createElements(): void {\r\n\r\n                if (Settings.isMobile) {\r\n                    this.mainScreen = new PockeyUiMainScreenMobile();\r\n\r\n                }\r\n                else {\r\n                    this.mainScreen = new PockeyUiMainScreen();\r\n\r\n                }\r\n                this.searchingScreen = new PockeyUiSearchingScreen();\r\n                this.gameScreen = new PockeyUiGameScreen();\r\n                this.roundCompleteScreen = new RoundCompleteScreen();\r\n                this.opponentFoundScreen = new PockeyUiOpponentFoundScreen();\r\n                // this.winningScreen = new PockeyUiWinningScreen();\r\n\r\n                // this.addChild(this.mainScreen);\r\n\r\n                // this.addChild(this.gameScreen);\r\n                /*this.playerLifeUnitsArray = [];\r\n                this.oppLifeUnitsArray = [];\r\n\r\n                this.playerLifeBar = this.createLifeBar(this.playerLifeUnitsArray);\r\n                this.playerLifeBar.nickname = \"playerLifeBar\";\r\n                this.playerLifeBar.x = 525;\r\n                this.playerLifeBar.y = 90;\r\n                this.addChild(this.playerLifeBar);\r\n\r\n\r\n                this.oppLifeBar = this.createLifeBar(this.oppLifeUnitsArray);\r\n                this.oppLifeBar.nickname = \"oppLifeBar\";\r\n                this.oppLifeBar.x = this.playerLifeBar.x + 655;\r\n                this.oppLifeBar.y = this.playerLifeBar.y;\r\n                this.addChild(this.oppLifeBar);*/\r\n\r\n\r\n                super.createElements();\r\n            }\r\n\r\n            protected registerSignalsHandlers(): void {\r\n                super.registerSignalsHandlers();\r\n\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.SHOW_MAIN_MENU, this.onShowMainMenu.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.HIDE_MAIN_MENU, this.onHideMainMenu.bind(this));\r\n\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.SHOW_GAME_UI, this.onShowGameMenu.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.HIDE_GAME_UI, this.onHideGameMenu.bind(this));\r\n\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.SHOW_SEARCHING_SCREEN, this.onShowSearchingScreen.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.HIDE_SEARCHING_SCREEN, this.onHideSearchingScreen.bind(this));\r\n                //\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.SHOW_ROUND_COMPLETE_SCREEN, this.onShowWinningScreen.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.HIDE_ROUND_COMPLETE_SCREEN, this.onHideWinningScreen.bind(this));\r\n\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.SHOW_OPPONENT_FOUND_SCREEN, this.onShowOpponentFoundScreen.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.HIDE_OPPONENT_FOUND_SCREEN, this.onHideOpponentFoundScreen.bind(this));\r\n\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.CHANGE_OPPONENT_AVATAR, this.onChangeOpponentAvatar.bind(this));\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.UPDATE_OPPONENT_NAME, this.onUpdateOpponentName.bind(this));\r\n\r\n\r\n                SignalsManager.AddSignalCallback(PockeySignalTypes.UPDATE_CURRENT_ROUND_SCREEN_TEXT, this.onUpdateRoundScreenText.bind(this));\r\n\r\n            }\r\n\r\n            private onUpdateRoundScreenText(params:any):void\r\n            {\r\n                this.activeRoundScreen.updateText(params[0]);\r\n            }\r\n\r\n            private onUpdateOpponentName(name: string): void {\r\n                this.opponentFoundScreen.updateOpponentName();\r\n            }\r\n\r\n            private onChangeOpponentAvatar(avatarPath: string): void {\r\nthis.opponentFoundScreen.updateAvatar(avatarPath);\r\n            }\r\n\r\n            private onShowWinningScreen(): void {\r\n                console.log(\"se arata on show winning!\");\r\n                this.activeRoundScreen = this.roundCompleteScreen;\r\n                this.activeRoundScreen.show();\r\n            }\r\n\r\n            private onHideWinningScreen(): void {\r\n                console.log(\"se ascunde winning screen!\");\r\n\r\n                this.activeRoundScreen.hide();\r\n            }\r\n\r\n            private onShowOpponentFoundScreen(): void {\r\n                this.activeRoundScreen = this.opponentFoundScreen;\r\n                this.activeRoundScreen.show();\r\n            }\r\n\r\n            private onHideOpponentFoundScreen(): void {\r\n                console.log(\"intra la onHideOpponentFoundScreen\");\r\n                this.activeRoundScreen.hide();\r\n            }\r\n\r\n            private onShowSearchingScreen(): void {\r\n                this.searchingScreen.setVisibleTrue();\r\n            }\r\n\r\n            private onHideSearchingScreen(): void {\r\n                this.searchingScreen.setVisibleFalse();\r\n                // this.mainScreen.setVisibleFalse();\r\n            }\r\n\r\n            private onShowMainMenu(): void {\r\n                this.mainScreen.setVisibleTrue();\r\n                SignalsManager.DispatchSignal(SignalsType.PLAY_SOUND, [{soundName: PockeySoundURLS.MAIN_MENU_AMBIANCE}]);\r\n                SignalsManager.DispatchSignal(SignalsType.STOP_SOUND, [{soundName: PockeySoundURLS.IN_GAME_AMBIANCE}]);\r\n\r\n                // this.addChild(this.mainScreen);\r\n            }\r\n\r\n            private onHideMainMenu(): void {\r\n                this.mainScreen.setVisibleFalse();\r\n                // this.removeChild(this.mainScreen);\r\n            }\r\n\r\n            private onShowGameMenu(): void {\r\n                this.gameScreen.show();\r\n                // this.addChild(this.gameScreen);\r\n                SignalsManager.DispatchSignal(SignalsType.STOP_SOUND, [{soundName: PockeySoundURLS.MAIN_MENU_AMBIANCE}]);\r\n                SignalsManager.DispatchSignal(SignalsType.PLAY_SOUND, [{soundName: PockeySoundURLS.IN_GAME_AMBIANCE,\r\n                    loop: true\r\n                }]);\r\n            }\r\n\r\n            private onHideGameMenu(): void {\r\n                this.gameScreen.hide();\r\n                SignalsManager.DispatchSignal(SignalsType.STOP_SOUND, [{soundName: PockeySoundURLS.IN_GAME_AMBIANCE}]);\r\n                SignalsManager.DispatchSignal(SignalsType.PLAY_SOUND, [{soundName: PockeySoundURLS.MAIN_MENU_AMBIANCE,\r\n                    loop: false\r\n                }]);\r\n                // this.removeChild(this.gameScreen);\r\n            }\r\n\r\n            protected onResize(params: any[]): void {\r\n                super.onResize(params);\r\n\r\n                // if (this.mainScreen)\r\n                //     this.mainScreen.onResize();\r\n                // if (this.searchingScreen)\r\n                //     this.searchingScreen.onResize();\r\n                //\r\n                // if (this.winningScreen)\r\n                //     this.winningScreen.onResize();\r\n\r\n            }\r\n\r\n            protected handleDesktopLandscape(): void {\r\n                super.handleDesktopLandscape();\r\n\r\n                if (this.gameScreen)\r\n                    this.gameScreen.handleDesktopLandscape();\r\n            }\r\n\r\n            protected handleMobilePortrait(): void {\r\n                super.handleMobilePortrait();\r\n\r\n                if (this.gameScreen)\r\n                    this.gameScreen.onResizeMobilePortrait();\r\n            }\r\n\r\n            protected handleMobileLandscape(): void {\r\n                super.handleMobileLandscape();\r\n\r\n                if (this.gameScreen)\r\n                    this.gameScreen.onResizeMobileLandscape();\r\n            }\r\n\r\n            /*\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        // private onResizeBackground(params: any[]): void {\r\n                        //     let scaleFactor: number = params[0];\r\n                        //\r\n                        //     // let position: Point = params[1] as Point;\r\n                        //     // let rotation: number = params[2];\r\n                        //     //\r\n                        //     // this.Layer.x = position.x;\r\n                        //     // this.Layer.y = position.y;\r\n                        //     //\r\n                        //     // this.Layer.rotation = rotation;\r\n                        //     // this.Layer.scale.x = scaleFactor;\r\n                        //     // this.Layer.scale.y = scaleFactor;\r\n                        // }\r\n\r\n                        protected createElements(): void {\r\n\r\n                            this.mainScreen = new PockeyUiMainScreen();\r\n                            this.searchingScreen = new PockeyUiSearchingScreen();\r\n                            // this.addChild(this.mainScreen);\r\n\r\n                            // this.gameScreen = new PockeyUiGameScreen();\r\n                            // this.addChild(this.gameScreen);\r\n                            /!*this.playerLifeUnitsArray = [];\r\n                            this.oppLifeUnitsArray = [];\r\n\r\n                            this.playerLifeBar = this.createLifeBar(this.playerLifeUnitsArray);\r\n                            this.playerLifeBar.nickname = \"playerLifeBar\";\r\n                            this.playerLifeBar.x = 525;\r\n                            this.playerLifeBar.y = 90;\r\n                            this.addChild(this.playerLifeBar);\r\n\r\n\r\n                            this.oppLifeBar = this.createLifeBar(this.oppLifeUnitsArray);\r\n                            this.oppLifeBar.nickname = \"oppLifeBar\";\r\n                            this.oppLifeBar.x = this.playerLifeBar.x + 655;\r\n                            this.oppLifeBar.y = this.playerLifeBar.y;\r\n                            this.addChild(this.oppLifeBar);*!/\r\n\r\n\r\n                            super.createElements();\r\n                        }\r\n\r\n\r\n                        */\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\n// \"ball-black.png\"\r\n// \"ball-highlight.png\"\r\n// \"ball-puck-01.png\"\r\n// \"ball-puck-02.png\"\r\n// \"ball-puckInvalid.png\"\r\n// \"ball-scratch.png\"\r\n// \"ball-shadow.png\"\r\n// \"barrier-corner.png\"\r\n// \"barrier-icon.png\"\r\n// \"barrier-side.png\"\r\n// \"rightGoal-shine.png\"\r\n// \"goal_arrowIndicator.png\"\r\n// \"goalie.png\"\r\n// \"penalty-droppuck.png\"\r\n// \"power-bg.png\"\r\n// \"power-color.png\"\r\n// \"powerUp_pocketBlock.png\"\r\n// \"powerUp_speedBuff.png\"\r\n// \"puck-icon.png\"\r\n// \"puck-indicator.png\"\r\n// \"puck_drop.png\"\r\n// \"roundcomplete.png\"\r\n// \"table_english-01.png\"\r\n// \"table_english-reticle.png\"\r\n// \"table_power-01a.png\"\r\n// \"table_power-light1.png\"\r\n// \"table_power-light2.png\"\r\n// \"table_power-light3.png\"\r\n// \"table_power-light4.png\"\r\n// \"ui_icon-arrow.png\"\r\n// \"ui_icon-tipsReg.png\"\r\n// \"ui_versus-empty.png\"\r\n// \"ui_versus-main.png\"\r\n// \"ui_versus-won.png\"\r\n// \"vs.png\" --------------- used","///<reference path=\"../GameFiles/Modules/GameModule/pockey-game-module.ts\"/>\r\n///<reference path=\"../GameFiles/Modules/GameModule/game-manager.ts\"/>\r\n///<reference path=\"../GameFiles/Modules/BackgroundModule/pockey-background-module.ts\"/>\r\n///<reference path=\"../GameFiles/Modules/GameModule/p2-world-manager.ts\"/>\r\n///<reference path=\"../Framework/Utils/mouse-handler.ts\"/>\r\n///<reference path=\"../Framework/Abstracts/layers.ts\"/>\r\n///<reference path=\"../Framework/Settings.ts\"/>\r\n///<reference path=\"../Framework/abstract-entry-point.ts\"/>\r\n///<reference path=\"../GameFiles/Modules/ConnectionModule/pockey-connection-module.ts\"/>\r\n///<reference path=\"../GameFiles/Modules/UserInterface/pockey-user-interface-module.ts\"/>\r\n///<reference path=\"../Framework/Utils/cookie.ts\"/>\r\n///<reference path=\"../Framework/AbstractModules/Connection/database-connector.ts\"/>\r\n\r\nnamespace Pockey {\r\n\r\n    import AbstractEntryPoint = Framework.AbstractEntryPoint;\r\n    import AbstractModule = Framework.Abstracts.AbstractModule;\r\n    import Settings = Framework.Settings;\r\n    import Layers = Framework.Layers;\r\n    import PockeyGameModule = Pockey.GameModule.PockeyGameModule;\r\n    import GameManager = Pockey.GameModule.GameManager;\r\n    import P2WorldManager = Pockey.GameModule.P2WorldManager;\r\n    import PockeyStateMachine = Pockey.StateMachineModule.PockeyStateMachine;\r\n    import SignalsManager = Framework.Signals.SignalsManager;\r\n    import PockeySignalTypes = Pockey.SignalsModule.PockeySignalTypes;\r\n    import MouseHandler = Framework.Utils.MouseHandler;\r\n    import PockeyBackgroundModule = Pockey.Background.PockeyBackgroundModule;\r\n    import PockeyConnectionModule = Pockey.Connection.PockeyConnectionModule;\r\n    import PockeyConnectionSignals = Pockey.SignalsModule.PockeyConnectionSignals;\r\n    import PockeyUserInterfaceModule = Pockey.UserInterface.PockeyUserInterfaceModule;\r\n    import PockeySoundURLS = Pockey.Sound.PockeySoundURLS;\r\n\r\n    export class PockeyEntryPoint extends AbstractEntryPoint {\r\n        private gameModule: AbstractModule;\r\n\r\n\r\n        private fixedTimeStep = 1 / 60;\r\n        private maxSubSteps = 6;\r\n        private lastTimeMilliseconds;\r\n\r\n        // private fixedTimeStep = 1 / 60; // seconds\r\n        // private maxSubSteps = 7; // Max sub steps to catch up with the wall clock\r\n        // private lastTime;\r\n        // public static p2World: p2.World;\r\n\r\n        // private groundBody: p2.Body;\r\n        // private groundBody: p2.Body;\r\n\r\n        // private circleBody: p2.Body;\r\n        constructor() {\r\n            super();\r\n            this.name = \"PockeyEntryPoint\";\r\n        }\r\n\r\n\r\n        protected checkDevice(): void {\r\n            super.checkDevice();\r\n\r\n            if (Settings.isMobile) {\r\n                this.loadjscssfile(\"css/mainMenuScreenMobile.css\", \"css\");\r\n                this.loadjscssfile(\"css/inventoryScreenMobile.css\", \"css\");\r\n                this.loadjscssfile(\"css/leaderboardMobile.css\", \"css\");\r\n                // this.loadjscssfile(\"mainMenuScreenMobile.css\", \"css\");\r\n            }\r\n        }\r\n\r\n        private loadjscssfile(filename, filetype): void {\r\n            /*let fileref:any;\r\n            if (filetype == \"css\") { //if filename is an external CSS file\r\n                fileref = document.createElement(\"link\")\r\n                fileref.setAttribute(\"rel\", \"stylesheet\")\r\n                fileref.setAttribute(\"type\", \"text/css\")\r\n                fileref.setAttribute(\"href\", filename)\r\n            }\r\n            if (typeof fileref != \"undefined\")\r\n                document.getElementsByTagName(\"head\")[0].appendChild(fileref)*/\r\n\r\n            // make a stylesheet link\r\n            let myCSS = document.createElement(\"link\");\r\n            myCSS.rel = \"stylesheet\";\r\n            myCSS.href = filename;\r\n// insert it at the end of the head in a legacy-friendly manner\r\n            document.head.insertBefore(myCSS, document.head.childNodes[document.head.childNodes.length - 1].nextSibling);\r\n        }\r\n\r\n        protected addFontsToLoad(): void {\r\n            super.addFontsToLoad();\r\n\r\n            this.assetsLoader.addFontToLoad(\"troika\");\r\n            this.assetsLoader.addFontToLoad(\"opensansextrabold\");\r\n        }\r\n\r\n        protected addModules(): void {\r\n            //start game module instantiation\r\n            this.gameModule = this.getGameModule();\r\n            this.registerModule(this.gameModule);\r\n            //end of game module instantiation\r\n\r\n            super.addModules();\r\n\r\n\r\n        }\r\n\r\n\r\n        // protected addUIModule(): void {\r\n        //     // super.addUIModule();\r\n        //     this.uiModule = this.getUIModule();\r\n        //     this.registerModule(this.uiModule);\r\n        // }\r\n\r\n        protected getGameModule(): AbstractModule {\r\n            let gameModule = new PockeyGameModule();\r\n            gameModule.Name = \"GameModule\";\r\n            gameModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/pockey_main.json\");\r\n            gameModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/pockey_main.png\");\r\n            gameModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/pockey-decals.json\");\r\n            gameModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/pockey-decals.png\");\r\n            gameModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/pockey-sticks.json\");\r\n            gameModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/pockey-sticks.png\");\r\n            // gameModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/ballTexture.jpg\");\r\n            // gameModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/balls.json\");\r\n            // gameModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/balls.png\");\r\n            // gameModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/color_big.png\");\r\n            gameModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/table_bottom.png\");\r\n            // gameModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/color_big_over.png\");\r\n            // gameModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/color_big_shadow.png\");\r\n            gameModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/goalie_bottom.png\");\r\n            gameModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/goalie_color.png\");\r\n            gameModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/goalie_top.png\");\r\n            gameModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/ballTexture.jpg\");\r\n            // gameModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/balls/balls.json\");\r\n            // gameModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/balls/balls.png\");\r\n            gameModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/table_felt.png\");\r\n            gameModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/table_bumper.png\");\r\n            gameModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/table_border_01.png\");\r\n            gameModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/ballGraphics/puck2.png\");\r\n            gameModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/ui_versus-main.png\");\r\n            gameModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/menu_pockeyball-comet.png\");\r\n            gameModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/menu_sprite-cue.png\");\r\n\r\n            gameModule.addAssetToLoad(PockeySoundURLS.MAIN_MENU_AMBIANCE);\r\n            gameModule.addAssetToLoad(PockeySoundURLS.IN_GAME_AMBIANCE);\r\n            gameModule.addAssetToLoad(PockeySoundURLS.SHOOT_BALL);\r\n            gameModule.addAssetToLoad(PockeySoundURLS.LAST_FIVE_SECONDS);\r\n            gameModule.addAssetToLoad(PockeySoundURLS.OPPONENT_FOUND);\r\n            gameModule.addAssetToLoad(PockeySoundURLS.BALL_TO_BALL_HIT);\r\n            gameModule.addAssetToLoad(PockeySoundURLS.GOALKEEPER_HIT);\r\n            gameModule.addAssetToLoad(PockeySoundURLS.BALL_IN_POCKET);\r\n\r\n            gameModule.Layer = this.getLayer(Layers.GameLayer);\r\n\r\n            return gameModule;\r\n        }\r\n\r\n        protected getUIModule(): AbstractModule {\r\n            let uiModule = new PockeyUserInterfaceModule();\r\n            uiModule.Name = \"PockeyUIModule\";\r\n            // uiModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/pockey_main.json\");\r\n            // uiModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/pockey_main.png\");\r\n            uiModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/menu_background.svg\");\r\n\r\n            /* uiModule.addAssetToLoad(Settings.desktopAssetsPath + \"Fonts/Midtown.eot\");\r\n             uiModule.addAssetToLoad(Settings.desktopAssetsPath + \"Fonts/Midtown.svg\");\r\n             uiModule.addAssetToLoad(Settings.desktopAssetsPath + \"Fonts/Midtown.ttf\");\r\n             uiModule.addAssetToLoad(Settings.desktopAssetsPath + \"Fonts/Midtown.woff\");\r\n             uiModule.addAssetToLoad(Settings.desktopAssetsPath + \"Fonts/Midtown.woff2\");\r\n\r\n             uiModule.addAssetToLoad(Settings.desktopAssetsPath + \"Fonts/OpenSansExtraBold.eot\");\r\n             uiModule.addAssetToLoad(Settings.desktopAssetsPath + \"Fonts/OpenSans-Extrabold.svg\");\r\n             uiModule.addAssetToLoad(Settings.desktopAssetsPath + \"Fonts/OpenSansExtraBold.ttf\");\r\n             uiModule.addAssetToLoad(Settings.desktopAssetsPath + \"Fonts/OpenSans-Extrabold.ttf\");\r\n             uiModule.addAssetToLoad(Settings.desktopAssetsPath + \"Fonts/OpenSans-Extrabold.woff\");\r\n             uiModule.addAssetToLoad(Settings.desktopAssetsPath + \"Fonts/OpenSansExtrabold.woff2\");\r\n\r\n             uiModule.addAssetToLoad(Settings.desktopAssetsPath + \"Fonts/troika.otf\");\r\n             uiModule.addAssetToLoad(Settings.desktopAssetsPath + \"Fonts/Troika.eot\");\r\n             uiModule.addAssetToLoad(Settings.desktopAssetsPath + \"Fonts/Troika.svg\");\r\n             uiModule.addAssetToLoad(Settings.desktopAssetsPath + \"Fonts/Troika.ttf\");\r\n             uiModule.addAssetToLoad(Settings.desktopAssetsPath + \"Fonts/Troika.woff\");\r\n             uiModule.addAssetToLoad(Settings.desktopAssetsPath + \"Fonts/Troika.woff2\");*/\r\n\r\n            // _.forEach(PockeySettings.LARGE_AVATARS_ARRAY, (path: string) => {\r\n            //     uiModule.addAssetToLoad(path);\r\n            // });\r\n\r\n            // uiModule.addAssetToLoad(Settings.desktopAssetsPath + \"Images/pockey-menu_BG.png\");\r\n            uiModule.Layer = this.getLayer(Layers.UILayer);\r\n\r\n            return uiModule;\r\n        }\r\n\r\n        protected getBackgroundModule(): AbstractModule {\r\n            let backgroundModule = new PockeyBackgroundModule();\r\n            backgroundModule.registerBackground(PockeySettings.POCKEY_CUSTOM_BACKGROUND_NAME, Settings.desktopAssetsPath + \"/Images/Backgrounds/game_bg.png\", document.getElementById(\"SecondBackground\") as HTMLDivElement);\r\n\r\n            backgroundModule.Name = \"PockeyBackgroundModule\";\r\n            backgroundModule.addAssetToLoad(Settings.desktopAssetsPath + \"/Images/Backgrounds/game_bg.png\");\r\n            backgroundModule.Layer = this.getLayer(Layers.BackgroundLayer);\r\n\r\n            return backgroundModule;\r\n        }\r\n\r\n\r\n        protected getConnectionModule(): AbstractModule {\r\n            let connectionModule: AbstractModule = new PockeyConnectionModule();\r\n            connectionModule.Name = 'PockeyConnectionModule';\r\n            return connectionModule;\r\n        }\r\n\r\n        /* protected getSoundModule(): Framework.Abstracts.AbstractModule {\r\n             let soundModule: AbstractSoundModule = new AbstractSoundModule();\r\n\r\n             soundModule.Layer = this.getLayer(Layers.DefaultLayer);\r\n\r\n             soundModule.addAssetToLoad(PockeySoundURLS.MAIN_MENU_AMBIANCE);\r\n             soundModule.addAssetToLoad(PockeySoundURLS.IN_GAME_AMBIANCE);\r\n             soundModule.addAssetToLoad(PockeySoundURLS.SHOOT_BALL);\r\n             soundModule.addAssetToLoad(PockeySoundURLS.LAST_FIVE_SECONDS);\r\n             soundModule.addAssetToLoad(PockeySoundURLS.OPPONENT_FOUND);\r\n             soundModule.addAssetToLoad(PockeySoundURLS.BALL_TO_BALL_HIT);\r\n\r\n             return soundModule;\r\n         }*/\r\n\r\n        protected initializeSingletons(): void {\r\n            super.initializeSingletons();\r\n\r\n            PockeyStateMachine.Instance();\r\n            GameManager.Instance();\r\n            MouseHandler.Instance();\r\n            P2WorldManager.Instance();\r\n        }\r\n\r\n\r\n        protected initializePixi(): void {\r\n            P2WorldManager.Instance().world = new p2.World({\r\n                gravity: [0, 0]\r\n            });\r\n\r\n            super.initializePixi();\r\n\r\n            //-------------------------------------\r\n\r\n\r\n            // To animate the bodies, we must step the world forward in time, using a fixed time step size.\r\n// The World will run substeps and interpolate automatically for us, to get smooth animation.\r\n\r\n\r\n// Animation loop\r\n\r\n\r\n            // var groundShape = new p2.Plane();\r\n            // this.groundBody = new p2.Body({\r\n            //     mass: 0\r\n            // });\r\n            // this.groundBody.addShape(groundShape);\r\n\r\n\r\n            // var timeStep = 1/60;\r\n            // setInterval(function(){\r\n            //     P2WorldManager.Instance().world.step(timeStep);\r\n            //     // console.log(\"Circle x position: \" + this.circleBody.position[0]);\r\n            //     // console.log(\"Circle y position: \" + this.circleBody.position[1]);\r\n            //     // console.log(\"Circle angle: \" + this.circleBody.angle);\r\n            // }.bind(this), 1000 * timeStep);\r\n            // requestAnimationFrame(this.animate.bind(this));\r\n\r\n        }\r\n\r\n        // function animate(time){\r\n        //     requestAnimationFrame(animate);\r\n        //\r\n        //     // Compute elapsed time since last render frame\r\n        //     var deltaTime = lastTime ? (time - lastTime) / 1000 : 0;\r\n        //\r\n        //     // Move bodies forward in time\r\n        //     world.step(fixedTimeStep, deltaTime, maxSubSteps);\r\n        //\r\n        //     // Render the circle at the current interpolated position\r\n        //     renderCircleAtPosition(circleBody.interpolatedPosition);\r\n        //\r\n        //     lastTime = time;\r\n        // }\r\n\r\n        protected frameAnimate(): void {\r\n            super.frameAnimate();\r\n\r\n            this.animate(Date.now());\r\n            // if (P2WorldManager.Instance().world)\r\n            //     P2WorldManager.Instance().world.step(PockeySettings.P2_WORLD_STEP);\r\n\r\n            // let d = new Date();\r\n            // var n = d.getTime();\r\n            // this.animate(d.getTime());\r\n\r\n            // P2WorldManager.Instance().world.step(1/60);\r\n            // var timeStep:number = 1/60;\r\n            // setInterval(function(){\r\n            //     P2WorldManager.Instance().world.step(timeStep);\r\n\r\n            // if(this.groundBody)\r\n            // console.log(\"ground body: \" + this.groundBody.position);\r\n\r\n            // if (this.circleBody)\r\n            // console.log(\"circle body: \" + this.circleBody.velocity);\r\n        }\r\n\r\n        // Frame rate independent! Success!\r\n        // var fixedTimeStep = 1 / 60, maxSubSteps = 10, lastTimeMilliseconds;\r\n        // private requestAnimationFrame( animloop(timeMilliseconds):Function){\r\n        //     requestAnimationFrame(animloop);\r\n        //     var timeSinceLastCall = 0;\r\n        //     if(timeMilliseconds !== undefined && this.lastTime !== undefined){\r\n        //         timeSinceLastCall = (timeMilliseconds - this.lastTime) / 1000;\r\n        //     }\r\n        //     P2WorldManager.Instance().world.step(PockeySettings.P2_WORLD_STEP, timeSinceLastCall, this.maxSubSteps);\r\n        //     this.lastTime = timeMilliseconds;\r\n        // }\r\n\r\n        // Animation loop\r\n        private animate(time) {\r\n            /* var timeSinceLastCall = 0;\r\n             if(time !== undefined && this.lastTimeMilliseconds !== undefined){\r\n                 timeSinceLastCall = (time - this.lastTimeMilliseconds) / 1000;\r\n             }\r\n             P2WorldManager.Instance().world.step(this.fixedTimeStep, timeSinceLastCall, this.maxSubSteps);\r\n             this.lastTimeMilliseconds = time;*/\r\n\r\n            let timeSeconds: number = time / 1000;\r\n            this.lastTimeMilliseconds = this.lastTimeMilliseconds || timeSeconds;\r\n            let timeSinceLastCall = timeSeconds - this.lastTimeMilliseconds;\r\n            P2WorldManager.Instance().world.step(this.fixedTimeStep, timeSinceLastCall, this.maxSubSteps);\r\n            // renderBody(body.interpolatedPosition, body.interpolatedAngle);\r\n        }\r\n\r\n\r\n        protected registerSignals() {\r\n            super.registerSignals();\r\n\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.CHECK_USER_DATA);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.INVENTORY_ITEM_UPDATED);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.PLAYER_SIGNED_IN);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.PLAYER_SIGNED_OUT);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.GOOGLE_SIGN_IN);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.GOOGLE_SIGN_OUT);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.FACEBOOK_SIGN_IN);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.FACEBOOK_SIGN_OUT);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.SHOOT_BALL);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.PREPARE_NEXT_TURN);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.BALL_IN_POCKET);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.WHITE_BALL_IN_POCKET);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.FIRST_BALL_FAULT);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.REPOSITION_WHITE_BALL);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.REACTIVATE_STICK);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.STICK_PIVOT_MOBILE_UPDATE);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.STICK_MOBILE_RELEASE);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.HIDE_STICK_POWER_MOBILE);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.SHOW_STICK_POWER_MOBILE);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.WHITE_BALL_REPOSITIONED);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.MOBILE_WHITE_BALL_REPOSITION_CONFIRMED);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.SHOW_WHITE_BALL_POSITION_CONFIRMER);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.HIDE_WHITE_BALL_POSITION_CONFIRMER);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.HIDE_BALL_RAY_GRAPHICS);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.POOLSTICK_ACTIVATED);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.POCKEY_POOL_TABLE_RESIZED);\r\n            SignalsManager.CreateNewSignal(PockeyConnectionSignals.WATCH);\r\n            SignalsManager.CreateNewSignal(PockeyConnectionSignals.SCORE_UPDATE);\r\n            SignalsManager.CreateNewSignal(PockeyConnectionSignals.YOUR_TURN);\r\n            SignalsManager.CreateNewSignal(PockeyConnectionSignals.OPPONENT_SETTINGS);\r\n            SignalsManager.CreateNewSignal(PockeyConnectionSignals.OPPONENT_NEXT_ROUND);\r\n\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.SHOW_MAIN_MENU);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.HIDE_MAIN_MENU);\r\n\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.SHOW_POOLTABLE);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.HIDE_POOLTABLE);\r\n\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.SHOW_SEARCHING_SCREEN);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.HIDE_SEARCHING_SCREEN);\r\n\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.SHOW_GAME_UI);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.HIDE_GAME_UI);\r\n\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.UPDATE_WINNING_MESSAGE);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.SHOW_ROUND_COMPLETE_SCREEN);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.HIDE_ROUND_COMPLETE_SCREEN);\r\n\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.SHOW_OPPONENT_FOUND_SCREEN);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.HIDE_OPPONENT_FOUND_SCREEN);\r\n\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.START_GAME);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.RESET_POOLTABLE);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.RESET_STICK_POWER);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.RESET_GAME_SCREEN);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.RESTART_GAME);\r\n\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.SET_SIDES_TYPE);\r\n\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.UPDATE_PLAYER_NAME);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.UPDATE_PLAYER_SCORE);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.CHANGE_PLAYER_COLOR);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.CHANGE_PLAYER_AVATAR);\r\n\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.UPDATE_OPPONENT_NAME);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.UPDATE_OPPONENT_SCORE);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.CHANGE_OPPONENT_COLOR);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.CHANGE_OPPONENT_AVATAR);\r\n\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.SEND_ELEMENTS_DATA_TO_MANAGER);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.UPDATE_STATE_TEXT);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.UPDATE_CURRENT_PLAYER_TIMER);\r\n            // SignalsManager.CreateNewSignal(PockeySignalTypes.UP);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.UPDATE_UI_TEXT);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.UPDATE_UI_TEXT_ON_WATCH);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.UPDATE_MATCH_CIRCLES);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.UPDATE_PLAYER_COLOR);\r\n\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.SET_TIMESTAMP_ON_WATCH);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.ON_WATCH_FINISHED);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.CREATE_POOLTABLE_STATE);\r\n\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.APPLY_POOLTABLE_STATE);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.UPDATE_CURRENT_ROUND_SCREEN_TEXT);\r\n            SignalsManager.CreateNewSignal(PockeySignalTypes.CHANGE_WHITE_BALL_STATUS);\r\n\r\n            // SignalsManager.CreateNewSignal(PockeySignalTypes.ANIMATE_PUCK_GOAL);\r\n            // SignalsManager.CreateNewSignal(PockeySignalTypes.ANIMATE_PUCK_GOAL_STOP);\r\n            // SignalsManager.CreateNewSignal(PockeySignalTypes.SEND_ELEMENTS_DATA_TO_MANAGER);\r\n            // SignalsManager.CreateNewSignal(PockeySignalTypes.SHOOTING_ENDED);\r\n        }\r\n    }\r\n}\r\n\r\nlet mainModule: Pockey.PockeyEntryPoint;\r\n\r\n// window.onload = function (): void {\r\n//     //@ts-ignore\r\n//     // this.createPreloader();\r\n//\r\n//     mainModule = new Pockey.PockeyEntryPoint();\r\n//     // @ts-ignore\r\n//     // TouchPoint.init();\r\n//     this.onresize = (event) => {\r\n//         mainModule.windowResize(window.innerWidth, window.innerHeight);\r\n//     };\r\n// };\r\n\r\ndocument.addEventListener(\"windowLoaded\", function(){\r\n    // this.createPreloader();\r\n\r\n    mainModule = new Pockey.PockeyEntryPoint();\r\n    // @ts-ignore\r\n    // TouchPoint.init();\r\n    window.onresize = (event) => {\r\n        mainModule.windowResize(window.innerWidth, window.innerHeight);\r\n    };\r\n});\r\n\r\n"]}